{"_default": {"1": {"path": "/README.en.md", "hash": "0d3da2ef84634c42df00e42cb5fa1b3b", "title": "pyjom: Python Content Production Toolkit"}, "2": {"path": "/README.en.md:1-17", "hash": "f050756caa6ee03455d4d717a147e729", "title": "pyjom: Content Production with Python"}, "3": {"path": "/README.en.md:19-49", "hash": "747b49c3c15329baba2e9bd86afbb4a4", "title": "Star History Visualization Guide"}, "4": {"path": "/README.md", "hash": "47356113104431b894ab02f76e986ce1", "title": "pyjom README: Automated Media Content Generation Tool"}, "5": {"path": "/README.md:1-35", "hash": "bf7adcf8c51d2028e61a3c6cea9ebe5b", "title": "Introducing Pyjom: Automated Media Content Generation"}, "6": {"path": "/README.md:37-81", "hash": "253b7194a9de2272b21434c5f28cf14b", "title": "Python Project README: Install, Use, Contribute, Donate"}, "7": {"path": "/externals/bgslib-init.sh", "hash": "9f7ef085d23ab59bc98ea5d8e1a0aa8c", "title": "Bgslib Init: Script for Setting Up bgslibrary"}, "8": {"path": "/externals/detectron2_prebuilt_linux_init.sh", "hash": "1cf0986c84373fcf91845407f0f13247", "title": "Installing Detectron2 with pip on Linux"}, "9": {"path": "/externals/dgl_init.sh", "hash": "2c9d03ce0389b9648c004a63391fa355", "title": "DGL Init Script for Python"}, "10": {"path": "/externals/ffmpeg_libspeex_tensorflow_support.sh", "hash": "c2484d9feb133d7f3daf44c7a416df61", "title": "Custom FFmpeg Build with Libraries and Modules"}, "11": {"path": "/externals/ffmpeg_libspeex_tensorflow_support.sh:1-5", "hash": "f414c0cd881604fb78d3c1a82f949779", "title": "Custom FFmpeg Build with TensorFlow Support"}, "12": {"path": "/externals/ffmpeg_libspeex_tensorflow_support.sh:5-8", "hash": "badf5edb8f5444025f91a93e84627487", "title": "Enabling TensorFlow Support in FFmpeg"}, "13": {"path": "/externals/get_the_heck_ffmpeg.py", "hash": "a6605586b6eebf55ae7d01fd7af7962e", "title": "Automate FFmpeg Dependencies Installation"}, "14": {"path": "/externals/get_the_heck_ffmpeg.py:1-3", "hash": "2a5f3ac62826a68a344309fe2baea751", "title": "Splitting FFmpeg Libraries from Strings"}, "15": {"path": "/externals/get_the_heck_ffmpeg.py:5-20", "hash": "4875ef98e9fbd7a6942753f1f4086542", "title": "Automated FFmpeg Installation"}, "16": {"path": "/externals/init_darknet.sh", "hash": "f96fdefa25f4820f25c6529ed7504f28", "title": "Initialize Darknet Environment"}, "17": {"path": "/externals/init_ffmpeg.sh", "hash": "406b2abff3c924f998ca8c36d5557f76", "title": "Init FFmpeg Libraries with Options"}, "18": {"path": "/externals/init_ffmpeg.sh:1-21", "hash": "a89c830c83297aa66ffee03fff7303e1", "title": "FFmpeg Library Setup Script"}, "19": {"path": "/externals/init_ffmpeg.sh:22-52", "hash": "890d8c17f8634f7ea1afc1b504000b01", "title": "Automatic Library Installation Script"}, "20": {"path": "/externals/init_ffmpeg.sh:53-85", "hash": "637b7ce9db671f0405e5a6bbe0710443", "title": "Preparing FFmpeg Environment: Libraries and Codecs"}, "21": {"path": "/externals/init_ffmpeg.sh:85-93", "hash": "50797ae44351bb83c15b5bccf6494111", "title": "Configuring FFmpeg Options and Toolchain"}, "22": {"path": "/externals/init_ffmpeg.sh:93-96", "hash": "1179f5512b17aca9fc7b1a1318f8dc3c", "title": "Configure FFmpeg Libraries with Externals"}, "23": {"path": "/externals/init_ffmpeg.sh:96-96", "hash": "f73fb57aaf34189bcf5109c96877c3c4", "title": "Enabling FFmpeg Libraries and Options"}, "24": {"path": "/externals/init_ffmpeg.sh:96-104", "hash": "ea881690635e221016b98950e4093791", "title": "Configure & Compile FFmpeg with Enabled Components"}, "25": {"path": "/externals/init_ffmpeg.sh:105-105", "hash": "db550dc59e541c0f1161f354b0e58178", "title": "Initiating FFmpeg Libraries"}, "26": {"path": "/externals/init_opentoolz.sh", "hash": "8d838640d5c3e10b9fe00a5735ae8c30", "title": "Setup OpenToonz Environment"}, "27": {"path": "/externals/netease_api_download.sh", "hash": "9869dcf66e629b7eb7d1b359e03cab1f", "title": "NetEase API Download: Setup Script"}, "28": {"path": "/externals/opencv_init.sh", "hash": "519875f4577d31d153dbd9f85c1c5de4", "title": "Automatic OpenCV Setup"}, "29": {"path": "/externals/opencv_py_reset.sh", "hash": "fcf4d48297a61ae216eeb8ec6b125ddb", "title": "Opencv Python Reset Script"}, "30": {"path": "/externals/opencv_py_reset.sh:1-24", "hash": "5c7a471e77cac849f867343c3beee3f5", "title": "Reset Opencv-Python Environment"}, "31": {"path": "/externals/opencv_py_reset.sh:25-39", "hash": "58e947c4d4b9e13f9f5aba5cc90ea67b", "title": "OpenCV Installation Directories"}, "32": {"path": "/externals/opencv_py_reset.sh:40-54", "hash": "7d829cecbb5040fd23f34e46624ddaa0", "title": "Optimizing Python Package Installation"}, "33": {"path": "/externals/opencv_py_reset.sh:55-60", "hash": "6aee2db9d74daeb65886939a700a73d0", "title": "Installation Options for OpenCV Python Reset Script"}, "34": {"path": "/externals/opencv_rebuild.sh", "hash": "a0e9fb167ddf34167298c78ef4062c9b", "title": "Rebuilding OpenCV with CUDA Support"}, "35": {"path": "/externals/opencv_rebuild.sh:1-27", "hash": "545f8368342defc4dd3fb17bb4410fc0", "title": "Rebuilding OpenCV with CUDA Support"}, "36": {"path": "/externals/opencv_rebuild.sh:28-32", "hash": "db49256e46857b4d3ced10bff67630e6", "title": "OpenCV Rebuild Script Control"}, "37": {"path": "/externals/pybgs_init.sh", "hash": "72e7c369445f1142befba9beb098193f", "title": "Pybgs Installation Script"}, "38": {"path": "/externals/test_import_opencv_site.py", "hash": "eba08f5ce937aa3b488570d440420210", "title": "Automating OpenCV Library Import in Python"}, "39": {"path": "/externals/three_init.sh", "hash": "d61a227f3c0291f0404e10629d57c066", "title": "Updating Three.js with Latest Commit"}, "40": {"path": "/externals/torchrec_init.sh", "hash": "f9c7728a0a47f4093846406eda9a2af5", "title": "TorchRec Init Script"}, "41": {"path": "/pyjom/README.md", "hash": "41b0f054766fa20d38f797ad50d7dd51", "title": "Censored Internet Automation Challenges"}, "42": {"path": "/pyjom/audiotoolbox.py", "hash": "d817fead879545744ca7a13025e0f339", "title": "Audio Duration & Volume Tool"}, "43": {"path": "/pyjom/audiotoolbox.py:1-32", "hash": "8053b35697eca97bdbe91e5eac8ae3a7", "title": "Audio Duration and Volume Average Tool"}, "44": {"path": "/pyjom/audiotoolbox.py:33-61", "hash": "4ad2686c4131dc0826bb5ac53ed09b54", "title": "Audio Volume Detection Tool"}, "45": {"path": "/pyjom/audiotoolbox.py:62-97", "hash": "480163c69fd11a5458cdc405b88680a0", "title": "Adjust Volume of Media Files"}, "46": {"path": "/pyjom/audiotoolbox.py:98-122", "hash": "3c3c1d662c5c13f3b87d3b3cba145dfe", "title": "Volume Normalization and Container Correction"}, "47": {"path": "/pyjom/audiotoolbox.py:123-132", "hash": "d5bcad80d809ab832fc52f2a47997333", "title": "Normalize Audio with Error Handling"}, "48": {"path": "/pyjom/commons.py", "hash": "7902644fcf822eaecbf59e5bde164f55", "title": "Multipurpose Media Processing Python Library"}, "49": {"path": "/pyjom/commons.py:1-58", "hash": "99515afe754fb3e77665698643c3f01e", "title": "Pyjom: Database Connections and Redis Cache"}, "50": {"path": "/pyjom/commons.py:59-96", "hash": "ac7bf9b033800b5e19e6f8a8940229bf", "title": "Redis Key Deletion and Safe Evaluation"}, "51": {"path": "/pyjom/commons.py:97-135", "hash": "5ab9afcbbd97dba161d93d997de3b5fe", "title": "Redis Data Type Handling Functions"}, "52": {"path": "/pyjom/commons.py:136-169", "hash": "7ba6f9d214657ea162d9c28d6d20be8a", "title": "Redis Data Storage and Retrieval"}, "53": {"path": "/pyjom/commons.py:170-210", "hash": "6b5ffd30ce21723bff3efe60fc8018c5", "title": "Interacting with Redis Cached Sets"}, "54": {"path": "/pyjom/commons.py:211-255", "hash": "3d2c55f031b0d7ce2560c8dfc8560da8", "title": "Redis-based Data Cache and Media Bitrate Retrieval"}, "55": {"path": "/pyjom/commons.py:256-290", "hash": "2c3f8934a11f7190371ed89b08ce57ff", "title": "JSON Parsing and Caching in Pyjom Commons"}, "56": {"path": "/pyjom/commons.py:291-323", "hash": "11e557ec8c94a663f8f933721738d123", "title": "File Extension Handler Code Snippet"}, "57": {"path": "/pyjom/commons.py:324-353", "hash": "f02587e81b40185b1d3bfca9392f156f", "title": "Extending Media Mapping with Caching"}, "58": {"path": "/pyjom/commons.py:356-392", "hash": "ced033466b30ffbaf16bef2fa53f1805", "title": "Corrupt Media Filter Scanner"}, "59": {"path": "/pyjom/commons.py:393-423", "hash": "f10c619df13df05df1cad6ab7564c8b0", "title": "Redis LRU Cache with Frame Size Filter"}, "60": {"path": "/pyjom/commons.py:424-457", "hash": "b877050d3c4171ef713cf59f58943ab4", "title": "OpenCV Library Check and Server Wait Function"}, "61": {"path": "/pyjom/commons.py:458-490", "hash": "4e0a884407c43a290a5974f5c4248604", "title": "Message Length Verification and Error Handling"}, "62": {"path": "/pyjom/commons.py:491-526", "hash": "0140e87116a0fb8622d76ddfe38d140c", "title": "Rectangle Overlap Checker and Clamper"}, "63": {"path": "/pyjom/commons.py:529-565", "hash": "0c8c587cb143ed43e5931c2ad71e0897", "title": "Shuffling and Range Functions in pyjom.commons"}, "64": {"path": "/pyjom/commons.py:566-600", "hash": "8c4cd2945af901634cfd7f83045289c5", "title": "Multi-Function Data Processor"}, "65": {"path": "/pyjom/commons.py:601-634", "hash": "400e20eeeadd85a3c3a029b2e5d03981", "title": "Media Information Retrieval via ffprobe and mediainfo"}, "66": {"path": "/pyjom/commons.py:635-676", "hash": "e961f8c66cbd6bc0c057afe8f852479c", "title": "JSON and Dictionary Functions"}, "67": {"path": "/pyjom/commons.py:677-727", "hash": "1f9543090a8a0d29d243a3bc03f06f5a", "title": "Image OCR and List Functions"}, "68": {"path": "/pyjom/commons.py:728-764", "hash": "79e2b928b2bffc74ec77b7ec53f48d5c", "title": "Retrieving YOLOv5 Model Config"}, "69": {"path": "/pyjom/commons.py:765-795", "hash": "5a31b939d7fdcc19fb38b8feefb19491", "title": "Pyjom Template Functions"}, "70": {"path": "/pyjom/commons.py:796-833", "hash": "f306f158bda418e84c1e84d45a6f80a8", "title": "Pyjom Commons Functionality"}, "71": {"path": "/pyjom/commons.py:834-874", "hash": "4c95da361961ee98325ef1f38b8234c3", "title": "File Type and Extension Retrieval Functions"}, "72": {"path": "/pyjom/commons.py:877-917", "hash": "19ce2b29601819c441617f68f73a61aa", "title": "Multifunctional Commons Decorator Tool"}, "73": {"path": "/pyjom/commons.py:918-919", "hash": "93e80655bc70b9eee5c2d98faedc7dd2", "title": "File Write and Logging"}, "74": {"path": "/pyjom/config/__init__.py", "hash": "77760d7903ca03c21f90a7b738a89b2d", "title": "Importing Sina and MediaLang Configurations"}, "75": {"path": "/pyjom/config/medialang/__init__.py", "hash": "7d9404f79fd00bf88a0bb14020b8b1ea", "title": "Importing Media Language Protocols"}, "76": {"path": "/pyjom/config/medialang/protocols.py", "hash": "5b5a22347d8cdedb94a3fd3dbf5140ab", "title": "Medialang Protocols Dictionary"}, "77": {"path": "/pyjom/config/shared.py", "hash": "b1510ca0cbcd70562b3d8dff5e94e7a1", "title": "Initializing Config for Image Detection Components"}, "78": {"path": "/pyjom/config/sina/__init__.py", "hash": "83ed3e61a39bf4620a8864266bdc2754", "title": "SinaWeibo Module"}, "79": {"path": "/pyjom/config/sina/sinaWeibo.py", "hash": "37653ee494fa9607324afe75b585f975", "title": "Sina Weibo API Interactions in Pyjom"}, "80": {"path": "/pyjom/imagetoolbox.py", "hash": "c73dd6fdc7abe5045dfa85df2f452797", "title": "Animal Image Processing Toolbox"}, "81": {"path": "/pyjom/imagetoolbox.py:1-35", "hash": "c9ff61934bbf5ed3f1b54e66e13d707c", "title": "Diagonal Rectangle Image Cropping and Bounding Box Drawing"}, "82": {"path": "/pyjom/imagetoolbox.py:36-67", "hash": "25d51dc9863d6a9a3717a48e7d46da57", "title": "Max Box Detection"}, "83": {"path": "/pyjom/imagetoolbox.py:68-97", "hash": "7a7299c1b243dcea2d52d9b4ad443657", "title": "Universal Image Loader with Resizing"}, "84": {"path": "/pyjom/imagetoolbox.py:98-130", "hash": "287bbb7074c7d2979f7557f1e41cdb19", "title": "Get Image Corners and Text Recognition"}, "85": {"path": "/pyjom/imagetoolbox.py:131-165", "hash": "2e6e309cd486ce3d7c160306745560d2", "title": "Text Detection and Image Processing with EasyOCR"}, "86": {"path": "/pyjom/imagetoolbox.py:166-191", "hash": "7fa3f7a13fb6a00b32f5bbe7ba39846f", "title": "Image Inpainting and Blurring Tool"}, "87": {"path": "/pyjom/imagetoolbox.py:194-225", "hash": "d2429e47108007d626c7816af43a1967", "title": "Text Area Ratio Calculator"}, "88": {"path": "/pyjom/imagetoolbox.py:226-267", "hash": "5e65be13700dc5e389ff1e79a73df3a8", "title": "Image Processing Functions"}, "89": {"path": "/pyjom/imagetoolbox.py:268-307", "hash": "dc52e766b05a82524f48f9e5678523f2", "title": "Random Image Sampling and Reshaping"}, "90": {"path": "/pyjom/imagetoolbox.py:308-340", "hash": "533c3c2d461d2413c77472bad9a89aca", "title": "KMeans Clustering with Error Handling"}, "91": {"path": "/pyjom/imagetoolbox.py:341-369", "hash": "4cf5b1383768701cd69f647c33812dd4", "title": "K-Means Clustering Image Analysis"}, "92": {"path": "/pyjom/imagetoolbox.py:370-403", "hash": "4ff140069573ca52debb26681adc0cfb", "title": "K-Means Image Centrality Scanner"}, "93": {"path": "/pyjom/imagetoolbox.py:404-428", "hash": "ef8975e6d468d91d0c23d13a183172b5", "title": "Resizable Image Scanner"}, "94": {"path": "/pyjom/imagetoolbox.py:429-460", "hash": "b0d62d7af9b68809a22cf0350ba540a4", "title": "Crop Image to Target Width"}, "95": {"path": "/pyjom/imagetoolbox.py:461-487", "hash": "0ed07ae8ed6612d1693b232f9d54e23a", "title": "Resizable Image with Aspect Ratio"}, "96": {"path": "/pyjom/imagetoolbox.py:488-522", "hash": "3fe7caae1be04b6754f6cde7c0811675", "title": "PaddlePaddle ResNet50 Dog/Cat Detector"}, "97": {"path": "/pyjom/imagetoolbox.py:523-552", "hash": "17f080a1e22b989850b9d58c39cd9629", "title": "Bezier PaddleHub Resnet50 Image DogCat Detector Server Checker"}, "98": {"path": "/pyjom/imagetoolbox.py:552-583", "hash": "7b2848ee176299db27097f6c0aa5edc1", "title": "Classify Cats and Dogs with PaddleHub"}, "99": {"path": "/pyjom/imagetoolbox.py:584-625", "hash": "c09b333c2871580d610583a8975f6776", "title": "Dog or Cat Detector: Image Label Reader"}, "100": {"path": "/pyjom/imagetoolbox.py:626-652", "hash": "9970fa71e63e8d53d93b0100c65c26c5", "title": "Cat and Animal Detection Script"}, "101": {"path": "/pyjom/imagetoolbox.py:653-676", "hash": "d5352fcfcd157ff8e6c4c3b65db4135d", "title": "Dog/Cat Detection with Multi-Parameter Exponential Network"}, "102": {"path": "/pyjom/imagetoolbox.py:677-712", "hash": "dbb2bc25a08dd2f1ce5a3df5008d636d", "title": "Bezier Paddle Hub ResNet50 Dog/Cat Detector"}, "103": {"path": "/pyjom/imagetoolbox.py:713-740", "hash": "5ad1fa7db76fcced2d5da3b516fcf39f", "title": "FastAPI Image Classifier App"}, "104": {"path": "/pyjom/imagetoolbox.py:741-766", "hash": "4344039afc1b4d9c596b5fde18119fbf", "title": "Redis-Locked Image Processing with URL Parsing"}, "105": {"path": "/pyjom/imagetoolbox.py:768-786", "hash": "bf2e1e45b60705c991dfb5b4fc5b7f73", "title": "OpenCV Image/Video Reader"}, "106": {"path": "/pyjom/imagetoolbox.py:787-814", "hash": "0a39c7d118caf6f67c1226b17c20bf8a", "title": "Image Load and Processing Tool"}, "107": {"path": "/pyjom/imagetoolbox.py:815-850", "hash": "07cd9954e90020ec5542eb0c49e6d288", "title": "Cropping Images with FastAPI and FFMPEG"}, "108": {"path": "/pyjom/imagetoolbox.py:851-878", "hash": "495d86388f39835d6daedea2c0999c1e", "title": "Crop Extractor Algorithm"}, "109": {"path": "/pyjom/imagetoolbox.py:879-900", "hash": "69c2e394ee0c27833db37d4871712472", "title": "Detecting and Cropping Common Crop Areas"}, "110": {"path": "/pyjom/imagetoolbox.py:901-932", "hash": "1843e800c40776864ba19ec0d4e62386", "title": "Diagonal Rectangle Crop and Blur Detection"}, "111": {"path": "/pyjom/imagetoolbox.py:933-958", "hash": "42b9fe4fd3ead99bc1b94687f902d239", "title": "Blur Detection and Contour Bounding"}, "112": {"path": "/pyjom/imagetoolbox.py:959-996", "hash": "ee062d0eb9af9dfa5524a1862bf5fd97", "title": "Dog and Cat Detection Toolbox"}, "113": {"path": "/pyjom/imagetoolbox.py:997-1031", "hash": "3da934a0ab066e2caecfda478886911b", "title": "Object Detection and Filtering in Images"}, "114": {"path": "/pyjom/imagetoolbox.py:1032-1062", "hash": "d5dc3f371ae5d7f2a94824935f4d6010", "title": "Image Cropper Algorithm"}, "115": {"path": "/pyjom/imagetoolbox.py:1063-1083", "hash": "9a43420ff7b5b51dd447a0e6e248ce1b", "title": "Crop Area Determiner Algorithm"}, "116": {"path": "/pyjom/imagetoolbox.py:1084-1112", "hash": "c19f9d475b5b7e816a2d0f88e5db8aef", "title": "Cover Cropper: Detect, Resize, and Display"}, "117": {"path": "/pyjom/imagetoolbox.py:1113-1145", "hash": "1b80ae15b3b94404b6f80520ca99988f", "title": "Dog-Cat Image Detection Algorithm"}, "118": {"path": "/pyjom/imagetoolbox.py:1146-1173", "hash": "373ce0138a7e7b177b9e3a12768bd95a", "title": "Dog/Cat Detection with Inpainting"}, "119": {"path": "/pyjom/imagetoolbox.py:1174-1198", "hash": "93982a3888980916863b57d62f0be642", "title": "Image Toolbox: Threshold-based Frame Processing and Animal Detection"}, "120": {"path": "/pyjom/imagetoolbox.py:1199-1212", "hash": "431f86aec0582b2ee6668aa9d629ce20", "title": "Area and Detection Threshold"}, "121": {"path": "/pyjom/languagetoolbox.py", "hash": "790a57dc95e52f6f75d5820e75182349", "title": "Multi-Threaded Text Extraction and Paraphrasing"}, "122": {"path": "/pyjom/languagetoolbox.py:1-41", "hash": "b9b804599b4b66d9c20727d6f8f50a48", "title": "Pygame Headless Text Rendering"}, "123": {"path": "/pyjom/languagetoolbox.py:43-74", "hash": "511a8964a44ffceabcdf26720df157a8", "title": "Title: \"Pygame Font with Tesseract OCR\""}, "124": {"path": "/pyjom/languagetoolbox.py:75-107", "hash": "51918374c756db5917181215bcc3d6c1", "title": "Filter Non-Chinese, English, or Japanese Characters"}, "125": {"path": "/pyjom/languagetoolbox.py:108-136", "hash": "0dbfb8ddc2dd3725a33c9a29a0ef4944", "title": "Topics Retriever: Sort, Filter, Store"}, "126": {"path": "/pyjom/languagetoolbox.py:137-162", "hash": "7c27e5244d35dd4ebcdbc394ed47335a", "title": "Topic Model Word Frequency Counts"}, "127": {"path": "/pyjom/languagetoolbox.py:163-194", "hash": "225893fd0e5092144b5873ab08b49fd6", "title": "English Sentence Preprocessing Function"}, "128": {"path": "/pyjom/languagetoolbox.py:195-230", "hash": "d88a0ba18b97b45644ebefd94b22d4b5", "title": "Python Language Toolbox: NLP Functions"}, "129": {"path": "/pyjom/languagetoolbox.py:232-269", "hash": "7fb0bb321995171fcd07934ae8527824", "title": "Text Data Processing with CountVectorizer and LDA"}, "130": {"path": "/pyjom/languagetoolbox.py:270-306", "hash": "87abe1ad9a5c8220efd9eba4975ab30d", "title": "Stop Words and Chinese Topic Modeling"}, "131": {"path": "/pyjom/languagetoolbox.py:307-343", "hash": "34a85b063ba128b98798f78487ff56fc", "title": "Text Preprocessing and Topic Modeling in Python"}, "132": {"path": "/pyjom/languagetoolbox.py:346-385", "hash": "8e2407afa24c193553c6759686ca316b", "title": "Paraphrasing API Integration in Python"}, "133": {"path": "/pyjom/languagetoolbox.py:386-423", "hash": "14e8132522e50a3baadd65bc5a811ffb", "title": "ClueAI API Paraphraser Function"}, "134": {"path": "/pyjom/languagetoolbox.py:426-466", "hash": "c42a93679d59a76d3378b81ccdf58da2", "title": "Baidu Translation and Detection Toolbox"}, "135": {"path": "/pyjom/languagetoolbox.py:467-505", "hash": "97fb60972a84c70c4fa8a475316a5d46", "title": "Parallel Paraphrasing with Baidu Translate Model"}, "136": {"path": "/pyjom/languagetoolbox.py:507-533", "hash": "5a67a3f514146ec381ba225dde4641af", "title": "Multi-Level Paraphrase Generator"}, "137": {"path": "/pyjom/languagetoolbox.py:534-559", "hash": "72b1322aadfaf63126923453d8156106", "title": "Paraphraser Function: Language Toolbox"}, "138": {"path": "/pyjom/languagetoolbox.py:560-581", "hash": "970ebf1673870a84c244ca639c7b6e66", "title": "Paraphrase Checking and Exception Handling"}, "139": {"path": "/pyjom/lyrictoolbox.py", "hash": "e374df6fc23e2f8712d64b040a5af4ae", "title": "Automated Lyric Editing and Preview Tool"}, "140": {"path": "/pyjom/lyrictoolbox.py:1-47", "hash": "8e5cab0ffb344199ed0717f783d24dac", "title": "Pyjom: Lyric Toolbox - Punctuation & Duration"}, "141": {"path": "/pyjom/lyrictoolbox.py:48-88", "hash": "47618ee2ea876666237788d984548f6e", "title": "LRC Lyrics Extraction and Timing"}, "142": {"path": "/pyjom/lyrictoolbox.py:89-119", "hash": "09f71c757aab1db1a473ecc0f8dc83d2", "title": "Lyric Duration Calculator & Updater"}, "143": {"path": "/pyjom/lyrictoolbox.py:120-150", "hash": "29be42e4938930bc111e9df3056cfe87", "title": "Lyric Splitter and Language Detector"}, "144": {"path": "/pyjom/lyrictoolbox.py:151-182", "hash": "c19b21fd4721623d1ea08650c5d71f2d", "title": "Bilingual Lyrics Checker"}, "145": {"path": "/pyjom/lyrictoolbox.py:183-207", "hash": "210764e4adf163d10975b176672c8e0f", "title": "Detect Language with Libraries"}, "146": {"path": "/pyjom/lyrictoolbox.py:208-233", "hash": "109e1104ec2a7de377f60ef866575b10", "title": "Bilingual Lyrics Classifier"}, "147": {"path": "/pyjom/lyrictoolbox.py:234-266", "hash": "43d902deea9f406eb0d556ac8da2e363", "title": "Translate Text with Optional Backend"}, "148": {"path": "/pyjom/lyrictoolbox.py:267-298", "hash": "d6ad1bd2cbaac3055b1748eb8205d7fb", "title": "Server Health Check Function"}, "149": {"path": "/pyjom/lyrictoolbox.py:299-334", "hash": "e4d59e9ea9a8fb4444c471e09677f36f", "title": "Lyric Translation and Censorship Tool"}, "150": {"path": "/pyjom/lyrictoolbox.py:335-362", "hash": "7f2ef2f2cc8cb7bcfdae2e8394d1ffda", "title": "Translate and Compare Lyric Array Function"}, "151": {"path": "/pyjom/lyrictoolbox.py:363-395", "hash": "b3fe6c1d60c19d49dbab13a5a86e46e8", "title": "Default Style Configurations for Subtitles"}, "152": {"path": "/pyjom/lyrictoolbox.py:396-420", "hash": "61e256c306f4fba2f18996f5cdef47e7", "title": "Ass Template Configuration"}, "153": {"path": "/pyjom/lyrictoolbox.py:421-447", "hash": "eb1b519625349041d7422a08e89851e7", "title": "Leadin and Leadout Effects for Lyrics"}, "154": {"path": "/pyjom/lyrictoolbox.py:448-480", "hash": "96653f48be85c5ad283d868e0d80f2b9", "title": "Lyric Animation Code: Syllable Timing and Color Effects"}, "155": {"path": "/pyjom/lyrictoolbox.py:481-512", "hash": "5d3348aad70e02f3f29fc05914d43c20", "title": "Rotation and Animation Effects in Lyric Toolbox"}, "156": {"path": "/pyjom/lyrictoolbox.py:513-538", "hash": "bc0750041776f7ee6383a4a4071a2b71", "title": "Sinusoidal Syllable Overlays Calculator"}, "157": {"path": "/pyjom/lyrictoolbox.py:539-567", "hash": "1e36b86736edc02bddd132d8460a3248", "title": "Fade-out Lyric Renderer"}, "158": {"path": "/pyjom/lyrictoolbox.py:568-595", "hash": "b213501e3efb801f0bc73d5a9b20ba6d", "title": "Leadout Effect Lyric Adjuster"}, "159": {"path": "/pyjom/lyrictoolbox.py:596-624", "hash": "391fa23613c8ffd63ca574a380c379d0", "title": "Lead-In Lyric Animation Tool"}, "160": {"path": "/pyjom/lyrictoolbox.py:625-658", "hash": "96dcfe22a8db4076a7295dfbae42d892", "title": "Lyric Line Effect Generator"}, "161": {"path": "/pyjom/lyrictoolbox.py:659-690", "hash": "c0803b8f86a303abe9a52f52aa41f64a", "title": "Dynamic Lyric Rendering Tool"}, "162": {"path": "/pyjom/lyrictoolbox.py:691-724", "hash": "37cc6feece61ad5c522592c4b0bf86c9", "title": "Lyric Timing and Formatting Tool"}, "163": {"path": "/pyjom/lyrictoolbox.py:725-762", "hash": "a0f3679365c79284f2a8cec5ab712de7", "title": "Randomized Text Clipping and Colorization"}, "164": {"path": "/pyjom/lyrictoolbox.py:763-790", "hash": "8bc08170aa60409586e99222c6136f09", "title": "Line Alignment Check and Modification"}, "165": {"path": "/pyjom/lyrictoolbox.py:791-811", "hash": "43c638010e9aa515f5801c9cf0ce9f8d", "title": "Lyric Preprocessing Filter"}, "166": {"path": "/pyjom/lyrictoolbox.py:812-839", "hash": "9cff805bf1d9f0161e78b9abadbcbdeb", "title": "Pyjom: Lyric Toolbox Word Processing"}, "167": {"path": "/pyjom/lyrictoolbox.py:840-863", "hash": "8d681b1f6d26f1d7b06363df514f69d6", "title": "Absolute Center Shift Calculator"}, "168": {"path": "/pyjom/lyrictoolbox.py:864-883", "hash": "345fac43b4b938548fac161bdcdd69d1", "title": "Lyric Syllable Analyzer"}, "169": {"path": "/pyjom/lyrictoolbox.py:884-902", "hash": "f479563eb5fd649f32e342233ec7f8e5", "title": "Lyric Center Point Calculator"}, "170": {"path": "/pyjom/lyrictoolbox.py:904-929", "hash": "50df9fec5fa9270cfdcadf8d291d1e39", "title": "Syllable-Aware Lyric Translation Code"}, "171": {"path": "/pyjom/lyrictoolbox.py:930-955", "hash": "a7bfc1071113cb272e50f14de1f9cb45", "title": "ASS Lyrics Translation and Formatting Tool"}, "172": {"path": "/pyjom/lyrictoolbox.py:958-988", "hash": "7b1420f4ebda211465c4db084a0cebec", "title": "ASS Script Preview and Conversion Tool"}, "173": {"path": "/pyjom/lyrictoolbox.py:989-1027", "hash": "bf8f52e835c83fc61e7d8127fdf43ecb", "title": "Lyric Processing for LRC Files"}, "174": {"path": "/pyjom/lyrictoolbox.py:1028-1056", "hash": "4fad283cec542f7d7fe5747b73bb95f4", "title": "Clean LRC Subtitles Function"}, "175": {"path": "/pyjom/lyrictoolbox.py:1057-1091", "hash": "fec05865ded3a7673239a04a75d49e40", "title": "Continuous Lyrics Parser"}, "176": {"path": "/pyjom/lyrictoolbox.py:1093-1113", "hash": "03d0f5bbe4212d0ba5ca19a8743b0d1f", "title": "Filter and Extract Lyrics from LRC File"}, "177": {"path": "/pyjom/lyrictoolbox.py:1114-1141", "hash": "06043c1301181f1c99a83069b2ce615e", "title": "Lyric Toolbox LRC Formatting"}, "178": {"path": "/pyjom/lyrictoolbox.py:1142-1169", "hash": "7c627cc65f9154299b00ad36b467ffc8", "title": "Lyric Cut Span Calculator"}, "179": {"path": "/pyjom/lyrictoolbox.py:1170-1191", "hash": "2157788cfd6b3c842f3205d112af1cdf", "title": "Span Subdivision and Merging Algorithm"}, "180": {"path": "/pyjom/lyrictoolbox.py:1192-1201", "hash": "86cc1dea908f084f53709a07a8bcac4b", "title": "Merging and Appending New Spans"}, "181": {"path": "/pyjom/main.py", "hash": "5c6a52913bf70ab624e6f4958ee00634", "title": "Dynamic Content Processing with Pyjom"}, "182": {"path": "/pyjom/main.py:1-31", "hash": "ddc7bb2b55ec1be60c195191ff93a319", "title": "Multi-Purpose Content Producer Class"}, "183": {"path": "/pyjom/main.py:32-62", "hash": "81b23d52129448767b1cd07d9e1c49aa", "title": "Dynamic Method Processing and Content Production"}, "184": {"path": "/pyjom/main.py:63-88", "hash": "2c84f6be4c8bfff4e7983925601fc6da", "title": "Feedback Collection and Optimization Code"}, "185": {"path": "/pyjom/main.py:89-117", "hash": "56a14516dbfe8a69999f306331b6ecd3", "title": "ContentReviewer Class: Fetch, Review, Optimize"}, "186": {"path": "/pyjom/main.py:118-140", "hash": "b629285a6302a34fb39742436c01e88d", "title": "Optimized Content Fetcher"}, "187": {"path": "/pyjom/main.py:141-165", "hash": "d35078d3ecb388ac82732d73a6b78f4a", "title": "Logging and Parsing Review Data"}, "188": {"path": "/pyjom/mathlib.py", "hash": "7d1e688263eb659c1408554526133e70", "title": "Advanced Time Series Smoothing Library"}, "189": {"path": "/pyjom/mathlib.py:1-40", "hash": "71a1a72799005896cdabb7866a28e2f7", "title": "Utility Functions for Numerical Operations"}, "190": {"path": "/pyjom/mathlib.py:41-66", "hash": "4739003b8d3b66c9450be559615788e3", "title": "Smooth Time Series with KalmanFilter"}, "191": {"path": "/pyjom/mathlib.py:68-94", "hash": "1deca40fe996f83f37a06e4659aea3cd", "title": "Merging and Converting Intervals in Python"}, "192": {"path": "/pyjom/mathlib.py:95-113", "hash": "c09012562330c00a92702405406e8ad4", "title": "Boundary Marker Dictionaries"}, "193": {"path": "/pyjom/mathlib.py:115-136", "hash": "11814fc199dd50aa910357561a307829", "title": "Unifying and Sorting Boundaries"}, "194": {"path": "/pyjom/mathlib.py:137-163", "hash": "b3beed8c0290c8db1e1bfb89eb49c353", "title": "Interval Categorization Algorithm"}, "195": {"path": "/pyjom/mathlib.py:164-190", "hash": "0bdb5808badcc07b5d554213bd5fdfe7", "title": "Merging Overlapping Ranges: Efficiently Combining Intervals"}, "196": {"path": "/pyjom/mathlib.py:191-219", "hash": "003fbdd5b46b2a6758f2464f1e378ccc", "title": "Merge and Filter Overlapping Ranges"}, "197": {"path": "/pyjom/mathlib.py:220-244", "hash": "d6a58c83d5e00713154268603e0a25ff", "title": "Merging and Sorting Ranges in Commands"}, "198": {"path": "/pyjom/mathlib.py:245-274", "hash": "0c75937718030559911a8af7ac2ce991", "title": "Bezier Curve Evaluator"}, "199": {"path": "/pyjom/mathlib.py:275-303", "hash": "ff396b6a890990f3f4b6d35f837014e7", "title": "Multi-Input Exponential Network Averaging"}, "200": {"path": "/pyjom/mathlib.py:304-322", "hash": "5c05a688172bc0e6019d001d16c48ac1", "title": "Moving Average Peak Detector"}, "201": {"path": "/pyjom/medialang/__init__.py", "hash": "405db3d32b260cc06e9af73f0b95894f", "title": "Media Language Processing Imports"}, "202": {"path": "/pyjom/medialang/__main__.py", "hash": "72c05419cb043df798c745cb8b5f0dba", "title": "Medialang File Parsing and Prettification"}, "203": {"path": "/pyjom/medialang/commons.py", "hash": "18ec667286a2c0bc016a47463917ba53", "title": "Medialang Commons: Serialization and Error Handling"}, "204": {"path": "/pyjom/medialang/core.py", "hash": "0f3ade35fc615801cd019f28c421f170", "title": "Medialang Core Classes and Functionalities"}, "205": {"path": "/pyjom/medialang/core.py:1-39", "hash": "d531e8a1469adffc26844685496a5481", "title": "Pyjom: Media Language Item Storage and Manipulation"}, "206": {"path": "/pyjom/medialang/core.py:41-75", "hash": "5bca914d5df7b91be5b9308a085b152b", "title": "Classes with Representation and Appending in Python"}, "207": {"path": "/pyjom/medialang/core.py:76-110", "hash": "2f95d829eed55fa385decac71f60f151", "title": "Medialang Object Initialization"}, "208": {"path": "/pyjom/medialang/core.py:111-138", "hash": "89a60d6c9af54194cc4cc896ad205b78", "title": "Ensures Valid Script or Path"}, "209": {"path": "/pyjom/medialang/core.py:139-164", "hash": "1b8fcb1aeff539bd968fd19f750a7414", "title": "Line-Limiting Data Formatter"}, "210": {"path": "/pyjom/medialang/core.py:165-189", "hash": "9c4dd109ee8ac2b0d71100e2e72fcd1a", "title": "Nested List Formatter"}, "211": {"path": "/pyjom/medialang/core.py:190-215", "hash": "542dca9ca81125d463f7f86907b31aa5", "title": "Code Formatter and Syntactic Fixes"}, "212": {"path": "/pyjom/medialang/core.py:216-242", "hash": "ac8de14e5b4cf015cd202fb384363a6d", "title": "Max Indent Level Finder and Formatter"}, "213": {"path": "/pyjom/medialang/core.py:243-271", "hash": "2482b34aeacfcea02c002787c9f3dc07", "title": "String Replacements for Proper Syntax"}, "214": {"path": "/pyjom/medialang/core.py:272-303", "hash": "7ca7785f2e475dd0d4ccefa7c53504bd", "title": "Regular Expression Item Parser"}, "215": {"path": "/pyjom/medialang/core.py:304-328", "hash": "3760400d8428a3c9578a92a1d8d1c584", "title": "Line-by-line String to Dictionary Converter"}, "216": {"path": "/pyjom/medialang/core.py:329-355", "hash": "5e47f2051f5678d4fd4eadee1c69428a", "title": "Parsing Code in Medialang Core"}, "217": {"path": "/pyjom/medialang/core.py:356-381", "hash": "3401fdb724804bead924a845e9bf30e7", "title": "Error Handling in Script Parser"}, "218": {"path": "/pyjom/medialang/core.py:382-411", "hash": "5e2c79b5bd8bc6ae9c2256b5ea71fb4c", "title": "Utility Functions in Medialang Module"}, "219": {"path": "/pyjom/medialang/core.py:412-435", "hash": "93c20de3f450e3bd75e3667cc438256e", "title": "Script Execution Function"}, "220": {"path": "/pyjom/medialang/core.py:436-452", "hash": "547ec121bcc46be13b70ad8bb44654fd", "title": "Media Processing Data Arrays"}, "221": {"path": "/pyjom/medialang/core.py:453-474", "hash": "28d1be43793f0a16941bd53e835ffe7a", "title": "Script Execution Function"}, "222": {"path": "/pyjom/medialang/core.py:475-487", "hash": "665e730f958bddb4d83f13869171e691", "title": "Resource Parsing and Error Handling in Medialang"}, "223": {"path": "/pyjom/medialang/functions/__init__.py", "hash": "5b7aa57ba6ac07054f1c11c96e2a6a3b", "title": "Medialang Functions Dictionary"}, "224": {"path": "/pyjom/medialang/functions/detectors/__init__.py", "hash": "4340a1b87f7079ae03c27175d6dcff19", "title": "Medialang Detector Imports"}, "225": {"path": "/pyjom/medialang/functions/detectors/__init__.py:1-36", "hash": "188a725b08a57abd51a1b07cd0a41031", "title": "Detector Dictionary Initialization"}, "226": {"path": "/pyjom/medialang/functions/detectors/__init__.py:37-46", "hash": "44bdce24d27f36c323ef656ac1d92e01", "title": "Media Language Detector Initialization and Processing"}, "227": {"path": "/pyjom/medialang/functions/detectors/blackoutDetector.py", "hash": "6172e659dbda7b10b4ff1b0c0289dff0", "title": "Blackout Detector: OpenCV Media Analysis"}, "228": {"path": "/pyjom/medialang/functions/detectors/blackoutDetector.py:1-30", "hash": "abf933c9609bf371b294c1b2a588a5de", "title": "Blackout Score Calculator & Detector"}, "229": {"path": "/pyjom/medialang/functions/detectors/blackoutDetector.py:31-54", "hash": "869871734f10ab230274fc27010f47b8", "title": "Blackout Detector: Media Iteration and Detection"}, "230": {"path": "/pyjom/medialang/functions/detectors/blackoutDetector.py:55-57", "hash": "ba3fdd13d2315c003d900b85ebe0be39", "title": "Update Metadata in Result Dictionary"}, "231": {"path": "/pyjom/medialang/functions/detectors/entityDetector.py", "hash": "8c2c8ccc14b9a91fd7768ce1c2f842ad", "title": "Entity Detector with Levenshtein's Algorithm"}, "232": {"path": "/pyjom/medialang/functions/detectors/entityDetector.py:1-29", "hash": "d7b183fa926a5740a89b064e0a7c1ff3", "title": "Text Splitting and Entity Detection Functions"}, "233": {"path": "/pyjom/medialang/functions/detectors/entityDetector.py:30-70", "hash": "c2d88dae52f74ca6538ed16234f32c9a", "title": "Multifunctional Text Processing: EntityDetector"}, "234": {"path": "/pyjom/medialang/functions/detectors/entityDetector.py:71-104", "hash": "c5a78b6b450105efba678ce0321e7216", "title": "Textual Change Detection Functions"}, "235": {"path": "/pyjom/medialang/functions/detectors/entityDetector.py:105-128", "hash": "c11042f55b91888a166f0defa233acb4", "title": "Entity Detector: Overlapping Location Check"}, "236": {"path": "/pyjom/medialang/functions/detectors/entityDetector.py:129-142", "hash": "b45791ec75e05a6509d2d50b2f26be2c", "title": "Entity Detection Logic Review"}, "237": {"path": "/pyjom/medialang/functions/detectors/entityDetector.py:143-161", "hash": "19dfd4d5ea16407b673aa0b80166c383", "title": "Video Entity and Movement Detector"}, "238": {"path": "/pyjom/medialang/functions/detectors/entityDetector.py:162-183", "hash": "84af3d29b48394630f72842c94d4d846", "title": "Entity Text Change Detector"}, "239": {"path": "/pyjom/medialang/functions/detectors/entityDetector.py:184-200", "hash": "6eb6314521067a78382dfe58788cbd0f", "title": "Duplicate Entity Detection Algorithm"}, "240": {"path": "/pyjom/medialang/functions/detectors/entityDetector.py:201-221", "hash": "be61220988ec3ab1af862ef057d2418f", "title": "Block Variable Initialization"}, "241": {"path": "/pyjom/medialang/functions/detectors/entityDetector.py:222-237", "hash": "9bb41f43f21fe858452a30414bac4c4b", "title": "Dynamic Text Detection Block Initialization"}, "242": {"path": "/pyjom/medialang/functions/detectors/entityDetector.py:238-254", "hash": "282ba07ad59c6373d8f9a2310a3a7f67", "title": "Entity Detector Function"}, "243": {"path": "/pyjom/medialang/functions/detectors/entityDetector.py:255-283", "hash": "0d9cab92e375d58b238553dc89105610", "title": "Static OCR Combining: WordNinja Integration"}, "244": {"path": "/pyjom/medialang/functions/detectors/entityDetector.py:284-301", "hash": "b601680e3ac16b51ee6e83f149d88f18", "title": "Dynamic Text Detection Merging"}, "245": {"path": "/pyjom/medialang/functions/detectors/entityDetector.py:302-309", "hash": "5c571f4ca5f2f89b524d4d6f3d5e699a", "title": "Checking and Updating Entity Detector"}, "246": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py", "hash": "a2cd49d37bfa157e97708256f5ff8c46", "title": "Frame Border Detector Algorithm"}, "247": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:1-26", "hash": "c844ff45aa0560e3146790030c495000", "title": "Gaussian Blur and Edge Detection for Square Objects"}, "248": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:27-54", "hash": "41a97c79743b96fcbb6ea35157a377e8", "title": "Frame Border Detector Algorithm"}, "249": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:55-83", "hash": "0c6a1a5799a4c0a45686cd60e0b87de8", "title": "Trigonometric Line Calculator"}, "250": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:84-105", "hash": "9505d5f9f063f774b8480580b94bf310", "title": "Rectangle Detector Function"}, "251": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:107-122", "hash": "36fa0da65533d8baa1dc7f5b14c8dd4c", "title": "Rectangle Merging Function"}, "252": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:123-146", "hash": "cf46ec55dd3ec1979b43cbc54f38d93d", "title": "Frame Border Detector"}, "253": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:147-164", "hash": "408eb244fd306f78d08ee633831e28c8", "title": "Rectangle Detection and Processing Function"}, "254": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:164-182", "hash": "61f95ccff03956736c5782a1855b1a1a", "title": "Reversed Rectangle Sorter"}, "255": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:183-209", "hash": "cb070934c9cde3c40ade9f16c370aa5d", "title": "Rectangle Iteration and Filtering"}, "256": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:210-228", "hash": "9337ac22ef8ac819b7a2df7d399bd7bc", "title": "Update Rectangle and Compute Differences"}, "257": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:229-252", "hash": "8ace6d36ac70367f58adad45bf827491", "title": "Frame Border Detector Algorithm"}, "258": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:253-281", "hash": "5250c693611310377233e2997de7027b", "title": "Frame Border Detection with OCR and Polygon Testing"}, "259": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:282-308", "hash": "024ad50eb40c7178967ea66a53156943", "title": "Polygon and OCR Rectangle Intersection Detection"}, "260": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:309-336", "hash": "db5451ea7c93855ce265dc775e990d91", "title": "Rectangle Removal for OCR in Frame Border Detection"}, "261": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:337-362", "hash": "27dad1c73894d5243cb0289c4714bd92", "title": "Edge Detection and Line Identification"}, "262": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:363-391", "hash": "6451212d9a4f172a6ab021e8344a41d2", "title": "Theta-Filtered Line Detection"}, "263": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:392-417", "hash": "024de491ae9c26a3c0232bc225ae6139", "title": "Line Coordinate Calculator and Detector"}, "264": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:418-439", "hash": "9ca40c02a16f9d6542143d2785eaf1a6", "title": "Filtering Vertical and Horizontal Line Data"}, "265": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:440-460", "hash": "f5c45408f7b3abe62d93629b83dc46ef", "title": "Updating Line Data and Visualization"}, "266": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:461-481", "hash": "3dad12ef5901e2b256abb836f3cd1142", "title": "Rectangle Formation from Line Pairs"}, "267": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:482-500", "hash": "cd47f4bd9e3eb0e0b3eb927603d460df", "title": "Rectangle Life Threshold Detection"}, "268": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:501-529", "hash": "279a46867edfda3b238e8361f8622e42", "title": "Frame Border Detection Algorithm"}, "269": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:530-559", "hash": "e8ad884202c03da75050a04e78575273", "title": "Frame Border Detection via Video Processing"}, "270": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:560-588", "hash": "18506634441b615d1063aadebd04f856", "title": "Video Frame Processing with EMA"}, "271": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:589-612", "hash": "6f714d172867ee4be3a40620a6e2e543", "title": "Continuous Frame Analysis and Contour Detection"}, "272": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:613-634", "hash": "b4c11fc0ccdc2a641faf2a13d980ae2a", "title": "Bounding Box Threshold Calculation"}, "273": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:635-655", "hash": "ae9f50434eecb882d8a4fcb282280a4d", "title": "Frame Boundary Detection and Update"}, "274": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:656-674", "hash": "d409dafdf7e925c9ce61fe0259b8745d", "title": "Frame Border Detection"}, "275": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:675-699", "hash": "cd8b64020922e74ea9e2c787debbd6ec", "title": "Frame Border Detection Algorithm"}, "276": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:700-725", "hash": "df0036a8cf153c57bdf64aa0ffdec541", "title": "Frame Border Detector Function"}, "277": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:726-744", "hash": "921c6834be485ebbf178eb63c8c04bec", "title": "Frame Border Detection"}, "278": {"path": "/pyjom/medialang/functions/detectors/frameborder_Detector.py:745-755", "hash": "e798c7143ebcee2cadac9ee0c3a07b0e", "title": "Selects Detector Model Based on Input"}, "279": {"path": "/pyjom/medialang/functions/detectors/mediaDetector.py", "hash": "e626537ef071781ae60c4bc281ce354f", "title": "Video Frame Iterator: Media Detector Function"}, "280": {"path": "/pyjom/medialang/functions/detectors/mediaDetector.py:1-31", "hash": "dedee9b4977a52a1336ead30c2194481", "title": "Video Frame Iterator with Timestep"}, "281": {"path": "/pyjom/medialang/functions/detectors/mediaDetector.py:32-60", "hash": "d80bbf8fb5d8422795ea68c8e064a613", "title": "Video Frame Processor with PaddleOCR"}, "282": {"path": "/pyjom/medialang/functions/detectors/mediaDetector.py:61-61", "hash": "5ed762440b82a79c02232ace7aae9b25", "title": "Code Returns mdata and Metadata Variables"}, "283": {"path": "/pyjom/medialang/functions/detectors/subtitleDetector.py", "hash": "a80e0f15db360811790221c15903ef18", "title": "Subtitle Detection with PaddleOCR"}, "284": {"path": "/pyjom/medialang/functions/detectors/subtitleDetector.py:1-34", "hash": "1e2235a617bc5af2645dace4143b2d57", "title": "Subtitle Detection with PaddleOCR"}, "285": {"path": "/pyjom/medialang/functions/detectors/subtitleDetector.py:35-58", "hash": "ca63ef0a41dde57b196f6b13627bf186", "title": "Media Subtitle Detection Algorithm"}, "286": {"path": "/pyjom/medialang/functions/detectors/subtitleDetector.py:59-70", "hash": "980b5687bf8adc3b575f1d53930ef040", "title": "StablePaddleOCR-Based Subtitle Detection"}, "287": {"path": "/pyjom/medialang/functions/detectors/videoDiffDetector.py", "hash": "2d95ccafe938627d325176fd6b722bec", "title": "Video Difference Detector"}, "288": {"path": "/pyjom/medialang/functions/detectors/videoDiffDetector.py:1-24", "hash": "a9a9a8718b486be14a14e20254c6bed3", "title": "Video Difference Detector Function"}, "289": {"path": "/pyjom/medialang/functions/detectors/videoDiffDetector.py:25-49", "hash": "3543006afaf411f4b76aca27a42909ff", "title": "Video Diff Detector: Calculate Pixel Differences"}, "290": {"path": "/pyjom/medialang/functions/detectors/videoDiffDetector.py:50-62", "hash": "25a1cc7b1d45620224047b74c9c63202", "title": "Video Frame Differential Detector"}, "291": {"path": "/pyjom/medialang/functions/detectors/yolov5_Detector.py", "hash": "732f57fa9102cf6805bdcf9c6b3c80e8", "title": "YOLOv5 Object Detection Functions"}, "292": {"path": "/pyjom/medialang/functions/detectors/yolov5_Detector.py:1-31", "hash": "9a4825d6c8fe8b6bc92e513f38ad27ee", "title": "YOLOv5 Object Detection and Identification"}, "293": {"path": "/pyjom/medialang/functions/detectors/yolov5_Detector.py:31-50", "hash": "fdaf2679d549ff96a42254a27a6f3481", "title": "Yolov5 Detection in Media Paths"}, "294": {"path": "/pyjom/medialang/functions/detectors/yolov5_Detector.py:51-59", "hash": "a56d651b8024d658d891099db2e951d8", "title": "YOLOv5 Data Structure Builder"}, "295": {"path": "/pyjom/medialang/processors/__init__.py", "hash": "40c6b5f457c4b5de5ccbb848c66a59da", "title": "Dot and Media Processors"}, "296": {"path": "/pyjom/medialang/processors/dotProcessor/__init__.py", "hash": "07fa6284a1c11e0c8606ceb6c0b49d31", "title": "Dot Processor Mapping"}, "297": {"path": "/pyjom/medialang/processors/dotProcessor/jsonProcessor.py", "hash": "c5e12e302704ce7116016cf431ded924", "title": "Json Processor Function in Medialang"}, "298": {"path": "/pyjom/medialang/processors/dotProcessor/videoProcessor.py", "hash": "2ff6c2b0ae667a3225b12fa346b11400", "title": "Video Filtering and Editing Processor"}, "299": {"path": "/pyjom/medialang/processors/dotProcessor/videoProcessor.py:1-34", "hash": "d4329a1d934829c65df6616357b2c9f4", "title": "Video Processing Python Script"}, "300": {"path": "/pyjom/medialang/processors/dotProcessor/videoProcessor.py:35-65", "hash": "5b8197b164be64117abbcbb1ac667035", "title": "Video Blur Padding Filter Function"}, "301": {"path": "/pyjom/medialang/processors/dotProcessor/videoProcessor.py:66-90", "hash": "f433a793041702fcbece13ca4bba03c5", "title": "Video Overlay Padding Processor"}, "302": {"path": "/pyjom/medialang/processors/dotProcessor/videoProcessor.py:91-117", "hash": "56e1035d5530aa36ba0fecf5b872a075", "title": "Efficient Video Processing with Code Snippet"}, "303": {"path": "/pyjom/medialang/processors/dotProcessor/videoProcessor.py:118-151", "hash": "cfbd7ed240f142c388536bb1f8010588", "title": "Video Stream Filters with ffmpeg Functions"}, "304": {"path": "/pyjom/medialang/processors/dotProcessor/videoProcessor.py:152-180", "hash": "a497846790985dd3d7068d302be1c4b9", "title": "Parse FFmpeg Command Strings"}, "305": {"path": "/pyjom/medialang/processors/dotProcessor/videoProcessor.py:180-199", "hash": "8659238745b64164621034dd83dbdba5", "title": "Updating Dictionary with PIP Crop Regions"}, "306": {"path": "/pyjom/medialang/processors/dotProcessor/videoProcessor.py:200-220", "hash": "300f0d210edf45e066d821b72948d497", "title": "Logo and Text Detection Algorithm"}, "307": {"path": "/pyjom/medialang/processors/dotProcessor/videoProcessor.py:221-248", "hash": "be90500f7f9d686821561ef289f4276b", "title": "Video Processing Command Map and Render Check"}, "308": {"path": "/pyjom/medialang/processors/dotProcessor/videoProcessor.py:249-274", "hash": "983b165a841c8dfb3a71eb1fb639b6b1", "title": "Video Processing Pipeline"}, "309": {"path": "/pyjom/medialang/processors/dotProcessor/videoProcessor.py:275-298", "hash": "f390061009369dcdb3a3819fabab13e8", "title": "Stream Command Processor"}, "310": {"path": "/pyjom/medialang/processors/dotProcessor/videoProcessor.py:299-318", "hash": "03a3d72c0fd01f90d993873036850aee", "title": "Delogo Filter Parsing and Validation"}, "311": {"path": "/pyjom/medialang/processors/dotProcessor/videoProcessor.py:319-337", "hash": "162df1ac2539a62f09c09fe5b039c7ad", "title": "Abnormal Filter Parameters Printing"}, "312": {"path": "/pyjom/medialang/processors/dotProcessor/videoProcessor.py:338-349", "hash": "2fd15dc5e81793221deff2876543f955", "title": "Crop and Detect Pipeline Region"}, "313": {"path": "/pyjom/medialang/processors/dotProcessor/videoProcessor.py:350-376", "hash": "0e432949cc2b5325e6c93015713ff8a0", "title": "Filtered Video Stream Concatenation"}, "314": {"path": "/pyjom/medialang/processors/dotProcessor/videoProcessor.py:377-402", "hash": "1c1fa02cabe423e0873375d21c12703a", "title": "Audio-Video Stream Combination using FFmpeg"}, "315": {"path": "/pyjom/medialang/processors/dotProcessor/videoProcessor.py:403-423", "hash": "4e4d84f0654075d002ddfa0d2e195141", "title": "Generate Random UUID and Temporary Videos"}, "316": {"path": "/pyjom/medialang/processors/dotProcessor/videoProcessor.py:424-452", "hash": "9c30df015f2795df9cc188ab2d59089a", "title": "Video Processing Template Setup"}, "317": {"path": "/pyjom/medialang/processors/dotProcessor/videoProcessor.py:453-471", "hash": "e8ddf0adb7a3f512c356bef6a09792bd", "title": "Video Layer Processing in Editly Backend"}, "318": {"path": "/pyjom/medialang/processors/dotProcessor/videoProcessor.py:472-492", "hash": "ffcb8ddc96612a9805aba61e623e47c1", "title": "Video Processor: Clip and Save"}, "319": {"path": "/pyjom/medialang/processors/dotProcessor/videoProcessor.py:493-512", "hash": "b1921534903b88a629e2063699df6c82", "title": "Modifying Clip Properties in dotProcessor"}, "320": {"path": "/pyjom/medialang/processors/dotProcessor/videoProcessor.py:513-523", "hash": "11e4094b1eded709bc5b59393c93847d", "title": "Verbose Check and Editly Printing"}, "321": {"path": "/pyjom/medialang/processors/mediaProcessor/__init__.py", "hash": "f1c7a435996a0f968d7724ab4db216d3", "title": "MediaProcessor FileSystem Import"}, "322": {"path": "/pyjom/medialang/processors/mediaProcessor/filesystemProcessor.py", "hash": "196f318531035133d9ca69bc07974a6d", "title": "Media Processor for Filesystem"}, "323": {"path": "/pyjom/medialang/processors/mediaProcessor/filesystemProcessor.py:1-28", "hash": "be8b5cbd3aefdc45a09c1f8d10bbc179", "title": "Dynamic Media Processor with FSProcessor"}, "324": {"path": "/pyjom/medialang/processors/mediaProcessor/filesystemProcessor.py:29-33", "hash": "765b268251c463679cc05e45172b5fa1", "title": "Media Processor: Handles and Processes Various Media Types"}, "325": {"path": "/pyjom/modify_package.sh", "hash": "410b79ca132a3fb37a2a63a337c096f3", "title": "Pyjom Package Replacer"}, "326": {"path": "/pyjom/modules/__init__.py", "hash": "54dbc205e14a720c1ea1e6215bb59b8e", "title": "Modularizing Pyjom Framework"}, "327": {"path": "/pyjom/modules/contentCensoring/__init__.py", "hash": "7dcff184604643ea0d691f515546dddf", "title": "Importing ContentCensoring Components"}, "328": {"path": "/pyjom/modules/contentCensoring/autoCensor.py", "hash": "2413be34b8bda04c9292a6675a48e6bf", "title": "Auto Censoring with Tkinter"}, "329": {"path": "/pyjom/modules/contentCensoring/autoCensor.py:1-31", "hash": "14215fc6b923999247710687ef14d35d", "title": "Auto Censorship Tool with Tkinter"}, "330": {"path": "/pyjom/modules/contentCensoring/autoCensor.py:32-57", "hash": "3ae9b33b03948578222c5d1931385597", "title": "Auto Censor: Automated Content Filtering with Python"}, "331": {"path": "/pyjom/modules/contentCensoring/autoCensor.py:58-59", "hash": "9e3ebffaaca58c5d36d32dc056391fcf", "title": "Removing Key-Value Pair from Dictionary"}, "332": {"path": "/pyjom/modules/contentCensoring/core.py", "hash": "999ea15eca1bda56dc23eeec012dbf8e", "title": "Censoring Media with GUI and Library Integration"}, "333": {"path": "/pyjom/modules/contentCensoring/core.py:1-32", "hash": "99159dd45d692bfc6cefb4ff331d1f7f", "title": "Media File Downloader with Progress Bar"}, "334": {"path": "/pyjom/modules/contentCensoring/core.py:33-65", "hash": "2160f58d253a1934d7dd1e087c261434", "title": "Media Download and Censorship Interface"}, "335": {"path": "/pyjom/modules/contentCensoring/core.py:66-98", "hash": "3546ed1e2dad7482b9ccd418a6f2002b", "title": "Pyjom Window Buttons Setup"}, "336": {"path": "/pyjom/modules/contentCensoring/core.py:99-134", "hash": "3734712c8e3a3aca7dbb0466676da195", "title": "GUI Post Display Tabular Layout"}, "337": {"path": "/pyjom/modules/contentCensoring/core.py:135-158", "hash": "0b71a0f2d0dfbd659c3ffe4b0830867b", "title": "Place Tag Buttons Function"}, "338": {"path": "/pyjom/modules/contentCensoring/core.py:158-176", "hash": "9f5e68fcecf2210b33a9a73f4306ceb8", "title": "Window-Based Button Placement with User Input Check"}, "339": {"path": "/pyjom/modules/contentCensoring/core.py:177-206", "hash": "c10d045fdc73cfedc0275b5319304f92", "title": "GUI Window for Tagging and Commenting"}, "340": {"path": "/pyjom/modules/contentCensoring/core.py:207-234", "hash": "c197517ef0d1fd66bbbda8e74cbc3587", "title": "Background Media Play and Censoring Functions"}, "341": {"path": "/pyjom/modules/contentCensoring/core.py:235-269", "hash": "630cb1c7af29c239383dbf23c69806cd", "title": "Auto Censoring Decorator"}, "342": {"path": "/pyjom/modules/contentCensoring/core.py:270-299", "hash": "9b0f1c3d9756d43b5fd17038ad81022f", "title": "Creating Dictionary and Managing Media Data Types"}, "343": {"path": "/pyjom/modules/contentCensoring/core.py:300-332", "hash": "6a15d31b3a088126cee7fb233187f29d", "title": "Picture Censoring Algorithm"}, "344": {"path": "/pyjom/modules/contentCensoring/core.py:333-344", "hash": "1f7586b7b9955cdadf3e34a416c8cca2", "title": "Censoring Media with CoreMediaCensor"}, "345": {"path": "/pyjom/modules/contentPosting/__init__.py", "hash": "f584dc49eedfabafbebccf4718a46817", "title": "Avoiding Circular Imports: Essential Modules"}, "346": {"path": "/pyjom/modules/contentPosting/bilibiliPoster.py", "hash": "3265afb7df1b06f749eaf15df011d4e7", "title": "Bilibili Poster: Content Posting Module"}, "347": {"path": "/pyjom/modules/contentPosting/bilibiliPoster.py:1-44", "hash": "c21891cda53c3d4012e866d1b9cf5feb", "title": "Bilibili Video Registration Function"}, "348": {"path": "/pyjom/modules/contentPosting/bilibiliPoster.py:45-67", "hash": "0a1f4a12f3f9c48170d468b561485440", "title": "Retry Decorator Video Upload with Temporary Storage"}, "349": {"path": "/pyjom/modules/contentPosting/bilibiliPoster.py:68-88", "hash": "dd7d0efbdca77916f9e53d200d0c1471", "title": "Bilibili Poster Metadata Extraction"}, "350": {"path": "/pyjom/modules/contentPosting/bilibiliPoster.py:89-112", "hash": "f5905eabddeb7341ba7633deb8b2ab16", "title": "Bilibili Content Posting Process"}, "351": {"path": "/pyjom/modules/contentPosting/bilibiliPoster.py:113-132", "hash": "63aaf1ad3b889913e558abc98c73b6f7", "title": "Bilibili URL Generator Function"}, "352": {"path": "/pyjom/modules/contentPosting/dummyPoster.py", "hash": "4c2c6b954ee3375a36c70e906bd2e30c", "title": "Dummy Poster: Protocol Link Generator"}, "353": {"path": "/pyjom/modules/contentPosting/onlinePoster.py", "hash": "30efd2916571a42f5c794a06227bbd6f", "title": "Online Poster: Decorator-like Bilibili Content Sharing"}, "354": {"path": "/pyjom/modules/contentProducing/__init__.py", "hash": "6c19001957220d99de46d5004cbbbbde", "title": "Pyjom Content Producers"}, "355": {"path": "/pyjom/modules/contentProducing/dummyProducer.py", "hash": "c6010d6917a4cba7fee12a215c7940db", "title": "Dummy Producer Module"}, "356": {"path": "/pyjom/modules/contentProducing/localProducer.py", "hash": "fbc7ff5cc5e70d9780dfb0a645539eaf", "title": "YOLOv5 Filter Applier"}, "357": {"path": "/pyjom/modules/contentProducing/localProducer.py:1-27", "hash": "939f2cfc4154f74c3d03a0cbe90aac2f", "title": "Filter Checker Function"}, "358": {"path": "/pyjom/modules/contentProducing/localProducer.py:28-48", "hash": "5ffb689a15df210900795bb5bbfadb51", "title": "Media Filter Snippet"}, "359": {"path": "/pyjom/modules/contentProducing/localProducer.py:49-73", "hash": "3935fc9128691cf4304fd10cb704b930", "title": "Filter Abandonment Checker"}, "360": {"path": "/pyjom/modules/contentProducing/localProducer.py:74-94", "hash": "91882f693dbe6f1c3563cd4b49679add", "title": "Collect and Filter Video Cuts"}, "361": {"path": "/pyjom/modules/contentProducing/localProducer.py:95-114", "hash": "3e5c2e08e611651934ddcb7b613f5d2d", "title": "Filter Size and Ratio Checker"}, "362": {"path": "/pyjom/modules/contentProducing/localProducer.py:115-140", "hash": "509e69a7a570eab301db5bf850b6fde4", "title": "Video Cuts Filter and Storage"}, "363": {"path": "/pyjom/modules/contentProducing/localProducer.py:141-169", "hash": "c901b797d32bcb4e131e9ea383d5f674", "title": "FilesystemInfoFilter Application and Combination"}, "364": {"path": "/pyjom/modules/contentProducing/onlineProducer.py", "hash": "1de05842f06d2a7f333e4857bab7c52e", "title": "Temporary Directory Media Generator"}, "365": {"path": "/pyjom/modules/contentProducing/onlineProducer.py:1-30", "hash": "0f42233874a4d124e1cfd312cd06a7fe", "title": "Online Producer: Generating Media with Info Generators"}, "366": {"path": "/pyjom/modules/contentProducing/onlineProducer.py:31-39", "hash": "04d8515c915c6bb787197de67e1c37f1", "title": "Online Producer with Fast Parameters"}, "367": {"path": "/pyjom/modules/contentProducing/producerTemplates.py", "hash": "ccb8482b533c7a901cdeea91a266bda7", "title": "Media Processing with getFileCuts"}, "368": {"path": "/pyjom/modules/contentProducing/producerTemplates.py:1-30", "hash": "e83dd8969baf35c89bd6f087a89520bb", "title": "Media File Cuts Generator"}, "369": {"path": "/pyjom/modules/contentProducing/producerTemplates.py:31-52", "hash": "0abd1712cf13d248aaa55ac234f2ac8c", "title": "Synthesized Audio Cuts from BPM Spans"}, "370": {"path": "/pyjom/modules/contentProducing/producerTemplates.py:53-72", "hash": "b2cf8cc05de5acdd1512e5612e263769", "title": "Non-overlapping Template Handler"}, "371": {"path": "/pyjom/modules/contentProducing/producerTemplates.py:73-91", "hash": "2b113c434d4613141579a89812e2fbad", "title": "Iterates Through File Cuts, Updates Modifiers"}, "372": {"path": "/pyjom/modules/contentProducing/producerTemplates.py:92-125", "hash": "cbaca944cf332c72a5932b29210cecf8", "title": "Infinite Shuffled Cut Generator"}, "373": {"path": "/pyjom/modules/contentProducing/producerTemplates.py:126-147", "hash": "ade5bce4406148c8fbe59f2036eda2ba", "title": "File Cut Shuffler and Trial Tracker"}, "374": {"path": "/pyjom/modules/contentProducing/producerTemplates.py:148-165", "hash": "ce44749c02c9c7bb3429616114508f5a", "title": "Checking Clip Validity within Span Range"}, "375": {"path": "/pyjom/modules/contentProducing/producerTemplates.py:166-198", "hash": "9cab83ba92723302b70a7c31ce319721", "title": "Cut Selection and Media File Creation"}, "376": {"path": "/pyjom/modules/contentProducing/producerTemplates.py:199-225", "hash": "e22b2c280c34b0fdebf6fca8167dea2c", "title": "Create Medialang Script from Information"}, "377": {"path": "/pyjom/modules/contentProducing/producerTemplates.py:226-257", "hash": "7722bbc122615b89f8db29ef26e19ffb", "title": "Music File Parser and Cutter"}, "378": {"path": "/pyjom/modules/contentProducing/producerTemplates.py:258-285", "hash": "a9690d9bfdb029aa03a826f7bc3865c8", "title": "Editly Video Generation Issues"}, "379": {"path": "/pyjom/modules/contentProducing/producerTemplates.py:286-310", "hash": "18bce877a1831e4ac8f31b684cf42eac", "title": "Temporary UUID File for MediaLang"}, "380": {"path": "/pyjom/modules/contentProducing/producerTemplates.py:313-343", "hash": "cd4545453bd64e0b7d508ea6a544b216", "title": "Music-Infused MediaLang Generator"}, "381": {"path": "/pyjom/modules/contentProducing/producerTemplates.py:344-367", "hash": "aba8707a57e78f5f2b29e2a64cd1e6f3", "title": "Configure Music Processing Settings"}, "382": {"path": "/pyjom/modules/contentProducing/producerTemplates.py:368-389", "hash": "5ff232034cded5e468f57b695d67f4c2", "title": "Unpacking and Processing Parsed Results"}, "383": {"path": "/pyjom/modules/contentProducing/producerTemplates.py:390-411", "hash": "2d1799e8eac49fd48250cfbe3a5c8c85", "title": "Batch Subtitle Generator"}, "384": {"path": "/pyjom/modules/contentProducing/producerTemplates.py:412-431", "hash": "da954ca9d023b96dabac5681f1d2cec6", "title": "Optimal Cut Span Determination"}, "385": {"path": "/pyjom/modules/contentProducing/producerTemplates.py:432-447", "hash": "44a91cc33a01ba0f38c02f873d0c150e", "title": "Average Motion Vector-Based Clip Segmentation"}, "386": {"path": "/pyjom/modules/contentProducing/producerTemplates.py:448-465", "hash": "9626b100d825427f4d1df2e4846f27c6", "title": "Error Checking and Cutting Module"}, "387": {"path": "/pyjom/modules/contentProducing/producerTemplates.py:466-486", "hash": "91c8c3c4a81e9689c89aa62950cabe34", "title": "Exception-Handled List Rendering and Backup"}, "388": {"path": "/pyjom/modules/contentProducing/producerTemplates.py:487-505", "hash": "921aca302198b151b609cd353114d756", "title": "Media Processing Code snippet"}, "389": {"path": "/pyjom/modules/contentProducing/producerTemplates.py:506-519", "hash": "ce2130e56a6bf231909adb0dac4bb8a1", "title": "Audio Normalization with Random MP4 File Generation and ASS Subtitle Filtering"}, "390": {"path": "/pyjom/modules/contentProducing/producerTemplates.py:520-541", "hash": "ffe239bdad748310181b4b616977b5cd", "title": "Video Rendering with FFmpeg"}, "391": {"path": "/pyjom/modules/contentProducing/producerTemplates.py:542-551", "hash": "a41adefdb4209fb216e19d2717bedf87", "title": "Retrieve Producer Template and Function"}, "392": {"path": "/pyjom/modules/contentReviewer/__init__.py", "hash": "7d222d30ec13bd7f28b7112ac1d3f7fa", "title": "Multipurpose Content Reviewers"}, "393": {"path": "/pyjom/modules/contentReviewer/dummyReviewer.py", "hash": "a4fce7a7b66336e46f85391937993485", "title": "Dummy Reviewer: \"Fantastic\" Verdict"}, "394": {"path": "/pyjom/modules/contentReviewer/localReviewer.py", "hash": "393ad8306fb82d5609a2f5d59a846505", "title": "Local Content Reviewer: filesystemReviewer"}, "395": {"path": "/pyjom/modules/contentReviewer/localReviewer.py:1-39", "hash": "c8a7711d891b620df9c0492b6b3a5b63", "title": "Content Reviewer: Automated File Analyzer and Censoring"}, "396": {"path": "/pyjom/modules/contentReviewer/localReviewer.py:40-86", "hash": "855f05038d5ce7a9d4a1a542106a8634", "title": "Filesystem Reviewer: Generator or Core Analyzer"}, "397": {"path": "/pyjom/modules/contentReviewer/localReviewer.py:87-90", "hash": "756d4e8420fbc36378df2077ffaa4d4f", "title": "Local Class Instantiation"}, "398": {"path": "/pyjom/modules/contentReviewer/weiboSearchReviewer.py", "hash": "4fe9484a4153ba016a8af9c41f7e4b3e", "title": "Weibo Search Reviewer"}, "399": {"path": "/pyjom/modules/contentReviewer/weiboSearchReviewer.py:1-27", "hash": "9713415f89545f281fc24a14f395f07c", "title": "Weibo Search Reviewer and Censor Function"}, "400": {"path": "/pyjom/modules/contentReviewer/weiboSearchReviewer.py:28-28", "hash": "889318e837548ed717ac2b9715011c65", "title": "Weibo Search Reviewer's mreview"}, "401": {"path": "/pyjom/modules/feedbackCollecting/__init__.py", "hash": "f464a52e6a63ef2d7ec44282b5ac9b81", "title": "Importing Feedback Modules"}, "402": {"path": "/pyjom/modules/feedbackCollecting/dummyFeedback.py", "hash": "281260c8ba7da94ab25c2b5b9e1f5ecb", "title": "Dummy Feedback Function"}, "403": {"path": "/pyjom/modules/feedbackCollecting/weiboFeedback.py", "hash": "ae751e5652e061bfecda6db39072949a", "title": "Weibo Feedback Collector"}, "404": {"path": "/pyjom/modules/feedbackCollecting/weiboFeedback.py:1-27", "hash": "0976255cbc86072c3f6712b43d6d3c27", "title": "Weibo Feedback Data Extractor"}, "405": {"path": "/pyjom/modules/feedbackCollecting/weiboFeedback.py:28-53", "hash": "2aee5463e60d1f2b6994ab3417caf3cc", "title": "Weibo Feedback Function"}, "406": {"path": "/pyjom/modules/feedbackCollecting/weiboFeedback.py:54-59", "hash": "5e5daa3175619b03aadd67b384f65e60", "title": "Weibo Feedback Update"}, "407": {"path": "/pyjom/modules/globalOptimizer/__init__.py", "hash": "6ad4ba45a546e5852861b2c5b042368f", "title": "Importing Dummy Optimizer Functions"}, "408": {"path": "/pyjom/modules/globalOptimizer/dummyOptimizer.py", "hash": "93c4303dd50d2007d18a5c4a58918de6", "title": "Inefficient Decorators in DummyOptimizer"}, "409": {"path": "/pyjom/modules/globalUpdator/__init__.py", "hash": "a2cbf7f5452cb5056889f67aa3ebc15c", "title": "Importing GlobalUpdator's Dummy Functions"}, "410": {"path": "/pyjom/modules/globalUpdator/dummyUpdator.py", "hash": "7ca728b8c5a054a6113929ceef720b64", "title": "Scheduling Pending Optimization"}, "411": {"path": "/pyjom/modules/informationGathering/__init__.py", "hash": "4d449c3b265517201f7e6a8d2eb93070", "title": "Multi-Source Data Fetching Module"}, "412": {"path": "/pyjom/modules/informationGathering/dummyFetcher.py", "hash": "d61b323a10302d6dc725a0d95e0b4f9e", "title": "DummyFetcher: Protocol Strings and Huskies Data"}, "413": {"path": "/pyjom/modules/informationGathering/dummyInfoGather.py", "hash": "154cae4abad6816b9562ad30da1fb475", "title": "Dummy Animal List"}, "414": {"path": "/pyjom/modules/informationGathering/localFetcher.py", "hash": "67bf9f52a589a71f98cab1b07b592be6", "title": "Filesystem Fetcher Function"}, "415": {"path": "/pyjom/modules/informationGathering/onlineFetcher.py", "hash": "fe6fe5a1b4093f4c0f8163e793bbc4f1", "title": "Gather Media Assets Effortlessly"}, "416": {"path": "/pyjom/modules/informationGathering/onlineFetcher.py:1-32", "hash": "3814ba109c803bc281734de6024bd3cc", "title": "Online Media Asset Retriever with Criteria"}, "417": {"path": "/pyjom/modules/informationGathering/onlineFetcher.py:33-53", "hash": "9705e24f8ca370297f5b1350936ea3b7", "title": "URL Extractor and Downloader"}, "418": {"path": "/pyjom/modules/informationGathering/onlineFetcher.py:54-57", "hash": "cca02ff96a077bc11025b814e3daf152", "title": "Exception Handling for Giphy Asset Fetch"}, "419": {"path": "/pyjom/modules/informationGathering/weiboInfo.py", "hash": "caa13510688618ecddda3fafa19c5b2d", "title": "Weibo Info Parser"}, "420": {"path": "/pyjom/modules/informationGathering/weiboInfo.py:1-33", "hash": "57d7d38471e9d699912239bf510ec820", "title": "Weibo Keyword Scraper"}, "421": {"path": "/pyjom/modules/informationGathering/weiboInfo.py:34-66", "hash": "8909d5cc12ba554dcaaf648ea7d77920", "title": "Weibo Content Parser"}, "422": {"path": "/pyjom/modules/informationGathering/weiboInfo.py:67-94", "hash": "0cf277177c6cf470571b8c8ed5a73b9a", "title": "Weibo Info Extractor"}, "423": {"path": "/pyjom/modules/informationGathering/weiboInfo.py:95-123", "hash": "f70098a73c4244dd5d12e1eded7c3b13", "title": "Extract Video Links from Weibo Content"}, "424": {"path": "/pyjom/modules/informationGathering/weiboInfo.py:124-151", "hash": "b6e2ed8593f441baa6203f16e0eaa5fc", "title": "Retrieving Weibo Video Titles"}, "425": {"path": "/pyjom/modules/informationGathering/weiboInfo.py:152-171", "hash": "ff94e4f27d371c2d50c79018bd370695", "title": "Weibo Video Link Parser"}, "426": {"path": "/pyjom/modules/informationGathering/weiboInfo.py:172-201", "hash": "c68f2151beef0a3a84ef20f40191b913", "title": "Weibo Information Fetcher"}, "427": {"path": "/pyjom/modules/informationProcessing/__init__.py", "hash": "c430060d407c31b2fe1191d19b5e882f", "title": "Versatile Information Processors"}, "428": {"path": "/pyjom/modules/informationProcessing/dummyProcessor.py", "hash": "3eb23457c5ae4ee13e154e85eb22b020", "title": "Decorator Function in Dummy Processor"}, "429": {"path": "/pyjom/modules/informationProcessing/localProcessor.py", "hash": "993712ef36601b6ff4feb70ca88bf39e", "title": "File Metadata Processor"}, "430": {"path": "/pyjom/modules/informationProcessing/localProcessor.py:1-38", "hash": "39d8fd0e1fab6c7d6e289ac8cbfc02ae", "title": "Filesystem Processor: Extracting Meta Data and Intercepting Filters"}, "431": {"path": "/pyjom/modules/informationProcessing/localProcessor.py:39-62", "hash": "6bdcfc4175f1c1713c7e3e1c88e727fb", "title": "Media Duration, Resolution Calculator"}, "432": {"path": "/pyjom/modules/informationProcessing/localProcessor.py:63-87", "hash": "d0e0f167fd68aaa7041f7f34630cdcc5", "title": "Media Info Retriever: LocalProcessor"}, "433": {"path": "/pyjom/modules/informationProcessing/localProcessor.py:88-108", "hash": "f4d48b11fc2bd2fa6e01247058ecc065", "title": "Universal Metadata Updater"}, "434": {"path": "/pyjom/modules/informationProcessing/localProcessor.py:109-128", "hash": "d793cbb073b1a4e9903c37d9c0958bb1", "title": "Discarding Labeled Reviews"}, "435": {"path": "/pyjom/modules/informationProcessing/localProcessor.py:130-149", "hash": "84238505e434228bf50d3e518c974fab", "title": "YOLOv5 Filter Check"}, "436": {"path": "/pyjom/modules/informationProcessing/localProcessor.py:150-168", "hash": "b5ad1a90451f9fe93b71d12f41aa7563", "title": "YoloV5 Object Filtering"}, "437": {"path": "/pyjom/modules/informationProcessing/localProcessor.py:169-187", "hash": "ec78a038641cc0adccb97817813b39ae", "title": "Identity Array Creation Algorithm"}, "438": {"path": "/pyjom/modules/informationProcessing/localProcessor.py:188-205", "hash": "e063f963a1785c081f295d7ee649c6fc", "title": "Image Processing with Convolution and YoloV5"}, "439": {"path": "/pyjom/modules/informationProcessing/localProcessor.py:206-226", "hash": "fc26ad18a9f909acc33d641c022926ae", "title": "Filtering and Assigning Values in localProcessor.py"}, "440": {"path": "/pyjom/modules/informationProcessing/localProcessor.py:227-250", "hash": "9af77f829797c511df91acf13e54aa23", "title": "Filter Frames Based on Minimum Threshold"}, "441": {"path": "/pyjom/modules/informationProcessing/localProcessor.py:251-266", "hash": "f44d2148ab4e7fa0046c8f9fc83b3bfe", "title": "Filter and Debug Files"}, "442": {"path": "/pyjom/modules/informationProcessing/onlineProcessor.py", "hash": "3f0680f0ac61713d3e90956a6e7ae514", "title": "OnlineProcessor: Video Filters and Animal Detection"}, "443": {"path": "/pyjom/modules/informationProcessing/onlineProcessor.py:1-34", "hash": "38e284094d52aa4a175ec75ed7d4f29d", "title": "OnlineProcessor: Processes Video Elements with Dog/Cat Filters and Proxy Support"}, "444": {"path": "/pyjom/modules/informationProcessing/onlineProcessor.py:36-64", "hash": "9cd07b97080abc580dc3a7f51520a484", "title": "Online Video Processor"}, "445": {"path": "/pyjom/modules/informationProcessing/onlineProcessor.py:65-89", "hash": "8a71b07e8c8dacc81c6d1eff8cafcd51", "title": "Adaptive Video Speed Control"}, "446": {"path": "/pyjom/modules/informationProcessing/onlineProcessor.py:90-115", "hash": "10008da725c0c508ec3685ff18edaa30", "title": "Video Speed Control Algorithm"}, "447": {"path": "/pyjom/modules/informationProcessing/onlineProcessor.py:116-137", "hash": "c88da32280469990a6ec394a26f07ae5", "title": "Video Validation and Extraction"}, "448": {"path": "/pyjom/modules/informationProcessing/onlineProcessor.py:138-161", "hash": "1d9794fe953af402d8e029541ad05be2", "title": "Validating Video Duration: Online Processor"}, "449": {"path": "/pyjom/modules/informationProcessing/onlineProcessor.py:163-187", "hash": "e9e2378a14af1a65fd391a99f2019509", "title": "Filtering Video Parameters"}, "450": {"path": "/pyjom/modules/informationProcessing/onlineProcessor.py:188-211", "hash": "1338d4078ad5c1034465a07f694ce196", "title": "Video Analysis Functions"}, "451": {"path": "/pyjom/modules/informationProcessing/onlineProcessor.py:212-234", "hash": "56a02ed559494af11b3c63a91897a8d5", "title": "Video Processing Filter Chain"}, "452": {"path": "/pyjom/modules/informationProcessing/onlineProcessor.py:235-258", "hash": "7b7d5f513808e28d84160bec77d4092c", "title": "Video Filter and Processing Algorithm"}, "453": {"path": "/pyjom/modules/informationProcessing/onlineProcessor.py:259-268", "hash": "8441f0f7c3852cd6c146eeea42f66c61", "title": "Video Details Initialization"}, "454": {"path": "/pyjom/modules/methodIdentifier/__init__.py", "hash": "5ab2640841998867eb92fedeac66603a", "title": "Importing Contents from MethodIdentifier"}, "455": {"path": "/pyjom/modules/methodIdentifier/dummyIdentifier.py", "hash": "5188eb6f714f366c031ac9f619a32bca", "title": "Unique UUID Generator and Identifier Class"}, "456": {"path": "/pyjom/modules/topicGenerator/__init__.py", "hash": "61d2e0e7162aacc32e8619681887bcca", "title": "Multi-Topic Data Generator"}, "457": {"path": "/pyjom/modules/topicGenerator/dummyTopicGenerator.py", "hash": "674f68ed4c584631b5af3e21e5e34916", "title": "Pyjom's Dummy Topic Generator"}, "458": {"path": "/pyjom/modules/topicGenerator/localTopicGenerator.py", "hash": "9e89b744317fa4356b833225fb2ba4f3", "title": "Filesystem-Based Topic Generator"}, "459": {"path": "/pyjom/modules/topicGenerator/localTopicGenerator.py:1-33", "hash": "77e0ec3e83f6d6bb8a408c8622c67fc2", "title": "Local File System Topic Generator"}, "460": {"path": "/pyjom/modules/topicGenerator/localTopicGenerator.py:34-37", "hash": "f416267e9fe26a2ab310d14ad41fb7ef", "title": "File Existence Checker"}, "461": {"path": "/pyjom/modules/topicGenerator/onlineTopicGenerator.py", "hash": "cc5d667511e5ac5eca9634bf86b94ba5", "title": "Topic-Based GIF/Video Generator"}, "462": {"path": "/pyjom/modules/topicGenerator/onlineTopicGenerator.py:1-33", "hash": "60b1b2045e9ea6f429eb7e2e009ce6c9", "title": "Topic Generator: Remove Duplicate Keywords"}, "463": {"path": "/pyjom/modules/topicGenerator/onlineTopicGenerator.py:34-65", "hash": "d5f8cc0d3d858ffd122e076711768802", "title": "Online Topic Generator"}, "464": {"path": "/pyjom/modules/topicGenerator/onlineTopicGenerator.py:66-95", "hash": "cf512e554ba919f86d2ed895be1b07d7", "title": "Meta Topic String Generator"}, "465": {"path": "/pyjom/modules/topicGenerator/onlineTopicGenerator.py:96-122", "hash": "11d99773588341ca4b99a4a9749d5f06", "title": "Random Keyword Requests in Online Topic Generator"}, "466": {"path": "/pyjom/modules/topicGenerator/onlineTopicGenerator.py:123-143", "hash": "ed4f3e12e64957fad919613c1b2b9a26", "title": "Random Picture Generator"}, "467": {"path": "/pyjom/modules/topicGenerator/onlineTopicGenerator.py:144-165", "hash": "78474a6bf667232f4b9c0e173aab60e3", "title": "Online Topic-Based Image Keyword Generator"}, "468": {"path": "/pyjom/modules/topicGenerator/onlineTopicGenerator.py:167-170", "hash": "33d904743b443d9626dfddfbbea50a88", "title": "Exception Handling for GIPHY Topics Fetching"}, "469": {"path": "/pyjom/modules/topicGenerator/weiboTopicGenerator.py", "hash": "5d03024677f9a10fd8dcc2ed407a6ed3", "title": "Multilingual Pet Topic Generator"}, "470": {"path": "/pyjom/musictoolbox.py", "hash": "839f57cb98f003af06f4ed163a6f03a1", "title": "Universal Music Identifier"}, "471": {"path": "/pyjom/musictoolbox.py:1-31", "hash": "b6e972f0e6f98f8f1d153c4a50cd1af2", "title": "Music Waveform Generator"}, "472": {"path": "/pyjom/musictoolbox.py:32-68", "hash": "f6b22ff5884b22d7199616fe96a9f793", "title": "Audio Analysis and Lyrics Extraction"}, "473": {"path": "/pyjom/musictoolbox.py:70-104", "hash": "a038776151fe50ea91430eeaa841468d", "title": "Generate BPM Spans and Lyric Candidates"}, "474": {"path": "/pyjom/musictoolbox.py:105-133", "hash": "c2e4c29e5548e6cbe63a654081a09a4a", "title": "Min/Max Time Boundary Calculator and BPM Span Generator"}, "475": {"path": "/pyjom/musictoolbox.py:134-158", "hash": "ddcdf69f39a16d352e439bbcdc9fef1b", "title": "Minimum BPM Selection Algorithm"}, "476": {"path": "/pyjom/musictoolbox.py:159-184", "hash": "567c5cd43c1bbbe628eb80329475eab7", "title": "Cutting Points by Timespan Range"}, "477": {"path": "/pyjom/musictoolbox.py:185-212", "hash": "aadd5c11294bfbc3bbd5bfe9fb0a5ff4", "title": "Generate Music Cut Spans List"}, "478": {"path": "/pyjom/musictoolbox.py:213-249", "hash": "405218b9ce2be092a386f16d53274a6c", "title": "Retrieves Music Metadata and Updates Lyrics"}, "479": {"path": "/pyjom/musictoolbox.py:252-284", "hash": "cb76f467fde466591c10caab8e9ce884", "title": "Shazam-based Music Recognition Functionality"}, "480": {"path": "/pyjom/musictoolbox.py:285-318", "hash": "24b04e39d203f51168cd1e14705de576", "title": "ShazamIO-Powered Music Recognition"}, "481": {"path": "/pyjom/musictoolbox.py:319-354", "hash": "be88e96406f53e0e574a0bd76aecf1c3", "title": "Music Recognition from File using Midomi API"}, "482": {"path": "/pyjom/musictoolbox.py:355-381", "hash": "15694859e0e540ced146d332adcfcb91", "title": "Music Recognition Code Snippet"}, "483": {"path": "/pyjom/musictoolbox.py:382-408", "hash": "0ebe57381dfacfc49ca3202c5538638c", "title": "Music Recognition Toolbox Function"}, "484": {"path": "/pyjom/musictoolbox.py:409-443", "hash": "0b0739fd1e27c32e9b2b8014b27405ff", "title": "Netease Music Interface Class"}, "485": {"path": "/pyjom/musictoolbox.py:444-474", "hash": "3ff51c646461029b95603a93725b958a", "title": "Netease API GET Request Handler"}, "486": {"path": "/pyjom/musictoolbox.py:475-505", "hash": "d01563ba6f9842b409272c3048bcc009", "title": "Music Search and Retrieval Functions"}, "487": {"path": "/pyjom/musictoolbox.py:506-540", "hash": "e50099e0b5badd74359e30404160f87c", "title": "NetEase Music Toolbox: Check and Retrieve Lyrics"}, "488": {"path": "/pyjom/musictoolbox.py:541-567", "hash": "d6ce18e8d803627430f5296aa19b3221", "title": "Pyjom's Music Search Function"}, "489": {"path": "/pyjom/musictoolbox.py:568-594", "hash": "fa71d5f93ac2ed8daf881142497889c8", "title": "Random Song Downloader"}, "490": {"path": "/pyjom/musictoolbox.py:595-611", "hash": "b87835a0d6f9bef33bc06f4739f4707a", "title": "Validates, Retrieves, and Cleans Lyrics"}, "491": {"path": "/pyjom/platforms/bilibili/credentials.py", "hash": "8a5480dac7de580a4b78903f7d1fd4fe", "title": "Bilibili Credential Manager"}, "492": {"path": "/pyjom/platforms/bilibili/credentials.py:2-38", "hash": "c33c4b30c08506ca8ea6fdb15b3c2bf8", "title": "Bilibili API Credential Manager"}, "493": {"path": "/pyjom/platforms/bilibili/credentials.py:39-74", "hash": "9c85658ca8cfef06a6acb7fa1465381e", "title": "Bilibil Credential Management in Python"}, "494": {"path": "/pyjom/platforms/bilibili/credentials.py:75-101", "hash": "89d2872b60aeb0264a6dec490976c267", "title": "Bilibili Credential Retrieval and Verification"}, "495": {"path": "/pyjom/platforms/bilibili/credentials.py:102-125", "hash": "7c94ee9fa3b2232715d2d93942afe729", "title": "SMS-Based Login and Credential Management"}, "496": {"path": "/pyjom/platforms/bilibili/credentials.py:126-140", "hash": "12e36778582a518c629203721f228dfa", "title": "Bilibil Decorator: Retrieve and Pass Credentials"}, "497": {"path": "/pyjom/platforms/bilibili/database.py", "hash": "88ec959c8ade938c5e476fae7554d1bd", "title": "Bilibili Video Recommendation API"}, "498": {"path": "/pyjom/platforms/bilibili/database.py:1-43", "hash": "c4cb9679c46bef37a8525cdbc2a87272", "title": "Bilibili Video Recommendation Code"}, "499": {"path": "/pyjom/platforms/bilibili/database.py:44-82", "hash": "ff5a030ed0c0fb157ef917c88384f0fd", "title": "Text Preprocessing with OpenCC and Jieba"}, "500": {"path": "/pyjom/platforms/bilibili/database.py:83-117", "hash": "f1a4d6cecafce86446d9dc00e9a6f256", "title": "Chinese Text Preprocessing with TF-IDF"}, "501": {"path": "/pyjom/platforms/bilibili/database.py:118-151", "hash": "b01032da8858cc9d686347a5e62395bc", "title": "Bilibili Keyword Extraction and Query Forming"}, "502": {"path": "/pyjom/platforms/bilibili/database.py:154-195", "hash": "6fee721b7579052d073fd7c22ab332a6", "title": "Bilibili Video Search Forms"}, "503": {"path": "/pyjom/platforms/bilibili/database.py:197-223", "hash": "29a485b5bb8d83adf2766c4f13bfe7c9", "title": "Bilbili Major-Minor Mapping Fetcher"}, "504": {"path": "/pyjom/platforms/bilibili/database.py:224-257", "hash": "2234b8a6cf39c77f7d76ef75539463ff", "title": "BiliBili Topic Details Retrieval Function"}, "505": {"path": "/pyjom/platforms/bilibili/database.py:258-290", "hash": "8638e4b720896b02f049beaa6122987a", "title": "Bilibili User Class and Info Extract"}, "506": {"path": "/pyjom/platforms/bilibili/database.py:293-318", "hash": "18e69549d872c4cd352af49f7330ad55", "title": "BilibiliVideo Class and Extractor"}, "507": {"path": "/pyjom/platforms/bilibili/database.py:319-354", "hash": "0207f3ff3d2bdada9c9711f70c5fccca", "title": "Bilibili Video Index Model"}, "508": {"path": "/pyjom/platforms/bilibili/database.py:355-383", "hash": "bc2fdbea4be80c4c058b37d1e562e7e3", "title": "Bilibili SQLite Database Setup"}, "509": {"path": "/pyjom/platforms/bilibili/database.py:384-415", "hash": "9e942896788cb47366d740d7d205361c", "title": "Bilibili Data Fetching and Updating"}, "510": {"path": "/pyjom/platforms/bilibili/database.py:416-442", "hash": "7a0bcd6ea0354aa1b0d3b36cdd3e1551", "title": "Bilibili Search Results Parser"}, "511": {"path": "/pyjom/platforms/bilibili/database.py:443-474", "hash": "7d1b031c475c26623203d70910edf332", "title": "Iterating, Fetching, Processing Pages"}, "512": {"path": "/pyjom/platforms/bilibili/database.py:475-525", "hash": "ba1e53d86ac659f873b45847775c3aa6", "title": "Bilibili Video Database Checker"}, "513": {"path": "/pyjom/platforms/bilibili/database.py:526-558", "hash": "ed744e335874f5153d5b88fa7d6a71be", "title": "Bilibili Video Data Processing"}, "514": {"path": "/pyjom/platforms/bilibili/database.py:559-593", "hash": "d8e29ccf3db7e2d0163a1774c721f9b0", "title": "Bilibili Video Retrieval and Database Updater"}, "515": {"path": "/pyjom/platforms/bilibili/database.py:594-613", "hash": "f7f1e3b497f755761e7befad1b1cdea1", "title": "Bilibili Video Scraper"}, "516": {"path": "/pyjom/platforms/bilibili/database.py:613-629", "hash": "14812ac4568fb2538aabf367e0701e0c", "title": "Bilibili Video Tag Updating Algorithm"}, "517": {"path": "/pyjom/platforms/bilibili/database.py:630-653", "hash": "f282476474be03ce9dc6cccad5115ed9", "title": "Bilibili Database Interaction Code"}, "518": {"path": "/pyjom/platforms/bilibili/database.py:654-686", "hash": "53ddf4ff3d90214406a065b99654e6e4", "title": "Topic ID Resolution Algorithm"}, "519": {"path": "/pyjom/platforms/bilibili/database.py:687-716", "hash": "675be18f516979782e631f33e43fe8be", "title": "Filter and Sort Bilibili Videos"}, "520": {"path": "/pyjom/platforms/bilibili/database.py:717-742", "hash": "2bec69282bb2fe5fb69db71c1b8f4ee6", "title": "Bilibili Video Search with BM25 Algorithm"}, "521": {"path": "/pyjom/platforms/bilibili/database.py:743-778", "hash": "8feadaf997084598d2d7a495b9ddcada", "title": "Bilibili Video Search Functions"}, "522": {"path": "/pyjom/platforms/bilibili/database.py:779-806", "hash": "4dbdb647cc0d2542a3740928bc173b13", "title": "Hybrid Video Search Algorithm"}, "523": {"path": "/pyjom/platforms/bilibili/database.py:807-837", "hash": "4ede692031430a7a578ac6399da47722", "title": "Bilibili BM25 Video Search"}, "524": {"path": "/pyjom/platforms/bilibili/database.py:838-869", "hash": "32fb573a6b81c14a5381aeb8b82d4af3", "title": "Bilibili Video Visibility Checker"}, "525": {"path": "/pyjom/platforms/bilibili/database.py:870-892", "hash": "b66e5ad0668ecc15b63a2130bdbcf80b", "title": "Verify Video Publication Time"}, "526": {"path": "/pyjom/platforms/bilibili/database.py:893-910", "hash": "45e55975a545699699597995ed4fdb32", "title": "Bilibili Database Video Checker"}, "527": {"path": "/pyjom/platforms/bilibili/database.py:910-933", "hash": "6ed5658cccfe6c7613a073fde1115e2e", "title": "Verify and Manage Bilibili Video Database Entry"}, "528": {"path": "/pyjom/platforms/bilibili/database.py:934-963", "hash": "a38d302bd76a7e14eb11e912fa5730e7", "title": "Bilibili Video Management Function"}, "529": {"path": "/pyjom/platforms/bilibili/database.py:964-990", "hash": "e7705dcc95cfe9163571f2833ad619f5", "title": "Bilibili Video Indexer"}, "530": {"path": "/pyjom/platforms/bilibili/database.py:991-1019", "hash": "88b20e7140cbca8416be9df20edae31b", "title": "Bilibili Video Index Generation and Search Function"}, "531": {"path": "/pyjom/platforms/bilibili/database.py:1020-1053", "hash": "370306dcf0f1cfff83de51813da14e31", "title": "BiliBili Video Status Refresh Functions"}, "532": {"path": "/pyjom/platforms/bilibili/database.py:1054-1082", "hash": "15e6ec07cf5a084af18df816a53181ff", "title": "Bilibili Video Status Updater"}, "533": {"path": "/pyjom/platforms/bilibili/database.py:1083-1123", "hash": "61de2e7e2a1e0b1412639cbefc08de0a", "title": "Bilibili Recommendation Server: Initialization and Search"}, "534": {"path": "/pyjom/platforms/bilibili/database.py:1124-1157", "hash": "86c24026d6bbff2da450213bfc4da6d2", "title": "Bilibil Search and Register Endpoints"}, "535": {"path": "/pyjom/platforms/bilibili/database.py:1158-1178", "hash": "4fb8652ae505828303331b197d06aa3e", "title": "Bilibili Video Registration Script"}, "536": {"path": "/pyjom/platforms/bilibili/postMetadata.py", "hash": "2eff4b0fc4853cd83f75c4075c754994", "title": "Bilibili Post Metadata Generator"}, "537": {"path": "/pyjom/platforms/bilibili/postMetadata.py:1-27", "hash": "1d14754d46e1099e1533e7b6a21564b1", "title": "Core Topic Filter for Bilibili Video Titles"}, "538": {"path": "/pyjom/platforms/bilibili/postMetadata.py:28-64", "hash": "a9ae5a1129c5de1f2b8085749c03e561", "title": "Bilibili Post Title Filtration"}, "539": {"path": "/pyjom/platforms/bilibili/postMetadata.py:65-100", "hash": "993e4aa485f1ee557e3c61950340a346", "title": "Random Image Selection and Processing"}, "540": {"path": "/pyjom/platforms/bilibili/postMetadata.py:101-130", "hash": "9957f20fc7babf20cd5a0d359f34898a", "title": "Advanced Dog/Cat Image Cropping"}, "541": {"path": "/pyjom/platforms/bilibili/postMetadata.py:131-165", "hash": "ec83728eedec6bf7c137f0e9e4231da4", "title": "Generate Bilibili Post Metadata"}, "542": {"path": "/pyjom/platforms/bilibili/postMetadata.py:166-196", "hash": "bc19167560339e10a10aaf869f977f66", "title": "Bilibili Metadata Retriever and Filter"}, "543": {"path": "/pyjom/platforms/bilibili/postMetadata.py:197-223", "hash": "2c28a5c98dfc970ffea861bccf332fdc", "title": "Dynamic Bilibili Topic Generation"}, "544": {"path": "/pyjom/platforms/bilibili/postMetadata.py:225-252", "hash": "9719bca71de129e2ba697342560be14d", "title": "Bilibili Video Metadata Updater"}, "545": {"path": "/pyjom/platforms/bilibili/postMetadata.py:253-280", "hash": "93390382205a8324a67b642d53c1c79a", "title": "Filtering Bilibili Video Metadata"}, "546": {"path": "/pyjom/platforms/bilibili/postMetadata.py:281-302", "hash": "7ea4c79d2c022d23add8b2194dd24af5", "title": "Bilibili Video Metadata Checker"}, "547": {"path": "/pyjom/platforms/bilibili/postMetadata.py:303-328", "hash": "2208f53f7b127b5bfe76cf2aa6691a68", "title": "Bilibili Video Metadata Updater"}, "548": {"path": "/pyjom/platforms/bilibili/postMetadata.py:329-353", "hash": "dfc5c8e375d0883e45dd1cf126842cde", "title": "Bilibili Video Fetch and Parse"}, "549": {"path": "/pyjom/platforms/bilibili/postMetadata.py:355-377", "hash": "5d487d14d4f30dff60f2a552ca945f8f", "title": "Video Data Parser and Keyword Collector"}, "550": {"path": "/pyjom/platforms/bilibili/postMetadata.py:379-404", "hash": "84abfecff40faaca954d5c3c65b857e6", "title": "Topic-Based Keyword Generation"}, "551": {"path": "/pyjom/platforms/bilibili/postMetadata.py:405-424", "hash": "a6f485a8ce2035bb559144b1e1d3be86", "title": "Bilibili Post Metadata Processing"}, "552": {"path": "/pyjom/platforms/bilibili/postMetadata.py:425-439", "hash": "f29533a41ccee9959292b30d1574c977", "title": "Random Cover and Description Selection"}, "553": {"path": "/pyjom/platforms/bilibili/postMetadata.py:440-454", "hash": "95cc23e226a9c3e955cc14c0a1a84d17", "title": "Random Bilibili Post Metadata Generator"}, "554": {"path": "/pyjom/platforms/bilibili/postMetadata.py:454-478", "hash": "81491275fadde22115f48648b7d7c841", "title": "Fetch Bilibil Post Metadata for Dogs or Cats"}, "555": {"path": "/pyjom/platforms/bilibili/postMetadata.py:479-515", "hash": "8d773e237f664ffa08db736bbc9b3609", "title": "Bilibili Metatopics for Cats and Dogs"}, "556": {"path": "/pyjom/platforms/bilibili/postMetadata.py:516-523", "hash": "7606391c8c417f4adceb13dc87a976f0", "title": "Bilibili Post Metadata Functions"}, "557": {"path": "/pyjom/platforms/bilibili/searchDataParser.py", "hash": "058ddbd95a04bded0dee3f0ee9cbc5d9", "title": "Bilibili Video Parser: Metadata Extraction and Error Handling"}, "558": {"path": "/pyjom/platforms/bilibili/searchDataParser.py:1-37", "hash": "e808df93ed50ec6b61c1d087c9d2b398", "title": "Bilibili Search Data Parser"}, "559": {"path": "/pyjom/platforms/bilibili/searchDataParser.py:38-61", "hash": "adac201e3042b8a75600cfda4aff8d0c", "title": "Bilibili Video Data Parser and Cleaner"}, "560": {"path": "/pyjom/platforms/bilibili/searchDataParser.py:62-106", "hash": "2789e069ea06e37772b863d81f556aa6", "title": "Bilibili Search Data Parser"}, "561": {"path": "/pyjom/platforms/bilibili/searchDataParser.py:107-138", "hash": "e08066329c1b304f97e35b2f39184cae", "title": "Bilibili Search Results Parser"}, "562": {"path": "/pyjom/platforms/bilibili/searchDataParser.py:139-162", "hash": "dd6647502570b0c6560ca308f7658e22", "title": "Bilibili Search Data Parser"}, "563": {"path": "/pyjom/platforms/bilibili/searchDataParser.py:163-190", "hash": "ca61c8074e8ffc9ee208666e84d12561", "title": "Bilibili Video Parser and Updater"}, "564": {"path": "/pyjom/platforms/bilibili/searchDataParser.py:191-223", "hash": "1a18288ac5615ed5f02e3f0ede6d012a", "title": "Bilibili Search Data Parser Test Suite"}, "565": {"path": "/pyjom/platforms/bilibili/searchDataParser.py:224-249", "hash": "2fa7931f467aa061537c8be80c903b5f", "title": "Bilibili Search Data Parser and Link Extractor"}, "566": {"path": "/pyjom/platforms/bilibili/uploader.py", "hash": "ba46db9768a4560726a4c961f81ffc85", "title": "Bilibili Video Uploader Asynchronously"}, "567": {"path": "/pyjom/platforms/bilibili/uploader.py:1-34", "hash": "d702a29e26f2f9f241b23b96ba18e54d", "title": "Asynchronous Bilibili Video Uploader"}, "568": {"path": "/pyjom/platforms/bilibili/uploader.py:35-67", "hash": "cb08c9fed901e14253324345dfee1c90", "title": "Multithreaded Bilibili Video Uploader"}, "569": {"path": "/pyjom/platforms/bilibili/uploader.py:68-94", "hash": "e1775069e67a97251c7862e6ba34b0be", "title": "Bilibili API Preupload Setup"}, "570": {"path": "/pyjom/platforms/bilibili/uploader.py:95-120", "hash": "0b3acc54bf620a1813416ccf3fd25f8f", "title": "Bilibili File Uploader Code Snippet"}, "571": {"path": "/pyjom/platforms/bilibili/uploader.py:122-151", "hash": "44d5e40f694d3435eede35d53e571629", "title": "Chunked Upload Preparation"}, "572": {"path": "/pyjom/platforms/bilibili/uploader.py:152-175", "hash": "af23b097d061284756fe8eed4a7709ca", "title": "Bilibili Uploader with Retry and Threading"}, "573": {"path": "/pyjom/platforms/bilibili/uploader.py:177-205", "hash": "7d4d89db69f960f00706504627fcea7e", "title": "Bilibili Multipart Uploader"}, "574": {"path": "/pyjom/platforms/bilibili/uploader.py:206-234", "hash": "02e55c53037351627784175f18c3df83", "title": "Bilibili Image Uploader"}, "575": {"path": "/pyjom/platforms/bilibili/uploader.py:236-270", "hash": "d9b074c487c35912b43b08c8e908b473", "title": "Upload Video and Cover: Bilibili Uploader"}, "576": {"path": "/pyjom/platforms/bilibili/uploader.py:271-305", "hash": "eb95a799ee943d46169430a2176d1a88", "title": "Bilibili Video Upload Setup"}, "577": {"path": "/pyjom/platforms/bilibili/uploader.py:306-333", "hash": "8688d44b68b148378de8a17b4c88b86c", "title": "Bilibili Video Uploader Code Snippet"}, "578": {"path": "/pyjom/platforms/bilibili/uploader.py:334-367", "hash": "76c352f2b4cf0c3eecc16dc9d7348e52", "title": "Multithreaded Bilibili Video Uploader"}, "579": {"path": "/pyjom/platforms/bilibili/uploader.py:368-401", "hash": "df98f205ac1843921093cd38202a7a6f", "title": "Bilibili Video Uploader Function"}, "580": {"path": "/pyjom/platforms/bilibili/uploader.py:402-428", "hash": "00612d38f23f9450847087eafc1b2916", "title": "Bilibili Video Uploader Dictionary"}, "581": {"path": "/pyjom/platforms/bilibili/uploader.py:429-445", "hash": "ba7b07b33923120278da07b8794acbb0", "title": "Sync Video Uploader Check"}, "582": {"path": "/pyjom/platforms/bilibili/utils.py", "hash": "a625e13c1f79a59fc0a1d106dc908094", "title": "Bilibili API Utilities"}, "583": {"path": "/pyjom/platforms/bilibili/utils.py:1-41", "hash": "7a64b5c41ed494b9cc4cb7d48f180b7e", "title": "Bilibili API Utilities"}, "584": {"path": "/pyjom/platforms/bilibili/utils.py:44-67", "hash": "54dcc4a3886d9976992cc3ba8bdee58e", "title": "Bilibili Extract Links Function"}, "585": {"path": "/pyjom/platforms/bilibili/utils.py:68-99", "hash": "591e12b5fb3e3e052271d9139d520d46", "title": "BGM Parser and Duration Conversion"}, "586": {"path": "/pyjom/platforms/bilibili/utils.py:100-126", "hash": "3f301111a4de003a790550e96b0d3baf", "title": "Duration Converter Function"}, "587": {"path": "/pyjom/platforms/bilibili/utils.py:127-163", "hash": "d94777448d01c371937de16a06cd3b43", "title": "Author Analysis Utilities"}, "588": {"path": "/pyjom/platforms/bilibili/utils.py:164-181", "hash": "8b2f5a79d1ab97a8ab04b874bead0e9a", "title": "Bilibili Video Title Parser"}, "589": {"path": "/pyjom/primitives/__init__.py", "hash": "c98c82b234333ba6a183fc9ac1641c5a", "title": "Importing Primitives"}, "590": {"path": "/pyjom/primitives/localPrimitives.py", "hash": "af878b2eec74a33f70e70959149cfb6e", "title": "Automatic Content Review and Production Class"}, "591": {"path": "/pyjom/primitives/localPrimitives.py:1-29", "hash": "d1abb9e50779edf0a36da477a9bcc940", "title": "Filesystem Content Reviewer Class"}, "592": {"path": "/pyjom/primitives/localPrimitives.py:30-66", "hash": "9bd06b26c7617bdf9b03a0965f0ee60e", "title": "Filesystem Content Review and Production Classes"}, "593": {"path": "/pyjom/primitives/localPrimitives.py:66-84", "hash": "c0fb5ff612a257ee14bcdda3681572f5", "title": "Local Class File Operations"}, "594": {"path": "/pyjom/primitives/localPrimitives.py:85-95", "hash": "3bc31b03d49d29c4e5c4a651e85d2557", "title": "Local Filesystem Topic Producer"}, "595": {"path": "/pyjom/primitives/onlinePrimitives.py", "hash": "be43be514079acddafd67298411bb0a0", "title": "Online Auto Content Producer"}, "596": {"path": "/pyjom/primitives/onlinePrimitives.py:1-30", "hash": "4f64349243634f7cbead179d3da63de9", "title": "Online Auto Content Producer Class"}, "597": {"path": "/pyjom/primitives/onlinePrimitives.py:31-55", "hash": "8b90a5059ff17ef9a5a1327b809c9801", "title": "OnlinePrimitives Class Setup"}, "598": {"path": "/pyjom/primitives/onlinePrimitives.py:56-73", "hash": "7470834c68c7930a682aac45cfc588b5", "title": "Multi-Platform Poster with Keyword Decoration"}, "599": {"path": "/pyjom/primitives/onlinePrimitives.py:74-74", "hash": "e3dbe469eae9e996f693215fe32a2db6", "title": "Closing Parenthesis Indicator"}, "600": {"path": "/pyjom/primitives/weiboPrimitives.py", "hash": "591985da753566c4317ed1cad021a952", "title": "Weibo Pets Reviewer: Automated Content Labeling"}, "601": {"path": "/pyjom/requirements.txt", "hash": "a90eea26dc1ee30ae19c7154652f5994", "title": "Python Nude Detection Dependencies"}, "602": {"path": "/pyjom/templates/medialang/autoCensor/blackout_detector.mdl.j2", "hash": "11a523a3a990afd4bbef09143b7f7a96", "title": "Blackout Detector Template"}, "603": {"path": "/pyjom/templates/medialang/autoCensor/file_format_detector.mdl.j2", "hash": "7906a85f2e341d5933f29d046c5f9924", "title": "JSON File Format Detector Code Snippet"}, "604": {"path": "/pyjom/templates/medialang/autoCensor/frameborder_detector.mdl.j2", "hash": "bebcdfb3d3eea07e9a2f5ef0be075997", "title": "Frame Border Detector Template"}, "605": {"path": "/pyjom/templates/medialang/autoCensor/framediff_detector.mdl.j2", "hash": "0675a3ba4bd720404c1c4cd3f1618970", "title": "Framediff Detector Template"}, "606": {"path": "/pyjom/templates/medialang/autoCensor/subtitle_detector.mdl.j2", "hash": "f41afef7b1505c13a25a03c86332727a", "title": "Subtitle Detector Template"}, "607": {"path": "/pyjom/templates/medialang/autoCensor/yolov5_detector.mdl.j2", "hash": "568dc1820afb114735024150771c9566", "title": "AutoCensor JSON Configuration"}, "608": {"path": "/pyjom/touch_init_files.sh", "hash": "99915b986b23dbd72573e6a8e3a5f092", "title": "Create Python Packages with Single Command"}, "609": {"path": "/samples/image/qrcode_test/init.sh", "hash": "381a8e76f65bb23512b25d1fad4a3497", "title": "QR Code Image Conversion Script"}, "610": {"path": "/samples/medialang/dog_cat_test.mdl", "hash": "8f6b0d3158bff8eeb0ef728cb82d2084", "title": "Media Project Configuration Tool"}, "611": {"path": "/samples/medialang/dog_cat_test.mdl:1-31", "hash": "3b79d0cb8e3d734cd5a6c78434276655", "title": "Media Project Code"}, "612": {"path": "/samples/medialang/dog_cat_test.mdl:31-57", "hash": "6bec3e1c4328b4fdb5d4339b8eb557e6", "title": "Video File List and Properties"}, "613": {"path": "/samples/medialang/dog_cat_test.mdl:58-86", "hash": "e581520f06d28ade0711006f54fb7af5", "title": "Video Properties and Cut Duration"}, "614": {"path": "/samples/medialang/dog_cat_test.mdl:87-116", "hash": "18801e769ddd8bf344d82bced94b8a9c", "title": "Video Attributes List"}, "615": {"path": "/samples/medialang/dog_cat_test.mdl:117-146", "hash": "24424f4d287a63abd22e513629b5c81f", "title": "Video File Configurations"}, "616": {"path": "/samples/medialang/dog_cat_test.mdl:147-176", "hash": "3b5e9bd07498c106d63bbfe168542c7a", "title": "Video Processing Parameters"}, "617": {"path": "/samples/medialang/dog_cat_test.mdl:177-206", "hash": "493cf891ae1ca8c874fc0a6109296388", "title": "Video Playback Parameters"}, "618": {"path": "/samples/medialang/dog_cat_test.mdl:207-236", "hash": "8aafaa7edfc6b04adac2302d688b29f6", "title": "Video Properties List"}, "619": {"path": "/samples/medialang/dog_cat_test.mdl:237-266", "hash": "13b8e1b8f28e9ae744ede5b8f92bb849", "title": "Video File Series with Cut Ranges"}, "620": {"path": "/samples/medialang/dog_cat_test.mdl:267-296", "hash": "ca3da7b3f526f726348ceb93999a12a7", "title": "Silent Video Speed Adjustments"}, "621": {"path": "/samples/medialang/dog_cat_test.mdl:297-319", "hash": "02f125e7a56757fd93b61b1a2ed0e36f", "title": "Silent Video Files: Speed & Cut Duration"}, "622": {"path": "/samples/medialang/dog_cat_test_nofast.mdl", "hash": "b255b99baa098ec9ce22e8b256c0f379", "title": "Multimedia Properties and Cuts Management"}, "623": {"path": "/samples/medialang/dog_cat_test_nofast.mdl:1-31", "hash": "ec36ecc1f9bcdc4bd3d39fded818d2a1", "title": "Multi-Video Source Properties & Speed Control"}, "624": {"path": "/samples/medialang/dog_cat_test_nofast.mdl:31-57", "hash": "5282de150b7c85a37694367100274415", "title": "Video File Series with Speed Controls"}, "625": {"path": "/samples/medialang/dog_cat_test_nofast.mdl:58-86", "hash": "89955e06494d59864b91bafbf8131ed8", "title": "Video File Properties List"}, "626": {"path": "/samples/medialang/dog_cat_test_nofast.mdl:87-116", "hash": "20237e8177b647dbb1e17e94b47841d9", "title": "Media Language Model Video Parameters"}, "627": {"path": "/samples/medialang/dog_cat_test_nofast.mdl:117-146", "hash": "eccca136c7b826d43a38bac8f5ee5b54", "title": "Video Clip Data Format"}, "628": {"path": "/samples/medialang/dog_cat_test_nofast.mdl:147-176", "hash": "a71c6aa066203474d495d61821c9a578", "title": "Video Properties and Time Intervals in Media Language Script"}, "629": {"path": "/samples/medialang/dog_cat_test_nofast.mdl:177-206", "hash": "df6d8a90d84cfefcb50e5802568949ab", "title": "Video Processing Parameters List"}, "630": {"path": "/samples/medialang/dog_cat_test_nofast.mdl:207-236", "hash": "499d75102055b4a6333da8e3cb247bc6", "title": "Media File Properties for Medialang Project"}, "631": {"path": "/samples/medialang/dog_cat_test_nofast.mdl:237-266", "hash": "60b7be2e846ec78bd875b35962e28edd", "title": "Video Sequencing Code and Properties"}, "632": {"path": "/samples/medialang/dog_cat_test_nofast.mdl:267-296", "hash": "1aec84dfeb93d8354d405a9fafef6c30", "title": "Timed Video Sequencing Code"}, "633": {"path": "/samples/medialang/dog_cat_test_nofast.mdl:297-319", "hash": "29285fc94370f3dd2502399a9860cdd7", "title": "Similar Video Clips"}, "634": {"path": "/samples/medialang/target/larger_play.sh", "hash": "150cbeeba75fbcac9f973574648e7177", "title": "Full Screen Subtitle Playback Script"}, "635": {"path": "/samples/medialang/target/larger_render.py", "hash": "98b135827a10ebe6163169ccb99075ef", "title": "Larger Render Python Script"}, "636": {"path": "/symlinks/README.md", "hash": "e0afebf7c6e14234428f17b70a71259b", "title": "Symlink Resource Hub"}, "637": {"path": "/tasks/README.md", "hash": "e28524b33f4099c37f104dd91af84618", "title": "Adequate Actions for Project Success"}, "638": {"path": "/tasks/qq/login_opq_arm64.sh", "hash": "0c76d54ac989dfd7ac83013c5cbee734", "title": "ARM64 Linux Firefox QR Code Login"}, "639": {"path": "/tasks/qq/login_opq_arm64_another_account.sh", "hash": "7956a717bdf9ede9a505e43d315924d5", "title": "ARM64 Firefox Login Script"}, "640": {"path": "/tasks/qq/qq_red_packet_collect/README.md", "hash": "8a92ff65bbc733655c760cd033c5db3a", "title": "Relogin & Group Chat Log Clear"}, "641": {"path": "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py", "hash": "0547a68ec55b136899bc8cd77350f731", "title": "Bilibili Ad Template Generation"}, "642": {"path": "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:1-46", "hash": "b4913c5bcc6ee46d3c9f2753c7d2df8c", "title": "Ad Template Initialization"}, "643": {"path": "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:49-89", "hash": "fd419b954a9d6814810b60144f2211ff", "title": "Python Ad Template Functions"}, "644": {"path": "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:90-116", "hash": "57516dec55144d59fb08772d6fedc085", "title": "Shorten Video Link with Xiaojuzi API"}, "645": {"path": "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:118-139", "hash": "c31a46679a4bc351e19c430f80fb2be7", "title": "Bilibili API Link Generator"}, "646": {"path": "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:140-178", "hash": "d2c4b6a5022ba2124ba996339521ca45", "title": "Bilibili Short Link Generator"}, "647": {"path": "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:179-219", "hash": "fd08dd655c292321688fea71af973fb4", "title": "Generate QR Code for Bilbili Video Ad"}, "648": {"path": "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:220-244", "hash": "0ff6db9c113d0c142832df5d36d5ea6c", "title": "Video Ad Generator Function"}, "649": {"path": "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:245-274", "hash": "37df726dd6d878b61461f34558214449", "title": "Night Mode Image Generator"}, "650": {"path": "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:275-302", "hash": "dd3dcf852b8703009961625e05c053ac", "title": "Gradient Paint Customization"}, "651": {"path": "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:303-334", "hash": "8868406f0805ac53407f00ac5dd129fe", "title": "Gradient Mask and Overlay Application"}, "652": {"path": "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:336-361", "hash": "9c7519dc80c61bb60d468719d936dafa", "title": "Bilibili Ad Image Resizing"}, "653": {"path": "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:362-390", "hash": "967f4886e0b59e4ed9a8af88bbede58b", "title": "Dynamic Ad Template with Play Button, Stats, and QR Code"}, "654": {"path": "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:391-425", "hash": "fa53f98c5916f8bcce2736f2e85fb0f4", "title": "Dynamic QR Mask Generator"}, "655": {"path": "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:426-450", "hash": "5b9c444d56281c0611e7c71a07a57349", "title": "QR Image Generator with Text Overlay"}, "656": {"path": "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:451-485", "hash": "7f43b5685705887d8874079dc973074c", "title": "Remove QR Codes from Images using Pyzbar"}, "657": {"path": "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:486-513", "hash": "6c19162d32e75637c92fa72a1c0a2849", "title": "QR Code Polygon Coordinates Extractor"}, "658": {"path": "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:514-540", "hash": "663198aae54d3ec520096ed8222c0102", "title": "QR Code Inpainting Function"}, "659": {"path": "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:541-568", "hash": "f163964fd4229fbf62207f182ae19c41", "title": "Polygon Area Calculator"}, "660": {"path": "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:569-594", "hash": "9311c1e2b3fff711c75d25f89deb5aa2", "title": "QR Positioning Algorithm"}, "661": {"path": "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:595-617", "hash": "d591cbe649685a53f923345eb9010fe5", "title": "QR Code Preprocessing Algorithm"}, "662": {"path": "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:618-633", "hash": "f08639cacb42a0c44a7eb4e619539d02", "title": "Rotating and Combining Images with OpenCV"}, "663": {"path": "/tasks/qq/qq_red_packet_collect/adtools.py", "hash": "9611a5d4acfe65226aa49e3eb68fc788", "title": "Multi-AI Ad Generator Tool"}, "664": {"path": "/tasks/qq/qq_red_packet_collect/adtools.py:1-39", "hash": "65ef1c47ad44158966743fb75c47cf2d", "title": "QQ Cat/Dog Lover Detector"}, "665": {"path": "/tasks/qq/qq_red_packet_collect/adtools.py:40-77", "hash": "2c377a2f6d32c8f33fd1800b2a6393ac", "title": "Cat or Dog Image Classification with Rate Limiting"}, "666": {"path": "/tasks/qq/qq_red_packet_collect/adtools.py:78-110", "hash": "f1cd352fe65a13b2edfa0acdf21a068f", "title": "API Request with Requests Library"}, "667": {"path": "/tasks/qq/qq_red_packet_collect/adtools.py:111-148", "hash": "2e30121f9cdc1fc68e89c44a4bd8c1e7", "title": "Check Animal from String"}, "668": {"path": "/tasks/qq/qq_red_packet_collect/adtools.py:149-182", "hash": "0eec73937b1c006608aa39025b3d568d", "title": "Neo4j Driver and Connection Creation Function"}, "669": {"path": "/tasks/qq/qq_red_packet_collect/adtools.py:183-208", "hash": "0d47a6ead4e3b9ad01d4a2f3a0f4d987", "title": "Bilibili Group Check and Node Creation"}, "670": {"path": "/tasks/qq/qq_red_packet_collect/adtools.py:210-240", "hash": "c1406f58f0a999df8612937042264b65", "title": "Get Cat or Dog Ad Function"}, "671": {"path": "/tasks/qq/qq_red_packet_collect/adtools.py:241-267", "hash": "25969076aafa85b0974afc1dc127f422", "title": "Data Fetching and Filtering Script"}, "672": {"path": "/tasks/qq/qq_red_packet_collect/adtools.py:268-305", "hash": "a7596ff67222378206a47b683441e0c2", "title": "Generate Ads from Video Info"}, "673": {"path": "/tasks/qq/qq_red_packet_collect/adtools.py:306-339", "hash": "89f0b55fd7d6c0c8ad10728930567df2", "title": "Base64 Encoding File Content"}, "674": {"path": "/tasks/qq/qq_red_packet_collect/adtools.py:340-370", "hash": "aa26fcbcad37180f3e01d6436843370f", "title": "Ad Style Generator and Censoring"}, "675": {"path": "/tasks/qq/qq_red_packet_collect/adtools.py:372-388", "hash": "959348640cbf7bfa7a3442d25be01a0b", "title": "Code Censors and Sends Video Links"}, "676": {"path": "/tasks/qq/qq_red_packet_collect/base_opq.py", "hash": "e78d37f2b376a1f0863024e48bcaeb43", "title": "QQ Red Packet Collect Base Operations"}, "677": {"path": "/tasks/qq/qq_red_packet_collect/base_opq.py:1-46", "hash": "4010dbd3cb838e48cfa2cbf81e0cee76", "title": "QQ Red Packet Collection Script"}, "678": {"path": "/tasks/qq/qq_red_packet_collect/base_opq.py:47-73", "hash": "c0b01d2c00c40f1414e722d781ebfecd", "title": "QQ Botoy Instance Setup"}, "679": {"path": "/tasks/qq/qq_red_packet_collect/base_opq.py:74-109", "hash": "716009ac64cd7aebe153ba20906fb380", "title": "Group Handling Functions in qq_red_packet_collect"}, "680": {"path": "/tasks/qq/qq_red_packet_collect/base_opq.py:110-146", "hash": "c7f9d7fe5a66708724abd22ec3e1beb9", "title": "QQ Search and Friend Add Functions"}, "681": {"path": "/tasks/qq/qq_red_packet_collect/base_opq.py:147-179", "hash": "3f6942fb3ef1472a9df9747207083428", "title": "Random Sleep and Keyword Filtering in Red Bag Function"}, "682": {"path": "/tasks/qq/qq_red_packet_collect/base_opq.py:180-202", "hash": "b4a55177adc2220f153fc6a68639bc9b", "title": "Red Bag Collection with Retry and Backoff"}, "683": {"path": "/tasks/qq/qq_red_packet_collect/base_opq.py:203-210", "hash": "522d64d62d1dae18f97fc11fabe71ebf", "title": "Async Thread Decorator"}, "684": {"path": "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py", "hash": "6b870c1a44d1d0280b402388e8bc431e", "title": "Async Red Packet Collection in opqbot"}, "685": {"path": "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:1-45", "hash": "ed344b3f5aacb8ee919ea5a45415bc9c", "title": "Arm64 Opqbot: Disabling \u590d\u8bfb\u673a, Managing Functions"}, "686": {"path": "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:46-80", "hash": "d259e1ca2879119ac7a5e2932e77630a", "title": "Async QQ Group Message Sender"}, "687": {"path": "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:81-109", "hash": "bc425fc6411f07ba43ec7148d723dd45", "title": "Group Message Construction and Retry"}, "688": {"path": "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:110-132", "hash": "1ec300754a72e6a16f3a64b03454e0ee", "title": "Filtering and Storing Group Chat Replies"}, "689": {"path": "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:133-152", "hash": "3cd0a36b6f603c23620ae68dfddfa674", "title": "Censoring Bot: Checks Messages and Delays Sending"}, "690": {"path": "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:153-172", "hash": "ace0c56f0359cd2bb8df717ceaa039c8", "title": "Group Message Sender and Ban System"}, "691": {"path": "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:173-209", "hash": "654f898d84a2ac30c6a2c612ca517d96", "title": "Four Functions for Sending Group Chat Messages"}, "692": {"path": "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:210-240", "hash": "d60ee9f9d5057e3144b0b11db54023bb", "title": "Weighted Random Reply Yielder for Group Chat Bot"}, "693": {"path": "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:243-274", "hash": "41391feae3cbd7626358fbbbf19ebb52", "title": "Cat or Dog Image Detection and Advertisement"}, "694": {"path": "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:275-301", "hash": "071659fd1ab41e43c59c363e576b2b41", "title": "Group Chat Ad Counter Manager"}, "695": {"path": "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:302-329", "hash": "101b3f7951a0968b52b71007c05a07c8", "title": "Media Message Handler with Error Logging and Delay Initialization"}, "696": {"path": "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:331-352", "hash": "9755766990c0e66816e5f255f32923a3", "title": "Chat Cursor Data Writer"}, "697": {"path": "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:353-373", "hash": "275e0fa9debaa1ad5915ff0ab4a7bc14", "title": "QQ Bot: Chat Logger and GPT Trainer"}, "698": {"path": "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:374-394", "hash": "350b2694fa771c96d28b5bddef30ad14", "title": "Botoy Red Packet Message Processor"}, "699": {"path": "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:395-421", "hash": "9fd373e953b3efcee29e755eb9c9cc53", "title": "Red Packet Collection Bot for QQ Groups"}, "700": {"path": "/tasks/qq/qq_red_packet_collect/censorApis.py", "hash": "de9f242d5df060ca6ae0a7c03b1f5e8a", "title": "Censoring Replies: Sentiment Analysis Functions"}, "701": {"path": "/tasks/qq/qq_red_packet_collect/censorApis.py:1-33", "hash": "09ee65f97bfca637e82aaf8f24930285", "title": "Censoring Replies with Sentiment Analysis"}, "702": {"path": "/tasks/qq/qq_red_packet_collect/censorApis.py:34-47", "hash": "7ba21bf15bfb045ec37f65cff46d9175", "title": "Censor Reply with Sentiment Check"}, "703": {"path": "/tasks/qq/qq_red_packet_collect/chatApis.py", "hash": "d548932db0607ee53731e3b8d72ddaf6", "title": "ChatAPI Client and Utilities"}, "704": {"path": "/tasks/qq/qq_red_packet_collect/chatApis.py:1-39", "hash": "f9459c3e2f0df356848947e1e345edbf", "title": "Chat APIs for Atri and GPT-2 Integration"}, "705": {"path": "/tasks/qq/qq_red_packet_collect/chatApis.py:40-76", "hash": "1bf27a651f8aadcf85101dc4ec2bf9a3", "title": "QingKeYun API Chat Processing Function"}, "706": {"path": "/tasks/qq/qq_red_packet_collect/chatApis.py:77-111", "hash": "fa23e93634e74c9d0173839e7aeea4b3", "title": "Chat APIs for ownthink and XiaoIce"}, "707": {"path": "/tasks/qq/qq_red_packet_collect/chatApis.py:112-139", "hash": "a13ee73b927a993630485e0fd2e422b1", "title": "Retryable Chat API Response Fetcher"}, "708": {"path": "/tasks/qq/qq_red_packet_collect/chat_local.py", "hash": "a8d718e53e20fa4b88bc071890009d5b", "title": "Jiagu-Based Sentiment Analysis and Chat Management"}, "709": {"path": "/tasks/qq/qq_red_packet_collect/chat_local.py:1-41", "hash": "2888f1a306ada74ec3d6e36b9f9feed7", "title": "Stack and Sentiment Analysis Functions"}, "710": {"path": "/tasks/qq/qq_red_packet_collect/chat_local.py:44-84", "hash": "facb4aef7142eb7120e79401da50441d", "title": "Chat Stack Processing Functions"}, "711": {"path": "/tasks/qq/qq_red_packet_collect/chat_local.py:85-110", "hash": "88a90024bdc59ae7ccfa7a93a843fc59", "title": "Populate Group Messages List"}, "712": {"path": "/tasks/qq/qq_red_packet_collect/chat_local.py:111-150", "hash": "f263891c7af90853011c057a71132675", "title": "Chat Local Message Sampler"}, "713": {"path": "/tasks/qq/qq_red_packet_collect/chat_local.py:151-176", "hash": "96815a4f2505fece0db2fc1a733465fa", "title": "Chat Sampling and Sentiment Analysis"}, "714": {"path": "/tasks/qq/qq_red_packet_collect/chat_local.py:177-194", "hash": "07a2257637ca575b6900bc11624f3a0d", "title": "Immutable Replies: Removal Issue"}, "715": {"path": "/tasks/qq/qq_red_packet_collect/commons.py", "hash": "4863de4aae6c8269cf4efdf2df952a94", "title": "Text Manipulation and Randomization Functions"}, "716": {"path": "/tasks/qq/qq_red_packet_collect/commons.py:1-38", "hash": "ea3e92c0978fb2986be512a902a1c46d", "title": "Replace Duplicate Characters in Sentences"}, "717": {"path": "/tasks/qq/qq_red_packet_collect/commons.py:39-66", "hash": "68d9d3d6d55170ea4829fbe8e42b273b", "title": "Duplicate Word Removal and Incomplete Sentence Cutting"}, "718": {"path": "/tasks/qq/qq_red_packet_collect/commons.py:67-93", "hash": "2a106a9f9f977c2985236b4ea9027872", "title": "Weighted Random Yield and Text Manipulation Functions"}, "719": {"path": "/tasks/qq/qq_red_packet_collect/commons.py:94-110", "hash": "2df98eced0b26d531145ccb2c3ba7df3", "title": "Weighted Random Elements Generator"}, "720": {"path": "/tasks/qq/qq_red_packet_collect/deprecated_botoy_redpacket_collect_account_2.py", "hash": "4bad83e7881a306de6614c67562b8510", "title": "Arm64 Opqbot Red Packet Collector"}, "721": {"path": "/tasks/qq/qq_red_packet_collect/fill_mask_model/init.sh", "hash": "e72fc4624c62e7c9a0a4fb7f4fa124bc", "title": "Git LFS, Python Script, Chinese-Macbert Model Installation"}, "722": {"path": "/tasks/qq/qq_red_packet_collect/fill_mask_model/test.py", "hash": "134cf77e982e4b38fbc61f6c8983358e", "title": "Masked Language Modeling for Red Packet Collection"}, "723": {"path": "/tasks/qq/qq_red_packet_collect/fill_mask_model/test.py:1-27", "hash": "e35a94017d0c2b288bfad65c9a1a3ef9", "title": "Masked Language Modeling with Chinese-MacBERT"}, "724": {"path": "/tasks/qq/qq_red_packet_collect/fill_mask_model/test.py:28-35", "hash": "d15c9cdb61f6bde87dfce0df0cce35eb", "title": "Mask Token Prediction and Decoding"}, "725": {"path": "/tasks/qq/qq_red_packet_collect/fill_mask_model/test_macbert.sh", "hash": "ffe65d55e8c12a718c0e8ea623efb35d", "title": "MacBERT Model Inference Test"}, "726": {"path": "/tasks/qq/qq_red_packet_collect/launch.sh", "hash": "41c54e5d65877c22d534ba4c60c3a588", "title": "Restart QQ Red Packet Session"}, "727": {"path": "/tasks/qq/qq_red_packet_collect/paddletts/test.sh", "hash": "efcf265ae10db39b2929a441a9faa104", "title": "PaddleSpeech TTS Test Script"}, "728": {"path": "/tasks/qq/qq_red_packet_collect/red_packet.yaml", "hash": "f649d370251b8b7912ded3f38fee730f", "title": "Bilibili Video Recommendation Tool"}, "729": {"path": "/tasks/qq/qq_red_packet_collect/red_packet.yaml:1-20", "hash": "00a6be63fe435d2c8bf413980a237402", "title": "Window with Tiled Layout and Script Execution"}, "730": {"path": "/tasks/qq/qq_red_packet_collect/red_packet.yaml:21-39", "hash": "6648a070821e7cf4ce2939f7d32e58f2", "title": "Multi-Service Chatbot Setup: Red Packet Collection"}, "731": {"path": "/tasks/qq/qq_red_packet_collect/red_packet.yaml:40-50", "hash": "a707c888d0d6496a00bd0ae20a014ca4", "title": "Shell Commands for Server Testing and Bilibili Recommendations"}, "732": {"path": "/tasks/qq/qq_red_packet_collect/test_ad_generator.py", "hash": "dbe0f28f986c76b6b7ebc2e47e4aab64", "title": "Bilibili Ad Generator"}, "733": {"path": "/tasks/qq/qq_red_packet_collect/test_adtools.sh", "hash": "88743bd4724bb834d5b2e72578a71686", "title": "CD and Test Dog-Cat Connection"}, "734": {"path": "/tasks/qq/qq_red_packet_collect/test_cat_dog_info_get.py", "hash": "4f7115ce04c7117b2d6405bf169a0937", "title": "Cat and Dog Video Testing"}, "735": {"path": "/tasks/qq/qq_red_packet_collect/test_check_dog_cat.py", "hash": "0976356eef78df4061b5096dff604744", "title": "Detecting Cat or Dog: Test Code"}, "736": {"path": "/tasks/qq/qq_red_packet_collect/test_download_qq_image.sh", "hash": "d98ca541dfbe5c394151c0434dffecec", "title": "QQ Image Download and Processing with OpenCV"}, "737": {"path": "/tasks/qq/qq_red_packet_collect/test_get_all_my_videos.py", "hash": "a3fd01c9836b2e150999536aff9e8220", "title": "POST Request for Latest Video Data"}, "738": {"path": "/tasks/qq/qq_red_packet_collect/test_make_dog_cat_connection.py", "hash": "2fe17610041c1df5c626f5edeec6b60c", "title": "Testing Cat-Dog Ad Connections"}, "739": {"path": "/tasks/qq/qq_red_packet_collect/test_neo4j_creds.py", "hash": "6d7b81222f0a732b518ce2ea0875c0be", "title": "Test Neo4j Credentials"}, "740": {"path": "/tasks/qq/qq_red_packet_collect/test_qrcode_insert_replace.py", "hash": "16805fc17b97b53160115daa59b52f90", "title": "QR Code Insert/Replace Tester"}, "741": {"path": "/tasks/qq/qq_red_packet_collect/textfilter/filter_py3_fastapi.py", "hash": "4f9449951b9294ceafa35a1f9fa7ed52", "title": "Py3 FastAPI Text Filter"}, "742": {"path": "/tasks/qq/qq_red_packet_collect/textfilter/filter_py3_fastapi.py:1-48", "hash": "ad2a0a28737be2681d52a0870eef18e3", "title": "Fast Python Keyword Filtering Algorithms"}, "743": {"path": "/tasks/qq/qq_red_packet_collect/textfilter/filter_py3_fastapi.py:49-77", "hash": "e566b17cac27ab2dbc840bf1f391e9d9", "title": "FastAPI Keyword Filter"}, "744": {"path": "/tasks/qq/qq_red_packet_collect/textfilter/filter_py3_fastapi.py:78-113", "hash": "abaf88694d833f12409139089c8e86fa", "title": "DFA-Based Keyword Filter"}, "745": {"path": "/tasks/qq/qq_red_packet_collect/textfilter/filter_py3_fastapi.py:114-143", "hash": "509aca5bd7a34c6718f294248e02c623", "title": "FastAPI Text Filter Algorithm"}, "746": {"path": "/tasks/qq/qq_red_packet_collect/textfilter/filter_py3_fastapi.py:144-186", "hash": "7805bddb4908d77f26aca56eeb9294c9", "title": "DFA-Based Text Filter"}, "747": {"path": "/tasks/qq/qq_red_packet_collect/textfilter/filter_py3_fastapi.py:187-213", "hash": "8acf7100470e5ddba3cb0a933b15bab9", "title": "Pinyin Text Filter API"}, "748": {"path": "/tasks/qq/qq_red_packet_collect/textfilter/filter_py3_fastapi.py:214-225", "hash": "5d0d72aa609244da375c00af9d0c1a6a", "title": "FastAPI GFW Filter and Moderation"}, "749": {"path": "/tasks/qq/qq_red_packet_collect/textfilter/launch.sh", "hash": "73e7faf5be9b6d2aa91af1dc3915157c", "title": "Launch FastAPI with uvicorn and --reload"}, "750": {"path": "/tests/README.md", "hash": "119024748baee089ebc12d28540fc8df", "title": "Integrated Recommendation System for LLM and Scrapers"}, "751": {"path": "/tests/adb_phone_control_termux_network_broadcast_scrcpy_appium_airtest/README.md", "hash": "a4ea8292c7a1edef3c44577c3b9dcce7", "title": "Automate Termux via ADB and Scrcpy"}, "752": {"path": "/tests/adb_phone_control_termux_network_broadcast_scrcpy_appium_airtest/README.md:1-30", "hash": "f665860110d07f6f20f31205022573a4", "title": "Termux-Based Android Phone Control via Network Broadcast"}, "753": {"path": "/tests/adb_phone_control_termux_network_broadcast_scrcpy_appium_airtest/README.md:32-68", "hash": "9d3bdc4f29a8c0ffd8a929cc61074232", "title": "Cross-Platform Focused Window Title Retrieval"}, "754": {"path": "/tests/adb_phone_control_termux_network_broadcast_scrcpy_appium_airtest/README.md:69-70", "hash": "b7f95b9dcbac20ec4401c36a61092278", "title": "X Server Input Test"}, "755": {"path": "/tests/adb_phone_control_termux_network_broadcast_scrcpy_appium_airtest/get_modifier.sh", "hash": "eb4141460c059c57c60246e3efdb34ac", "title": "Establishing ADB Network Connection"}, "756": {"path": "/tests/adb_phone_control_termux_network_broadcast_scrcpy_appium_airtest/get_modifier_with_masscan_scapy.py", "hash": "d43237d73631af6414dacdbeb7ee29ed", "title": "Masscan-Powered Network Device Control"}, "757": {"path": "/tests/adb_phone_control_termux_network_broadcast_scrcpy_appium_airtest/get_modifier_with_masscan_scapy.py:1-42", "hash": "e8e20d5b48ae685675906f274b65619c", "title": "Adb Phone Control Network Scan with Masscan"}, "758": {"path": "/tests/adb_phone_control_termux_network_broadcast_scrcpy_appium_airtest/get_modifier_with_masscan_scapy.py:43-64", "hash": "a444d0dd35c97dde4a16ca106b75dde8", "title": "Masscan-Powered ADB Connections"}, "759": {"path": "/tests/adb_phone_control_termux_network_broadcast_scrcpy_appium_airtest/pkl_nowriting.py", "hash": "bec2661fa5fd1bb332b7410b5c606f1d", "title": "Keystroke Logger Python Script"}, "760": {"path": "/tests/adb_phone_control_termux_network_broadcast_scrcpy_appium_airtest/pkl_nowriting.py:1-38", "hash": "eb3f2a45086ae7c97da753d5c45bf62f", "title": "Keylogger Educational Tool"}, "761": {"path": "/tests/adb_phone_control_termux_network_broadcast_scrcpy_appium_airtest/pkl_nowriting.py:39-74", "hash": "654acb7709cf6f4381266c8efc18aeea", "title": "Global Event Monitor and Logger"}, "762": {"path": "/tests/adb_phone_control_termux_network_broadcast_scrcpy_appium_airtest/pkl_nowriting.py:75-83", "hash": "0748dec498a63d2c02b8d1964de23851", "title": "Clean Termination of Event Loops"}, "763": {"path": "/tests/adb_phone_control_termux_network_broadcast_scrcpy_appium_airtest/unlock_phone_on_given_ip.py", "hash": "93605018bb510c211f97d4557d3127df", "title": "Network Broadcast IP Control"}, "764": {"path": "/tests/aiohttp_python_clash_delay_proxy_set_proxy/download_from_multiple_websites_at_once.py", "hash": "bee484bf807a8b7b483fcdb7c6837516", "title": "Concurrent HTTP GET Requests"}, "765": {"path": "/tests/aiohttp_python_clash_delay_proxy_set_proxy/test.py", "hash": "1e8fbb748798f69902abeb6fe49f5a69", "title": "Delay Proxy Test with Clash"}, "766": {"path": "/tests/aiohttp_python_clash_delay_proxy_set_proxy/test.py:1-34", "hash": "abe49106d78073092b48b01b5f1592c4", "title": "Clash Proxy Test and Setup for AioHTTP"}, "767": {"path": "/tests/aiohttp_python_clash_delay_proxy_set_proxy/test.py:35-40", "hash": "f5d183ed47eff0bb71e29fe88ba7e3dd", "title": "Proxy GET Request and Response Display"}, "768": {"path": "/tests/anime1_me_video_download/README.md", "hash": "342359b95d1134b62b5cae63714f8f7f", "title": "Video API Integration for Anime Download"}, "769": {"path": "/tests/anime1_me_video_download/api_curl.sh", "hash": "ebf90b77c8296299280eb07c9c215e27", "title": "Anime1.me Video Download Curl Script"}, "770": {"path": "/tests/anime1_me_video_download/api_curl.sh:1-24", "hash": "b069017e8992546831874421c9274d77", "title": "Anime1.me API cURL Request"}, "771": {"path": "/tests/anime1_me_video_download/api_curl.sh:25-43", "hash": "39c6f3e91d564aeb607f270f519a9ea3", "title": "Anime1.me API Curl Request"}, "772": {"path": "/tests/anime1_me_video_download/api_curl.sh:44-44", "hash": "ee33f55fafa0276f186fb9869079a99f", "title": "Compressed Downloads for Faster, Smarter Storage"}, "773": {"path": "/tests/anime1_me_video_download/get_best_edm.sh", "hash": "bda36b2e6a2445a8b292f103a9f4555a", "title": "Split EDM Audio Using FFmpeg"}, "774": {"path": "/tests/anime1_me_video_download/get_cookie_sample.py", "hash": "3c2d48e1fd14b419f1ea83d6b6675295", "title": "Efficient Real-Time Anime Video Download with Cookies"}, "775": {"path": "/tests/anime1_me_video_download/get_cookie_sample.py:1-28", "hash": "d6004321af3a2253602ec04670c5a487", "title": "API Request Setup and Data Formatting"}, "776": {"path": "/tests/anime1_me_video_download/get_cookie_sample.py:29-60", "hash": "b4d7b4e1d4a2fe10a54dfa7f4ae42af0", "title": "Anime1.me Video Downloader"}, "777": {"path": "/tests/anime1_me_video_download/get_cookie_sample.py:61-72", "hash": "80944844d3e24bfd98cf1e4307a64c84", "title": "Real-Time File Download with Chunked Data and Cookie Support"}, "778": {"path": "/tests/anime1_me_video_download/parse_static.py", "hash": "983e183b9417c8534971ef271d851a4c", "title": "Anime Video Downloader: Parse and Extract"}, "779": {"path": "/tests/anime1_me_video_download/test_download.sh", "hash": "a99680df084b99fcc3cbdfe927d01ac3", "title": "Crossdressing MP4 Download Script"}, "780": {"path": "/tests/anime1_me_video_download/test_download.sh:1-6", "hash": "6af9fd01b16a11bb893c8303fd4cea92", "title": "Cracking Anime1.me Download Cookies"}, "781": {"path": "/tests/anime1_me_video_download/test_download.sh:6-6", "hash": "7a612c0775e7dda6d4e40cdc9a2bcfb0", "title": "Anime Video Download Parameters"}, "782": {"path": "/tests/anime_highlight_cuts/bittorrent_downloader/download_given_file_to_given_name.sh", "hash": "dea1d27d4dea34c3b13e31e54930d66f", "title": "Bittorrent Script for Anime Cuts Download"}, "783": {"path": "/tests/anime_highlight_cuts/bittorrent_downloader/dynamic_import.mjs", "hash": "21efca0da52d65e32d8058efdf71e80f", "title": "Dynamic Import and Modules Integration"}, "784": {"path": "/tests/anime_highlight_cuts/bittorrent_downloader/kill_aria2c.sh", "hash": "53d442d2f2d57522248566092b28e2ab", "title": "Kill Aria2c for Specific Anime Ep"}, "785": {"path": "/tests/anime_highlight_cuts/bittorrent_downloader/make_node_symlink.sh", "hash": "7a5428430a06de959436085f27fd7f81", "title": "Create Node Symlink for Bittorrent Downloader"}, "786": {"path": "/tests/anime_highlight_cuts/bittorrent_downloader/name_fuzzy.py", "hash": "45f77bf67593a73c43cb6e9fe1697b8d", "title": "Bangumi Name Initializer"}, "787": {"path": "/tests/anime_highlight_cuts/bittorrent_downloader/name_resolution_parsing_chapter_recognition.py", "hash": "b86bf48cb985d2d2f65b6e24e3f19d04", "title": "Anime Episode Index Identifier"}, "788": {"path": "/tests/anime_highlight_cuts/bittorrent_downloader/name_resolution_parsing_chapter_recognition.py:1-46", "hash": "56d1cfda8c80407b1aa642acebb60676", "title": "Anime Subtitle Extractor"}, "789": {"path": "/tests/anime_highlight_cuts/bittorrent_downloader/name_resolution_parsing_chapter_recognition.py:47-71", "hash": "336ff26cfc24c284ccb9db03cdb0a26e", "title": "JSON Filename Processing and Chapter Recognition"}, "790": {"path": "/tests/anime_highlight_cuts/bittorrent_downloader/name_resolution_parsing_chapter_recognition.py:72-73", "hash": "ea493b1890458aab50c61936d3fe1a8a", "title": "Episode Index Checker"}, "791": {"path": "/tests/anime_highlight_cuts/bittorrent_downloader/nyaa_api_connector.py", "hash": "427e27b8f43e962e5773538c3976acb5", "title": "Nyaa Anime Seeder Scraper"}, "792": {"path": "/tests/anime_highlight_cuts/bittorrent_downloader/nyaa_api_connector.py:1-48", "hash": "6b6eb165bfe1f98ce0fd1ca62e8329e5", "title": "Nyaa API Connector: Python Torrent Scraper"}, "793": {"path": "/tests/anime_highlight_cuts/bittorrent_downloader/nyaa_api_connector.py:50-77", "hash": "90c651403068d12d2a92fbd5d9750f3b", "title": "Nyaa API Connector: Banner Parser"}, "794": {"path": "/tests/anime_highlight_cuts/bittorrent_downloader/nyaa_torrent_file_list.py", "hash": "2aadccd1acb45fa145fb1c6797c7724a", "title": "Nyaa Torrent File List Fetcher"}, "795": {"path": "/tests/anime_highlight_cuts/bittorrent_downloader/subtitle_extractor.py", "hash": "0914223fb15cd40d3d6a0938f022bb10", "title": "Multi-Tool Subtitle Extraction"}, "796": {"path": "/tests/anime_highlight_cuts/bittorrent_downloader/torrent_analyzer.py", "hash": "4f564597ac7f045f4b2a11b40e0f51a6", "title": "Torrent Analyzer: Parser, Formats, JSON"}, "797": {"path": "/tests/anime_highlight_cuts/bittorrent_downloader/torrent_analyzer.py:1-41", "hash": "ff6600ac3888f871aacc72f71a5f12a0", "title": "Torrent Analyzer: Parsing and Downloading Files"}, "798": {"path": "/tests/anime_highlight_cuts/bittorrent_downloader/torrent_analyzer.py:42-49", "hash": "e85ae0a37d8f000b718e053cbf2ab976", "title": "Torrent File Metadata Extractor"}, "799": {"path": "/tests/anime_highlight_cuts/bittorrent_downloader/webtorrent_streaming_test_cut_partial_download.mjs", "hash": "fb29a1a8bf5900fafca00b79775cf358", "title": "Webtorrent Streaming Test Cut Partial Download"}, "800": {"path": "/tests/anime_highlight_cuts/bittorrent_downloader/webtorrent_streaming_test_cut_partial_download.mjs:2-18", "hash": "eab292f4bd18aebf0a604a6b5753293d", "title": "WebTorrent Streaming Test Cut Download"}, "801": {"path": "/tests/anime_highlight_cuts/bittorrent_downloader/webtorrent_streaming_test_cut_partial_download.mjs:19-41", "hash": "b8366676ce0ba01efe18b0d28d874f09", "title": "Webtorrent Streaming Test Issues"}, "802": {"path": "/tests/anime_highlight_cuts/bittorrent_downloader/webtorrent_streaming_test_cut_partial_download.mjs:42-72", "hash": "9062fc4c106745c7f28ac576c7dc15fa", "title": "WebTorrent Streaming Test Cut Partial Download"}, "803": {"path": "/tests/anime_highlight_cuts/bittorrent_downloader/webtorrent_streaming_test_cut_partial_download.mjs:73-95", "hash": "7234b10fa89993c416bddad6dbd0ebbf", "title": "Webtorrent Streaming Test Cut Partial Download"}, "804": {"path": "/tests/anime_highlight_cuts/bittorrent_downloader/webtorrent_streaming_test_cut_partial_download.mjs:96-130", "hash": "70f49e75598814a3bc9bb756c3e5d804", "title": "Unused Functions in Partial Download Test"}, "805": {"path": "/tests/anime_highlight_cuts/bittorrent_downloader/webtorrent_streaming_test_cut_partial_download.mjs:131-158", "hash": "0037f03f8e0d38adf726885ca6d16e91", "title": "FFmpeg Streaming with Webtorrent"}, "806": {"path": "/tests/anime_highlight_cuts/bittorrent_downloader/webtorrent_streaming_test_cut_partial_download.mjs:158-176", "hash": "d115698965207cf6c34999654c41651d", "title": "Seek, Download, and Stream Video Segment"}, "807": {"path": "/tests/anime_highlight_cuts/bittorrent_downloader/webtorrent_streaming_test_cut_partial_download.mjs:177-188", "hash": "53a73f2e44b4085175d51f90edd0b56b", "title": "Torrent Download Completion: FFmpeg Close & Logging"}, "808": {"path": "/tests/anime_highlight_cuts/theme_collector/anidb_anime_parse.py", "hash": "fc39e21212f8638316abd7216f990ebc", "title": "AniDB Anime Parser"}, "809": {"path": "/tests/anime_highlight_cuts/theme_collector/anidb_anime_parse.py:1-43", "hash": "049e9bf6ae046475c5eceb8b8f314e89", "title": "AniDB Anime Data Scraping"}, "810": {"path": "/tests/anime_highlight_cuts/theme_collector/anidb_anime_parse.py:45-67", "hash": "a231c131172b4729a797d2c090f31285", "title": "AniDB Anime Parser with BeautifulSoup"}, "811": {"path": "/tests/anime_highlight_cuts/theme_collector/anidb_search_parse.py", "hash": "a3000cf2c3ba8cea9da3b0686bf97ccf", "title": "AniDB Anime Search Parser"}, "812": {"path": "/tests/anime_highlight_cuts/theme_collector/anidb_search_parse.py:1-38", "hash": "922c7482f0091d928047443d683e0c64", "title": "AniDB Anime Search and Parse"}, "813": {"path": "/tests/anime_highlight_cuts/theme_collector/anidb_search_parse.py:39-57", "hash": "d09712f8dbf47de7ed7f78ee78d41687", "title": "AniDB Search and Parse"}, "814": {"path": "/tests/anime_highlight_cuts/theme_collector/anilist_to_anidb.py", "hash": "8f5d2d9c06e27ae86ff94501e33396fb", "title": "Anilist to Anidb Anime Matching"}, "815": {"path": "/tests/anime_highlight_cuts/theme_collector/anime_compilation_video_metadata.py", "hash": "b0c3462409a08dc31bfb22d03c324907", "title": "Bilibili Video Metadata Scraper"}, "816": {"path": "/tests/anime_highlight_cuts/theme_collector/anime_compilation_video_metadata.py:1-31", "hash": "dc56a1b717091b9268786fe567374fd6", "title": "Bilibili Video Metadata Scraper"}, "817": {"path": "/tests/anime_highlight_cuts/theme_collector/anime_compilation_video_metadata.py:32-66", "hash": "ec5fa755073f78557544e012970c8643", "title": "Bilibili Video Metadata Collection and Download"}, "818": {"path": "/tests/anime_highlight_cuts/theme_collector/anime_compilation_video_metadata.py:68-97", "hash": "9338090639d9cddb98be184cc0f2a72d", "title": "Bilibili Video Metadata Retriever"}, "819": {"path": "/tests/anime_highlight_cuts/theme_collector/anime_compilation_video_metadata.py:98-135", "hash": "9914458c285522596dd93c005a0bc27f", "title": "Anime Video Metadata Parser"}, "820": {"path": "/tests/anime_highlight_cuts/theme_collector/anime_compilation_video_metadata.py:136-160", "hash": "89d62a85e64c12d02d3308e64554a1c9", "title": "Anime Video Metadata Collector"}, "821": {"path": "/tests/anime_highlight_cuts/theme_collector/anime_compilation_video_metadata.py:161-163", "hash": "5c4f3b33c788a28476faf280358a8672", "title": "Missing Video Tag: Dimension Check and Error Handling"}, "822": {"path": "/tests/anime_highlight_cuts/theme_collector/anime_video_downloader.py", "hash": "964f022d9afdbb4a6233cb7c4caeee68", "title": "Bilibili Downloader with Error Handling"}, "823": {"path": "/tests/anime_highlight_cuts/theme_collector/anime_video_downloader.py:1-26", "hash": "2e20ea464df0a7c66faa8a688c361ae9", "title": "Anime Video Downloader: Yt-dlp Integration"}, "824": {"path": "/tests/anime_highlight_cuts/theme_collector/anime_video_downloader.py:27-59", "hash": "9f848fb3fd9c3e7829edd2c999037fb0", "title": "Anime Video Downloader Script"}, "825": {"path": "/tests/anime_highlight_cuts/theme_collector/anime_video_downloader.py:60-65", "hash": "5cd1a9c9835ec97249ef2b3d8740dc93", "title": "Find Target File with Prefix"}, "826": {"path": "/tests/anime_highlight_cuts/theme_collector/anime_video_frame_cropper_labeller.py", "hash": "e444e22069dfa6bb94b0a1b212cdd981", "title": "Anime Frame Cropper and Labeler"}, "827": {"path": "/tests/anime_highlight_cuts/theme_collector/anime_video_frame_cropper_labeller.py:1-48", "hash": "85f215c869bf0cbb04c76d4004d00d71", "title": "Video Format Checker and Keyboard Controller"}, "828": {"path": "/tests/anime_highlight_cuts/theme_collector/anime_video_frame_cropper_labeller.py:50-77", "hash": "ab95f43d204f309df04f3b9a04c42bc1", "title": "Video ROI Extractor and Labeller"}, "829": {"path": "/tests/anime_highlight_cuts/theme_collector/anime_video_frame_cropper_labeller.py:78-89", "hash": "b10f598b6b15b61bd08e3136b5dfd609", "title": "Anime Frame Cropper and Labeler"}, "830": {"path": "/tests/anime_highlight_cuts/theme_collector/bilibili_anime_compilation_finder.py", "hash": "3387445bf467f29c304c6fe3e9920980", "title": "Bilibili Anime Compilation Tag Dictionary"}, "831": {"path": "/tests/anime_highlight_cuts/theme_collector/bv2av.py", "hash": "53f164133da427dd7ddf08e756b0b3b2", "title": "BV/AV ID Converter"}, "832": {"path": "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset.py", "hash": "566f9d1b81e864c3de57096bdab28e43", "title": "Create COCO-PIP Dataset: Anime Highlight Cuts"}, "833": {"path": "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset.py:1-34", "hash": "7285d16ebb359090dfa72011ec13a5fb", "title": "Create COCO-PIP Dataset for Anime Highlights"}, "834": {"path": "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset.py:36-68", "hash": "3d3c27b4052b0cc55fe4ecc4ca705dbf", "title": "Randomizer Code Bug: Missing Random Selections"}, "835": {"path": "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset.py:71-95", "hash": "73472dbeca55c2e5c97e11fe161ee21d", "title": "Gradient Image Generator"}, "836": {"path": "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset.py:96-118", "hash": "f5e6437e6bcf8a3994dc2bff213151a4", "title": "Main Background Color Detector"}, "837": {"path": "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset.py:120-139", "hash": "b5de7324918d5c1feea4353fd3f04c20", "title": "Striped Background Generator"}, "838": {"path": "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset.py:140-164", "hash": "1cbf81cffce5d965626e3baa684d2437", "title": "Theme Collector: Coco-Pip Dataset"}, "839": {"path": "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset.py:165-189", "hash": "feb51733cba5b56b161c3ce5a871237d", "title": "OpenCV Text Overlay Generator"}, "840": {"path": "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset.py:190-221", "hash": "33ab45dec4c5ca26adf2fe8f0afeaa54", "title": "Creating Image Canvas for Specific Formats"}, "841": {"path": "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset.py:222-254", "hash": "3ece8ec5abdab524099ba2cd1ec4d7cb", "title": "Resizing, Boxing, and Drawing Rectangles"}, "842": {"path": "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset.py:255-281", "hash": "cbbf07fd8acbbadae03a081b3ded783c", "title": "Resize and Color Rectangle Images"}, "843": {"path": "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset.py:282-308", "hash": "e63f920e00752349f5b9d2c9bbc4a016", "title": "Creating Rounded Rectangles and Blending Images"}, "844": {"path": "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset.py:309-329", "hash": "88aa6af86ddac4e2bc553c6b4ed503cb", "title": "Image Manipulation and Labeling Script"}, "845": {"path": "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset_standalone.py", "hash": "8e43d7d9880b566fb6a6dd3915496e5a", "title": "Create COCO PIP Dataset Standalone"}, "846": {"path": "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset_standalone.py:1-37", "hash": "0807bc92405731967705627fe2f7752b", "title": "Create COCO PIP Dataset Standalone"}, "847": {"path": "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset_standalone.py:38-73", "hash": "56f29a76247c5ceaefa1cbf51d265c13", "title": "Initialize COCO PIP Dataset Variables"}, "848": {"path": "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset_standalone.py:74-104", "hash": "8fede37a6b59331277d66379e22b0b2d", "title": "Random Color COCO Dataset Generator"}, "849": {"path": "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset_standalone.py:105-130", "hash": "35184396e7004eb173fbf699d798b23e", "title": "COCO PIP Dataset Generation"}, "850": {"path": "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset_standalone.py:131-156", "hash": "c03749450f742c80230de3730b28f1cb", "title": "Furthest Color Background Generator"}, "851": {"path": "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset_standalone.py:157-176", "hash": "9064652531f338cae885ec2bea29734c", "title": "Striped Background Generator"}, "852": {"path": "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset_standalone.py:177-201", "hash": "44ce5a74f8a081bf7195667a00b0f5b6", "title": "Generate Background Themes"}, "853": {"path": "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset_standalone.py:202-232", "hash": "484621dc8d1b344e15fefbc58d488d9c", "title": "Random Text Overlays with OpenCV"}, "854": {"path": "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset_standalone.py:234-263", "hash": "b0066a72b3308536c66e9fd6970bb3e9", "title": "Mask Image Creation and Resizing"}, "855": {"path": "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset_standalone.py:264-296", "hash": "6f2ff31350b13852dd8f87d943736fa2", "title": "Ellipse Mask Creation and Compositing"}, "856": {"path": "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset_standalone.py:297-321", "hash": "b24bd697fa464cbae943d04f0a236932", "title": "Resizing and Overlaying Images with Rectangle or Rounded Rectangle"}, "857": {"path": "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset_standalone.py:322-349", "hash": "bd6c3fe85ad84f1256bc77c228bdc91c", "title": "Overlay Effect with Masking and Labels"}, "858": {"path": "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset_standalone.py:350-374", "hash": "67974b5a0c7c7280aa81d7b08d789848", "title": "Create COCO-style Pip Dataset"}, "859": {"path": "/tests/anime_highlight_cuts/theme_collector/create_dataset.py", "hash": "a3014e515131f84629fa95d664a10f00", "title": "Create Dataset from Anime Frames"}, "860": {"path": "/tests/anime_highlight_cuts/theme_collector/create_dataset.py:1-39", "hash": "2153c0a5536198f50ad0c6e00c1fa1ea", "title": "Creates Dataset from Train/Test Directories"}, "861": {"path": "/tests/anime_highlight_cuts/theme_collector/create_dataset.py:40-73", "hash": "7186839a4030d6597585bfe444f8da38", "title": "Create YAML Dataset from CSV"}, "862": {"path": "/tests/anime_highlight_cuts/theme_collector/create_dataset.py:74-110", "hash": "9dfbf55d43b07c4eedf4736c83d0cc60", "title": "Frame-by-Frame Dataset Creation"}, "863": {"path": "/tests/anime_highlight_cuts/theme_collector/create_dataset.py:111-152", "hash": "2abdb360c364736120d879b42b489b57", "title": "Video Frame Labeler"}, "864": {"path": "/tests/anime_highlight_cuts/theme_collector/create_dataset.py:153-166", "hash": "f3970ee43658d4a0f71acfa7ab81ce3d", "title": "Create Dataset from Anime Clips"}, "865": {"path": "/tests/anime_highlight_cuts/theme_collector/create_rounded_rectangle.py", "hash": "6da7a921a605c1eeffce253d436636b8", "title": "Create Rounded Rectangle Image"}, "866": {"path": "/tests/anime_highlight_cuts/theme_collector/keyboard_listener.py", "hash": "522d0180b40e773921d20addb8575208", "title": "Keyboard Event Listener"}, "867": {"path": "/tests/anime_highlight_cuts/theme_collector/make_picture_in_picture_challange.py", "hash": "9a7ba4a9e7b1ce4b90b53a4423f3e168", "title": "Create PIP Anime Highlights"}, "868": {"path": "/tests/anime_highlight_cuts/theme_collector/pack_source_dataset.sh", "hash": "269ab564a4a6615c2aaf1654fbc219cd", "title": "Pack Source Dataset"}, "869": {"path": "/tests/anime_highlight_cuts/theme_collector/screenshot_saucenao.py", "hash": "92ebcbac11d7cb54856f049e1a06a961", "title": "Anime Image Identifier and Data Extractor"}, "870": {"path": "/tests/anime_highlight_cuts/theme_collector/screenshot_saucenao.py:1-25", "hash": "54e5db684cb1b28e2937e61cbcbaf7d3", "title": "Screenshot SauceNao Identifier"}, "871": {"path": "/tests/anime_highlight_cuts/theme_collector/screenshot_saucenao.py:26-37", "hash": "ec115c1d1e68fea5ac2d73f466e71b71", "title": "Anime Cut Data Collector"}, "872": {"path": "/tests/anime_highlight_cuts/theme_collector/screenshot_tracemoe.py", "hash": "61976e2538a3953715dadfd93e950b73", "title": "Trace.moe API Anime Character Recognition"}, "873": {"path": "/tests/anime_highlight_cuts/theme_collector/strip_optimizer_from_trained_best_model.py", "hash": "1cf94419aa849cd9617bcb860e34cdf2", "title": "Stripping Optimizers from Trained Model"}, "874": {"path": "/tests/anime_highlight_cuts/theme_collector/test_video_overlay.sh", "hash": "929e41ee261f14a55c1f07706934a4b5", "title": "Video Overlay Script"}, "875": {"path": "/tests/anime_highlight_cuts/theme_collector/view_boundingbox.py", "hash": "304877b6ddddcf89f0dd5e63872799ce", "title": "Bounding Box Rectangle Drawal in OpenCV"}, "876": {"path": "/tests/anime_highlight_cuts/theme_collector/yolov8_test.py", "hash": "76ce8be9444d55c04064751bff6f787c", "title": "YOLO-based Anime Frame Detection"}, "877": {"path": "/tests/anime_highlight_cuts/theme_collector/yolov8_test.py:1-43", "hash": "5a4c782faab587417fda131c554fb166", "title": "YOLO Image Processing Pipeline"}, "878": {"path": "/tests/anime_highlight_cuts/theme_collector/yolov8_test.py:44-69", "hash": "9e9f76e4de8d39085f152bfcb8d2496e", "title": "Frame Filtering Algorithm"}, "879": {"path": "/tests/anime_highlight_cuts/theme_collector/yolov8_test.py:71-89", "hash": "385e9bcbd9aed43ec1f9181343d5f1c5", "title": "PIP Frame Detection and Display"}, "880": {"path": "/tests/anime_highlight_cuts/theme_collector/yolov8_train_save_test.py", "hash": "add99aff8d5bd00e14ef1311f0256e50", "title": "YOLO Object Detection Training and Export"}, "881": {"path": "/tests/apple_prores_encoding_play/test.sh", "hash": "ef3e799958da90c9d4a3aa0e76ec1d6d", "title": "Efficient Prores Encoding with FFmpeg"}, "882": {"path": "/tests/audio_volume_meter/test_volume_meter.py", "hash": "7aa164fa32f5429fe098f98d0d39370d", "title": "KMeans-Based Audio Segment Labeling"}, "883": {"path": "/tests/audio_volume_meter/test_volume_meter.py:1-37", "hash": "54cd2333f6de0e546307100975d645a0", "title": "Padding Moving Average Calculation"}, "884": {"path": "/tests/audio_volume_meter/test_volume_meter.py:38-67", "hash": "c287bf35e199b10eb5ce28b34ce9338a", "title": "Standard Deviation, Max, Abs Avg for Audio"}, "885": {"path": "/tests/audio_volume_meter/test_volume_meter.py:68-92", "hash": "8e67c8866db11bffb8e03c0a28dd6ec8", "title": "Moving Average-Based Vocal Slicing Algorithm"}, "886": {"path": "/tests/audio_volume_meter/test_volume_meter.py:93-123", "hash": "a20cf84b6e6864d245abf52e9b2cdc77", "title": "Vocal Segment Classification and Timing"}, "887": {"path": "/tests/audio_volume_meter/test_volume_meter.py:124-157", "hash": "f8d8681be53ab6e0bd4afa2a2ad2459e", "title": "Vocal Segment Clustering with KMeans"}, "888": {"path": "/tests/basic_pitch_multi_midi_conversion/test.sh", "hash": "218b8d6734df0e2ee89c4d789f68c16f", "title": "Multi-MIDI Conversion via Basic Pitch"}, "889": {"path": "/tests/bezier_paddlehub_dogcat_detector_serving/client.py", "hash": "25eb4d7d6dc7dd10b52bf8b39c2650aa", "title": "PaddleHub Dog/Cat Image Detection"}, "890": {"path": "/tests/bezier_paddlehub_dogcat_detector_serving/server.py", "hash": "e65fa91a2b02f1093e50168cdd805d28", "title": "Bezier PaddleHub DogCat Detector Server Import"}, "891": {"path": "/tests/bilibili_login_get_credential_view_data/dump_favourite_list.py", "hash": "9a8ad5e5e397f364497e8928b32fe0d7", "title": "Bilibili API Credentials Processor"}, "892": {"path": "/tests/bilibili_login_get_credential_view_data/dump_favourite_list.py:1-34", "hash": "6919717364f632b5fddbe88759b4c7a9", "title": "Bilibili API Credential Loader"}, "893": {"path": "/tests/bilibili_login_get_credential_view_data/dump_favourite_list.py:35-66", "hash": "b3127f1e06bf102a22c24e4af47abcfa", "title": "Bilibili Favorite List Parser"}, "894": {"path": "/tests/bilibili_login_get_credential_view_data/dump_favourite_list.py:67-78", "hash": "18da4e1594e5f615442840068ec23d11", "title": "Upsert Bilibili Favorite List Data"}, "895": {"path": "/tests/bilibili_login_get_credential_view_data/dump_view_history.py", "hash": "fa8c872cbc02461e1097bdefc9b967fb", "title": "Bilibili Video History Processor"}, "896": {"path": "/tests/bilibili_login_get_credential_view_data/dump_view_history.py:1-36", "hash": "0fccdfce349691cef02327baf5a6046a", "title": "Bilibili Credential Update and History Tracker"}, "897": {"path": "/tests/bilibili_login_get_credential_view_data/dump_view_history.py:37-59", "hash": "7a84a4b9f59eea5b5526232192fa5086", "title": "Video History Fetch and Store Script"}, "898": {"path": "/tests/bilibili_login_get_credential_view_data/test.py", "hash": "d57f4ab95228b6611f065cf1cd0eb29e", "title": "Bilibil Login: Password or SMS"}, "899": {"path": "/tests/bilibili_login_get_credential_view_data/test.py:1-46", "hash": "0faa4e4722e6b09e3f0841713880e43e", "title": "SMS/Password Login with Geetest Validation"}, "900": {"path": "/tests/bilibili_login_get_credential_view_data/test.py:47-82", "hash": "23f98ba52f56795ce0ec4c7e950b45bf", "title": "Atomic SMS Login and Database Update"}, "901": {"path": "/tests/bilibili_login_get_credential_view_data/test_login_fail.py", "hash": "477ba06f5682e5a4918f2e64d986988f", "title": "Expired Data Login Failure"}, "902": {"path": "/tests/bilibili_login_get_credential_view_data/test_login_fail.py:1-27", "hash": "20473ebae8245433e029aa939786c887", "title": "Bilibili Login View Data Test"}, "903": {"path": "/tests/bilibili_login_get_credential_view_data/test_login_fail.py:28-31", "hash": "58c4c49a1fdb05ef948102a567193e02", "title": "Expired Session Data Login Test"}, "904": {"path": "/tests/bilibili_login_get_credential_view_data/test_login_successful.py", "hash": "d6004d8c2e4a2b54d7955a6d234099d7", "title": "Bilibili API Login & Credential Retrieval"}, "905": {"path": "/tests/bilibili_login_get_credential_view_data/tinydb_test.py", "hash": "e9764db63060b9a4ec5277ba79923328", "title": "TinyDB Test for Login View Data"}, "906": {"path": "/tests/bilibili_practices/bilibili_dollar/fetch_related_content.py", "hash": "ea8b9cd5b1dba910b37b71d2913cacc3", "title": "Fetch Bilibili Drawing Dollars Videos"}, "907": {"path": "/tests/bilibili_practices/bilibili_science_subtitle_with_cn_voice/commons.py", "hash": "1f1f10f51fcc6d62a4eea4712700188a", "title": "JSON Walk and Locate Functions"}, "908": {"path": "/tests/bilibili_practices/bilibili_science_subtitle_with_cn_voice/commons.py:1-29", "hash": "cc470df22532ea1a574edaf5af3a43cd", "title": "JSON Recursive Traversal Functions"}, "909": {"path": "/tests/bilibili_practices/bilibili_science_subtitle_with_cn_voice/commons.py:30-57", "hash": "57257c64d6735d7817536573009d741e", "title": "List Checking Functions in bilibili_science_subtitle_with_cn_voice Commons"}, "910": {"path": "/tests/bilibili_practices/bilibili_science_subtitle_with_cn_voice/create_output.sh", "hash": "385ea7a9b21dba5ff0529cc7dadd1074", "title": "Bilibili Subtitle Merger with FFmpeg"}, "911": {"path": "/tests/bilibili_practices/bilibili_science_subtitle_with_cn_voice/create_output.sh:1-9", "hash": "78bf1b148adf536d452b5c09ae42b83b", "title": "Subtitle Combining and Trimming with FFmpeg"}, "912": {"path": "/tests/bilibili_practices/bilibili_science_subtitle_with_cn_voice/create_output.sh:9-9", "hash": "2110b916876ff3ff81cd8ea769bac53e", "title": "Subtitling Videos: The Bilibili Method"}, "913": {"path": "/tests/bilibili_practices/bilibili_science_subtitle_with_cn_voice/download_when_complete.py", "hash": "9a6e18fdbf7215c96d1c2c7321e0d321", "title": "Periodic Kaggle Status Checker"}, "914": {"path": "/tests/bilibili_practices/bilibili_science_subtitle_with_cn_voice/get_ytInitialData.py", "hash": "c1642681415a52e1956f090bdfdd0f4b", "title": "Extract JSON Data from Bilibili Science Subtitles"}, "915": {"path": "/tests/bilibili_practices/bilibili_science_subtitle_with_cn_voice/get_ytInitialData.py:1-40", "hash": "5033d805264f8c4accf7cd968d1be305", "title": "Extracting Bilibili YT Data with Python"}, "916": {"path": "/tests/bilibili_practices/bilibili_science_subtitle_with_cn_voice/get_ytInitialData.py:41-67", "hash": "6d85834f94d08320f5f58d75f7e7e643", "title": "Extracting Bilibili YT Data for Subtitles"}, "917": {"path": "/tests/bilibili_practices/bilibili_science_subtitle_with_cn_voice/get_ytInitialData.py:67-88", "hash": "5b358719caecf3f558e1ae7f77215779", "title": "JSON Data Extraction and Storage"}, "918": {"path": "/tests/bilibili_practices/bilibili_science_subtitle_with_cn_voice/get_ytInitialData.py:89-116", "hash": "e7781cc5cef9a9c4bd3fd5e845a1ddf7", "title": "Update Bilibili Video Details"}, "919": {"path": "/tests/bilibili_practices/bilibili_science_subtitle_with_cn_voice/init.sh", "hash": "864da4a03ff989d02fefbca22e6faa0c", "title": "Initializing Kaggle Kernel"}, "920": {"path": "/tests/bilibili_practices/bilibili_science_subtitle_with_cn_voice/test.py", "hash": "311721eed705b3d392b8af834a82ef2c", "title": "Bilibili Subtitle Extractor"}, "921": {"path": "/tests/bilibili_practices/bilibili_science_subtitle_with_cn_voice/test2.py", "hash": "ffa7eaa2bd3e25b504549320f83669ea", "title": "Install YTDLP and Download BiliBili Subtitles"}, "922": {"path": "/tests/bilibili_practices/bilibili_science_subtitle_with_cn_voice/translate_srt.py", "hash": "c54ce9cd45e654e497210dbe013d6977", "title": "Translate SRT: Enhanced Readability"}, "923": {"path": "/tests/bilibili_practices/bilibili_science_subtitle_with_cn_voice/web_translator.py", "hash": "415f62b6c92ab1c2698309512aa37606", "title": "Multi-Service Translator for Bilbili Science Subtitles"}, "924": {"path": "/tests/bilibili_practices/bilibili_tarot/all_typography.py", "hash": "28ec8e8caa89c6814f678fabea1c1a9f", "title": "Bilibili Typography Generator"}, "925": {"path": "/tests/bilibili_practices/bilibili_tarot/all_typography.py:1-46", "hash": "b3226196763e8bc7626b5b7ca4432513", "title": "Bilibili Tarot Typography Generator"}, "926": {"path": "/tests/bilibili_practices/bilibili_tarot/all_typography.py:48-93", "hash": "82986ad2b02394192f6402db616d911c", "title": "Bilibili Tarot: Randomized Typography and Music"}, "927": {"path": "/tests/bilibili_practices/bilibili_tarot/all_typography.py:94-97", "hash": "0b7c322b520fc8305266a63371e1f8ec", "title": "Bilibili Typography Generation"}, "928": {"path": "/tests/bilibili_practices/bilibili_tarot/all_typography_underline_subtitle.py", "hash": "faac4e64c49f8e553559032e6b9ea6af", "title": "Bilibili Typography Generator"}, "929": {"path": "/tests/bilibili_practices/bilibili_tarot/all_typography_underline_subtitle.py:1-43", "hash": "ad39ab6a51616d0ecca37b1599f22447", "title": "Bilibili Typography Generator"}, "930": {"path": "/tests/bilibili_practices/bilibili_tarot/all_typography_underline_subtitle.py:45-56", "hash": "a64160e40665f828e0e2ca0a47fabb18", "title": "Bilibili Video Typography Script"}, "931": {"path": "/tests/bilibili_practices/bilibili_tarot/flipcards.py", "hash": "d8e757429a45beeb51d254f55198718b", "title": "Tarot Flipcard Video Generator"}, "932": {"path": "/tests/bilibili_practices/bilibili_tarot/functional_gen_typo_video_seq.py", "hash": "2987fa1897e3a83ef338bc4e12755ee3", "title": "Generate Typo Video Sequence"}, "933": {"path": "/tests/bilibili_practices/bilibili_tarot/functional_gen_typo_video_seq.py:1-39", "hash": "c03ea9c996ca7ca29be4e9a7c634e7e8", "title": "Video Sequence Generator from Image Sequence"}, "934": {"path": "/tests/bilibili_practices/bilibili_tarot/functional_gen_typo_video_seq.py:40-42", "hash": "5159733285eaa82a17c8e04f93e271de", "title": "Save and Output Composition Video"}, "935": {"path": "/tests/bilibili_practices/bilibili_tarot/functional_generate_demo_tarot.py", "hash": "6f19667111dc4142dbaddd03bf950985", "title": "Tarot Video Processing with FFmpeg"}, "936": {"path": "/tests/bilibili_practices/bilibili_tarot/functional_generate_demo_tarot.py:1-30", "hash": "69b7f875618e42b5bfe615a176ff7348", "title": "Bilibili Tarot Image Sequence Generator"}, "937": {"path": "/tests/bilibili_practices/bilibili_tarot/functional_generate_demo_tarot.py:31-49", "hash": "f97d5fdd99ca1a853c19a3eed615dc77", "title": "Video Processing with FFmpeg"}, "938": {"path": "/tests/bilibili_practices/bilibili_tarot/functional_voice_with_pictures.py", "hash": "bcbe876392dad979fbea8f40daf33989", "title": "Bilibili: Voice with Pictures"}, "939": {"path": "/tests/bilibili_practices/bilibili_tarot/functional_voice_with_pictures.py:1-35", "hash": "601b0f1769262f063371c8d2a9e02328", "title": "Python Script for Voiceover Videos"}, "940": {"path": "/tests/bilibili_practices/bilibili_tarot/functional_voice_with_pictures.py:36-66", "hash": "0a2fe3cbe044b0424b9afe5e203fd3fd", "title": "Voice-to-Picture Typography Generation"}, "941": {"path": "/tests/bilibili_practices/bilibili_tarot/functional_voice_with_pictures.py:67-91", "hash": "1361153729698c305e4ea7533183ed3d", "title": "Generate Videos from Audio Segments"}, "942": {"path": "/tests/bilibili_practices/bilibili_tarot/functional_voice_with_pictures.py:92-114", "hash": "43a67e6f3b41cbe52956e370e3c5e7e0", "title": "Bilibili Video Processing Script"}, "943": {"path": "/tests/bilibili_practices/bilibili_tarot/functional_voice_with_pictures.py:115-147", "hash": "2ec57fc1935a1befae13ceab1ecb98e6", "title": "Voice and Video Directory Generator"}, "944": {"path": "/tests/bilibili_practices/bilibili_tarot/functional_voice_with_pictures.py:148-170", "hash": "c194162c022e5d8243e3d9191181da23", "title": "Multi-Media Merging & Concatenation"}, "945": {"path": "/tests/bilibili_practices/bilibili_tarot/functional_voice_with_pictures.py:171-176", "hash": "5cd54a73477ceabaf4264a36ddc907cc", "title": "Audio Tempo Sync with FFMPEG"}, "946": {"path": "/tests/bilibili_practices/bilibili_tarot/gen_typo_video_seq.py", "hash": "a80d5e91157c2f9a7fd0d978a7c5c50a", "title": "Generate Typography Video Sequence"}, "947": {"path": "/tests/bilibili_practices/bilibili_tarot/generate_demo_tarot.py", "hash": "1fa042b00e2bc38fe4ecdd3d4628f33e", "title": "Bilibili Tarot Demo Video Generator"}, "948": {"path": "/tests/bilibili_practices/bilibili_tarot/generate_demo_tarot.py:1-32", "hash": "e8df7369e128d058e04e7c1555abcfc0", "title": "Create Tarot Demo Video"}, "949": {"path": "/tests/bilibili_practices/bilibili_tarot/generate_demo_tarot.py:32-34", "hash": "2b04db48c45d439b42f2beaa9ea974e7", "title": "Resize Tarot Video with FFmpeg"}, "950": {"path": "/tests/bilibili_practices/bilibili_tarot/generate_typography.py", "hash": "f46fd73570d6d2ea359515de366415e9", "title": "Python Typography Generation Script"}, "951": {"path": "/tests/bilibili_practices/bilibili_tarot/generate_typography.py:1-48", "hash": "104265bf4319d569c8ac63661b7afa35", "title": "Dynamic Typography with p5.js and Chinese Fonts"}, "952": {"path": "/tests/bilibili_practices/bilibili_tarot/generate_typography.py:49-64", "hash": "c5e9acbf325b96ab92ca3d48ad45b869", "title": "Python Typography Generator"}, "953": {"path": "/tests/bilibili_practices/bilibili_tarot/generate_typography_with_voice.py", "hash": "cdc56a258c5a2fe7a90df84cdbcf8336", "title": "Typography Frames Generation with Voice"}, "954": {"path": "/tests/bilibili_practices/bilibili_tarot/generate_typography_with_voice.py:1-47", "hash": "6606016a1d00d2ce53a7a9d55d27ec05", "title": "Automatic Typography Generation with Image Rendering"}, "955": {"path": "/tests/bilibili_practices/bilibili_tarot/generate_typography_with_voice.py:48-69", "hash": "cf3805d222a4b90510f7a60faa40b255", "title": "Typography Generation with Voice"}, "956": {"path": "/tests/bilibili_practices/bilibili_tarot/get_figures.js", "hash": "2afd1e897f9db2e6bd562d3b70ba042e", "title": "Extract Bilibili Figures URLs"}, "957": {"path": "/tests/bilibili_practices/bilibili_tarot/get_foreground.py", "hash": "3cb59765613f98cd3bea41eeaa193717", "title": "Grayscale Image Difference Masking"}, "958": {"path": "/tests/bilibili_practices/bilibili_tarot/get_tarots.py", "hash": "1c2c8fb7701c18a78d09e5fe8c832d9d", "title": "Tarot Card Recognition and Renaming"}, "959": {"path": "/tests/bilibili_practices/bilibili_tarot/get_tarots.py:1-1", "hash": "9788e176f3704e342809db0d7c9897f8", "title": "List of Image URLs in Get Tarots Script"}, "960": {"path": "/tests/bilibili_practices/bilibili_tarot/get_tarots.py:1-4", "hash": "6e4593dd7b3348394e849afc0b8042eb", "title": "URL Listing for Image Resources"}, "961": {"path": "/tests/bilibili_practices/bilibili_tarot/get_tarots.py:4-4", "hash": "cbb9ccadd6a4c7b45085d4373d7557b1", "title": "Tarot Card Image URLs"}, "962": {"path": "/tests/bilibili_practices/bilibili_tarot/get_tarots.py:4-36", "hash": "cccf72b2c86991d3055d7bf043214e42", "title": "Tarot Image Download"}, "963": {"path": "/tests/bilibili_practices/bilibili_tarot/get_tarots.py:37-54", "hash": "e829905dbe6223341bef93621266d2ad", "title": "Temporary File OCR and Renaming"}, "964": {"path": "/tests/bilibili_practices/bilibili_tarot/kill_pdspc.sh", "hash": "4eba5bf93dafecc5d1aae036f71a748f", "title": "Kill Process: \"paddlespeech\""}, "965": {"path": "/tests/bilibili_practices/bilibili_tarot/kill_xb.sh", "hash": "d517d88b1277e50604ef0822cde9b4d4", "title": "Kill XB Processes Script"}, "966": {"path": "/tests/bilibili_practices/bilibili_tarot/mylist.txt", "hash": "00cd8cd19ebbcd259ecec43b7b498a46", "title": "Bilibili Playlist: MyList.txt"}, "967": {"path": "/tests/bilibili_practices/bilibili_tarot/pooling.py", "hash": "478c42dd025233564306a04128887f76", "title": "Directory Pooling and File Movement"}, "968": {"path": "/tests/bilibili_practices/bilibili_tarot/scriptable_generate_typography_with_voice.py", "hash": "f21b7d78b807f147c3225da6ac52d1e2", "title": "Generate Typography with Voice"}, "969": {"path": "/tests/bilibili_practices/bilibili_tarot/scriptable_generate_typography_with_voice.py:1-47", "hash": "500bd1a5ad0c9d7e1b533d109a5bbadc", "title": "Scriptable Typography with Voice Generation"}, "970": {"path": "/tests/bilibili_practices/bilibili_tarot/scriptable_generate_typography_with_voice.py:48-85", "hash": "ab7593f21abce268e143c3439894edae", "title": "Text Wrapping and Line Breaking Algorithm"}, "971": {"path": "/tests/bilibili_practices/bilibili_tarot/scriptable_generate_typography_with_voice.py:86-109", "hash": "98f3978b04be43bb7de3bb1bbaa1b8b5", "title": "Randomized Typography with Voice and Screenshot"}, "972": {"path": "/tests/bilibili_practices/bilibili_tarot/scriptable_generate_typography_with_voice_underline_subtitle.py", "hash": "72e70ada0052c12af3d037d0d79a9eb4", "title": "Generate Typography with Voice Underline Subtitle"}, "973": {"path": "/tests/bilibili_practices/bilibili_tarot/scriptable_generate_typography_with_voice_underline_subtitle.py:1-46", "hash": "314a4baefdda36e0e91b8cbe6f647f3e", "title": "Generating Typography with Voice Underline Subtitle"}, "974": {"path": "/tests/bilibili_practices/bilibili_tarot/scriptable_generate_typography_with_voice_underline_subtitle.py:47-65", "hash": "a0b19fb358db2be4440c99afc349964c", "title": "Generate Typography with Voice and Subtitle"}, "975": {"path": "/tests/bilibili_practices/bilibili_tarot/tarot_correspondences.py", "hash": "284dc4f20f367f668ca3a1fd0b3f122d", "title": "Tarot Card Matching Algorithm"}, "976": {"path": "/tests/bilibili_practices/bilibili_tarot/tarot_correspondences.py:1-48", "hash": "f6347b5a996ce07b533dad6438fe3565", "title": "Tarot Card Image Mapping"}, "977": {"path": "/tests/bilibili_practices/bilibili_tarot/tarot_correspondences.py:49-53", "hash": "a4827ec314aa7c74b5ee36e94d56adfb", "title": "Target Correspondences Key Printer"}, "978": {"path": "/tests/bilibili_practices/bilibili_tarot/tarot_descriptions.py", "hash": "c6b910c303d09063ea682a02af3e6ffa", "title": "Tarot Tower: Embrace Change"}, "979": {"path": "/tests/bilibili_practices/bilibili_tarot/tarot_descriptions.py:1-31", "hash": "aa29739dbeb017115d2a8b8437302564", "title": "Tarot Card Descriptions"}, "980": {"path": "/tests/bilibili_practices/bilibili_tarot/tarot_descriptions.py:31-45", "hash": "6f7f9dc2b4f11f02e6cbe88129198242", "title": "Tarot Card Descriptions: Life Insights"}, "981": {"path": "/tests/bilibili_practices/bilibili_tarot/tarot_descriptions.py:47-61", "hash": "46fae533b3015a76f5c21a5451bbae1e", "title": "Tarot Card Descriptions Code Snippet"}, "982": {"path": "/tests/bilibili_practices/bilibili_tarot/tarot_descriptions.py:63-77", "hash": "11239c34fb3aa38de44d32bb45ed9313", "title": "Tower Tarot Description"}, "983": {"path": "/tests/bilibili_practices/bilibili_tarot/tarot_descriptions.py:77-91", "hash": "9df476733343385cac67610fe2316104", "title": "Tarot Card Descriptions"}, "984": {"path": "/tests/bilibili_practices/bilibili_tarot/tarot_descriptions.py:93-125", "hash": "fee235645e6229328aeeb6cf346a0367", "title": "Tarot Card-Element Mapping and Roman Numeral Conversion"}, "985": {"path": "/tests/bilibili_practices/bilibili_tarot/tarot_descriptions.py:126-126", "hash": "12b5896087f68c1622df538e428d395c", "title": "Function/Operation Result Returned"}, "986": {"path": "/tests/bilibili_practices/bilibili_tarot/temp.txt", "hash": "a76145b7e90cddbd173b53d3c272a813", "title": "Bilibili Tarot Prompt"}, "987": {"path": "/tests/bilibili_practices/bilibili_tarot/test_command.sh", "hash": "70a567b665c8fc514665e480dfadcb65", "title": "Combining Screenshots to Video with Melt"}, "988": {"path": "/tests/bilibili_practices/bilibili_tarot/test_common.py", "hash": "1c88a2f8af6bbcf7cba71f05321b3735", "title": "Bypassing Proxy for Demo Testing"}, "989": {"path": "/tests/bilibili_practices/bilibili_tarot/voice_with_pictures.py", "hash": "aeb6bd53ecb2e6e9bad8369bae4c1a73", "title": "Bilibili Tarot: Voice to Video"}, "990": {"path": "/tests/bilibili_practices/bilibili_tarot/voice_with_pictures.py:1-38", "hash": "9ea985e795a277e7b82aa3ab1d0a5e1d", "title": "Text-to-Speech Merge Tool with Crossfades"}, "991": {"path": "/tests/bilibili_practices/bilibili_tarot/voice_with_pictures.py:39-68", "hash": "ac659893f7b06b36b0e85b6942a6ebb8", "title": "Automate Bilibili Voiceovers with Python"}, "992": {"path": "/tests/bilibili_practices/bilibili_tarot/voice_with_pictures.py:69-87", "hash": "9d3b86cfd576812d4f90cce38cca21e7", "title": "Audio & Video Merge Tool"}, "993": {"path": "/tests/bilibili_practices/bilibili_video_translate/frame_iterator_copy.py", "hash": "9071a0023297b79b6b0ea2d0377bc997", "title": "Bilibili Frame Iterator"}, "994": {"path": "/tests/bilibili_practices/bilibili_video_translate/frame_iterator_copy.py:1-31", "hash": "6b2703f1e3bd1f6ed33313e8e35d09d5", "title": "Frame-by-Frame Video Copy and Process"}, "995": {"path": "/tests/bilibili_practices/bilibili_video_translate/frame_iterator_copy.py:32-36", "hash": "5aab9aa807e80b8701216eff90b97a1f", "title": "Bilibili Video Frame Iterator"}, "996": {"path": "/tests/bilibili_practices/bilibili_video_translate/frame_translate_processor.py", "hash": "c10dae77a8925becfba90118f6ed49dd", "title": "Video Frame Translation Processor"}, "997": {"path": "/tests/bilibili_practices/bilibili_video_translate/frame_translate_processor.py:1-34", "hash": "d8b96e64df96931c81c63f1af46f28e6", "title": "Frame Extraction and Translation Processor"}, "998": {"path": "/tests/bilibili_practices/bilibili_video_translate/frame_translate_processor.py:35-48", "hash": "3ba44f9088626d5da379c28a0c15a422", "title": "Bilibili Frame Translator"}, "999": {"path": "/tests/bilibili_practices/bilibili_video_translate/frame_translate_processor2.py", "hash": "92590eff6ea8d5a9dc9693064d89c678", "title": "Multi-Processing Frame Translator"}, "1000": {"path": "/tests/bilibili_practices/bilibili_video_translate/frame_translate_processor2.py:1-33", "hash": "79c997e837758963f08827986f9304e3", "title": "Frame-by-Frame Video Translation Processor"}, "1001": {"path": "/tests/bilibili_practices/bilibili_video_translate/frame_translate_processor2.py:35-65", "hash": "c2d77af4b66aa5a5b9a31de34e416aaf", "title": "Red Channel Intensity Reduction Functions"}, "1002": {"path": "/tests/bilibili_practices/bilibili_video_translate/frame_translate_processor2.py:66-85", "hash": "48e4fb0d6127a4773b6cac45e056ccc3", "title": "Frame-by-Frame Color Correction and Translation"}, "1003": {"path": "/tests/bilibili_practices/bilibili_video_translate/frame_translate_processor2.py:87-96", "hash": "144cab3eda8ecdde182fbfc33c663c1e", "title": "OpenCV Frame Processing and Video Saving"}, "1004": {"path": "/tests/bilibili_practices/bilibili_video_translate/frame_translate_processor3.py", "hash": "7f67c23295380ab7e21e27c4deac23ed", "title": "Bilibili Video Translation with Frame Processing"}, "1005": {"path": "/tests/bilibili_practices/bilibili_video_translate/frame_translate_processor3.py:1-32", "hash": "e830af4d1c171a36242f3e6bf03f6380", "title": "Video Processing Setup: Bilibili Frame Translation"}, "1006": {"path": "/tests/bilibili_practices/bilibili_video_translate/frame_translate_processor3.py:34-62", "hash": "9c08416116f79071689d7d405ed0c723", "title": "JSON Image Curve Conversion"}, "1007": {"path": "/tests/bilibili_practices/bilibili_video_translate/frame_translate_processor3.py:64-83", "hash": "c24e495d4c6f48945d06866aba768a70", "title": "Frame-by-Frame Chinese Translation and Red Color Fade"}, "1008": {"path": "/tests/bilibili_practices/bilibili_video_translate/frame_translate_processor3.py:84-95", "hash": "40a75199c765fda50446c1f87a86f405", "title": "Bilivideo Frame Processor and Save"}, "1009": {"path": "/tests/bilibili_practices/bilibili_video_translate/functional_dl_translator_1b_deepspeed.py", "hash": "3716f89c5a77ac37ff59acbe85255346", "title": "Deepspeed ZeRO M2M100 Translation: GPU/CPU, Distributed Training"}, "1010": {"path": "/tests/bilibili_practices/bilibili_video_translate/functional_dl_translator_1b_deepspeed.py:1-33", "hash": "c5d4e4c7f289a639c12af63a6fe36800", "title": "Deepspeed ZeRO for Large Model Inference"}, "1011": {"path": "/tests/bilibili_practices/bilibili_video_translate/functional_dl_translator_1b_deepspeed.py:34-61", "hash": "f39a7b384037a10f5a0cc4006e30e419", "title": "Deploying Big Science Transformers with DeepSpeed"}, "1012": {"path": "/tests/bilibili_practices/bilibili_video_translate/functional_dl_translator_1b_deepspeed.py:62-92", "hash": "91ac5e9c1931580671c1aa77a59c0f62", "title": "Deepspeed-based Distributed Video Translation"}, "1013": {"path": "/tests/bilibili_practices/bilibili_video_translate/functional_dl_translator_1b_deepspeed.py:93-123", "hash": "4220efc0a9fb2fa68bc502a7c1247a96", "title": "Optimizing Deepspeed Model Training"}, "1014": {"path": "/tests/bilibili_practices/bilibili_video_translate/functional_dl_translator_1b_deepspeed.py:124-146", "hash": "4d5b41f496f31a2e525b264cc8f7107d", "title": "Efficient Deepspeed ZeRO Model Initialization"}, "1015": {"path": "/tests/bilibili_practices/bilibili_video_translate/functional_dl_translator_1b_deepspeed.py:147-174", "hash": "9ade653439fdaaedd506730fc8fc67af", "title": "PyTorch Translation Setup with Deepspeed"}, "1016": {"path": "/tests/bilibili_practices/bilibili_video_translate/functional_dl_translator_1b_deepspeed.py:176-187", "hash": "a678707b08e3ad75c15316b310a3269f", "title": "Deepspeed-powered Translation Experiment"}, "1017": {"path": "/tests/bilibili_practices/bilibili_video_translate/functional_dl_translator_1b_deepspeed.py:188-220", "hash": "2394b0347e2ccd7eab4690ee34ebaaaf", "title": "Functional DL Translator Implementation"}, "1018": {"path": "/tests/bilibili_practices/bilibili_video_translate/functional_redraw_chinese_text_offline.py", "hash": "a228b48d235cafb68fbb8486ed1b7b82", "title": "PaddleOCR Offline Text Translation"}, "1019": {"path": "/tests/bilibili_practices/bilibili_video_translate/functional_redraw_chinese_text_offline.py:1-19", "hash": "f84f03c32c580ef2cfa35e573f7ad183", "title": "Offline English OCR with PaddleOCR"}, "1020": {"path": "/tests/bilibili_practices/bilibili_video_translate/functional_redraw_chinese_text_offline.py:20-50", "hash": "f0c0b5d52b45ca441efd4fe9492c76c1", "title": "Rectify and Display Chinese Text OCR Results"}, "1021": {"path": "/tests/bilibili_practices/bilibili_video_translate/functional_redraw_chinese_text_offline.py:51-51", "hash": "68afa01b284501300e8ec6941b1d2064", "title": "CUDA Error with Custom Libraries and OpenCV"}, "1022": {"path": "/tests/bilibili_practices/bilibili_video_translate/functional_redraw_chinese_text_offline2.py", "hash": "cdf28a32770b09b376c57b6ea3f4f6ec", "title": "Offline Chinese Text Redraw with CUDA and OpenCV"}, "1023": {"path": "/tests/bilibili_practices/bilibili_video_translate/functional_redraw_chinese_text_offline2.py:1-30", "hash": "2e18c48c1fcbde621954b0cdee6c8dfc", "title": "Setting Up CUDA Environment for OpenCV"}, "1024": {"path": "/tests/bilibili_practices/bilibili_video_translate/functional_redraw_chinese_text_offline2.py:32-52", "hash": "a4c6e4c6f047e6e432fca5d23290a4c8", "title": "Area, Center, and String Similarity Calculation"}, "1025": {"path": "/tests/bilibili_practices/bilibili_video_translate/functional_redraw_chinese_text_offline2.py:53-66", "hash": "0e110482a9b6caedf7ea2da89046adaa", "title": "Compare, Calculate Distance, Sort and Retrieve Boundary Coordinates"}, "1026": {"path": "/tests/bilibili_practices/bilibili_video_translate/functional_redraw_chinese_text_offline2.py:67-86", "hash": "b07cb30642d6d3470a8120c07f9865f0", "title": "Numpy-Array Based Image Redrawing"}, "1027": {"path": "/tests/bilibili_practices/bilibili_video_translate/functional_redraw_chinese_text_offline2.py:87-108", "hash": "84d6986eb7e9876aeb29b82375c6bbfb", "title": "OpenCV Image Editing and Inpainting"}, "1028": {"path": "/tests/bilibili_practices/bilibili_video_translate/functional_redraw_chinese_text_offline2.py:109-130", "hash": "144e7f0e99837c846db605f57b0e5e87", "title": "Partial Image Blurring with OpenCV"}, "1029": {"path": "/tests/bilibili_practices/bilibili_video_translate/functional_redraw_chinese_text_offline2.py:131-153", "hash": "820e78d1ebdee5e67235360eda163723", "title": "Bitwise AND with Mask, Inpainting & Sharp Boundary Compensation"}, "1030": {"path": "/tests/bilibili_practices/bilibili_video_translate/functional_redraw_chinese_text_offline2.py:154-170", "hash": "2cb61580ac307be1e2ab1415cd283f22", "title": "Rotated Text Drawing on OpenCV Image"}, "1031": {"path": "/tests/bilibili_practices/bilibili_video_translate/functional_redraw_chinese_text_offline2.py:171-193", "hash": "bd9d520e71a2a3fbe4d957b39e7576d3", "title": "Estimate Text Orientation and Size Function"}, "1032": {"path": "/tests/bilibili_practices/bilibili_video_translate/functional_redraw_chinese_text_offline2.py:194-217", "hash": "19d2284c63351a3ef794e914e560e1e2", "title": "Determining Orientation, Font Size, and Center for Chinese Text"}, "1033": {"path": "/tests/bilibili_practices/bilibili_video_translate/functional_redraw_chinese_text_offline2.py:218-239", "hash": "31b6875685681aa95df4836b4e66c664", "title": "Dynamic Font Resizing and Text Rotation Algorithm"}, "1034": {"path": "/tests/bilibili_practices/bilibili_video_translate/functional_redraw_chinese_text_offline2.py:240-258", "hash": "9f48b47cb064e1278b2f02a59c978e1c", "title": "Rotating and Drawing Text with Python"}, "1035": {"path": "/tests/bilibili_practices/bilibili_video_translate/functional_redraw_chinese_text_offline2.py:259-264", "hash": "2a2b550b6009bc70be8d30967fa3456e", "title": "Rotated Text Image Conversion"}, "1036": {"path": "/tests/bilibili_practices/bilibili_video_translate/launch_frame_translate.sh", "hash": "fadc339b8adea1e43b010998206bd31e", "title": "Bilibili Video Frame Translation Launcher"}, "1037": {"path": "/tests/bilibili_practices/bilibili_video_translate/m2m100_1b_translator.py", "hash": "2cb4b693a3c3434c2c6afa0bbf71e1e1", "title": "M2M100_1b Translator for Bilibli"}, "1038": {"path": "/tests/bilibili_practices/bilibili_video_translate/main_mask_english_text.py", "hash": "640af4f8d2d089e5614ff5b61c4af6cb", "title": "PaddleOCR for English Text Detection"}, "1039": {"path": "/tests/bilibili_practices/bilibili_video_translate/main_mask_english_text.py:1-38", "hash": "e632c854a8bbdb3605e9fbb7f62d93d5", "title": "Detecting English Text with PaddleOCR"}, "1040": {"path": "/tests/bilibili_practices/bilibili_video_translate/main_mask_english_text.py:40-68", "hash": "b3f53b3f9c2edba32063ab464a8ba107", "title": "Mask Creation Process"}, "1041": {"path": "/tests/bilibili_practices/bilibili_video_translate/main_mask_english_text.py:69-76", "hash": "158ea76e727f3bbbdab126772cffa36c", "title": "OCR-Image with English Font"}, "1042": {"path": "/tests/bilibili_practices/bilibili_video_translate/main_redraw_chinese_text.py", "hash": "2399f11a73a58ef4802f05178e92b880", "title": "Bilibili Video Text Redraw"}, "1043": {"path": "/tests/bilibili_practices/bilibili_video_translate/main_redraw_chinese_text.py:1-38", "hash": "4115c68f4b9b6caba36a5acbafcb564f", "title": "OCR English Text with PaddleOCR"}, "1044": {"path": "/tests/bilibili_practices/bilibili_video_translate/main_redraw_chinese_text.py:40-67", "hash": "7d8544e5e702611a84952c0d4aa6aa0d", "title": "Chinese Text Redraw Algorithm"}, "1045": {"path": "/tests/bilibili_practices/bilibili_video_translate/main_redraw_chinese_text.py:69-93", "hash": "16c2b9f865c931b599ef5b5bfed83df3", "title": "PIL to OpenCV Conversion and Bounding Box Calculation"}, "1046": {"path": "/tests/bilibili_practices/bilibili_video_translate/main_redraw_chinese_text.py:94-117", "hash": "2b053e0c2f2c05f79b651d87492c21bb", "title": "Bilibili Text Filtration and Translation"}, "1047": {"path": "/tests/bilibili_practices/bilibili_video_translate/main_redraw_chinese_text.py:118-138", "hash": "36e161d14abeb2ffee1d3013eb7247a0", "title": "Dynamic Text Resizing and Positioning"}, "1048": {"path": "/tests/bilibili_practices/bilibili_video_translate/main_redraw_chinese_text.py:139-157", "hash": "3c139fad65922024649b13954941ae90", "title": "OpenCV Image Redraw with Chinese Text"}, "1049": {"path": "/tests/bilibili_practices/bilibili_video_translate/main_redraw_english_text.py", "hash": "a2d38d31823b9dfef100f723d122c643", "title": "PaddleOCR-Based Image Text Rectification"}, "1050": {"path": "/tests/bilibili_practices/bilibili_video_translate/main_redraw_english_text.py:1-38", "hash": "0c4609b7431486624b89e29858c9e9c1", "title": "Image-Based English Text Translation with PaddleOCR"}, "1051": {"path": "/tests/bilibili_practices/bilibili_video_translate/main_redraw_english_text.py:40-67", "hash": "a49a700baa47a59821be4f82ed9c4d5c", "title": "Drawing and Inpainting English Text in Image"}, "1052": {"path": "/tests/bilibili_practices/bilibili_video_translate/main_redraw_english_text.py:69-93", "hash": "9407a08931f3bb4417b6e035b6d3e204", "title": "PIL to OpenCV with Text and Orientation"}, "1053": {"path": "/tests/bilibili_practices/bilibili_video_translate/main_redraw_english_text.py:94-116", "hash": "dc910310ff1eacf8b0d1fdd95f7b9d0a", "title": "Bilibili Text Filter and Processor"}, "1054": {"path": "/tests/bilibili_practices/bilibili_video_translate/main_redraw_english_text.py:117-141", "hash": "7ecec7e892f6fb675b68290e0d5cf640", "title": "Dynamic Text Resizing and Image Saving"}, "1055": {"path": "/tests/bilibili_practices/bilibili_video_translate/main_redraw_english_text.py:142-154", "hash": "3236eb0453f946b8393587fa949a6bf0", "title": "OCR Result Drawing on Image"}, "1056": {"path": "/tests/bilibili_practices/bilibili_video_translate/test_curve_converter.py", "hash": "31867efd61e3a4abb72aa26da7b5c9df", "title": "Bitwise Curve Transformation"}, "1057": {"path": "/tests/bilibili_practices/bilibili_video_translate/test_curve_converter.py:1-33", "hash": "3c539c52470a60ab56ac0a697303af79", "title": "Bitwise Curve Conversion"}, "1058": {"path": "/tests/bilibili_practices/bilibili_video_translate/test_curve_converter.py:34-44", "hash": "f954aa7e72c6f296f55a18241637ee50", "title": "Test Curve Converter Function"}, "1059": {"path": "/tests/bilibili_practices/bilibili_video_translate/translate_srt.py", "hash": "c54ce9cd45e654e497210dbe013d6977", "title": "Translate SRT with Web API"}, "1060": {"path": "/tests/bilibili_practices/bilibili_video_translate/web_translator.py", "hash": "45bbd0635d36e804619d82a86f39b179", "title": "Web-Based Chinese to English Translator"}, "1061": {"path": "/tests/bilibili_practices/bilibili_video_translate/web_translator.py:1-34", "hash": "ca23deff688ab6493b89bfeaed31630d", "title": "Bilibili Video Translator"}, "1062": {"path": "/tests/bilibili_practices/bilibili_video_translate/web_translator.py:35-35", "hash": "7b003dee05499d275fefa6bf2baa95c5", "title": "Exception Traceback Printer"}, "1063": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/load_json5_render_template.py", "hash": "77c70050f076ae9cf2a62e48934986ee", "title": "JSON5 Parse and Jinja2 Render"}, "1064": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/recursive_search_bilibili_test.py", "hash": "3a2b655d82959b94896d4a4dc00171b9", "title": "Recursive Bilibili Test with OpenCV"}, "1065": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/recursive_search_bilibili_test.py:1-45", "hash": "9c04bbdedd7d7ce388dbc95615ebf3b9", "title": "Bilibili API Search with OpenCV and Custom Paths"}, "1066": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/recursive_search_bilibili_test.py:46-48", "hash": "d19293e280c39ad1dc2334b134e45240", "title": "OpenCV Image Visualization with WaitKey"}, "1067": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/searchDataParser.py", "hash": "12a6b315956ba1446f6ee6b192897c70", "title": "Multi-Functional Bilibili Search Data Parser"}, "1068": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/searchDataParser.py:1-37", "hash": "18b2de009da49bdd6ccaddf76986756a", "title": "Search Data Parser: Extracting Links and Analyzing Descriptions"}, "1069": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/searchDataParser.py:38-61", "hash": "4cc3e0644450bdf27c9729e09e29dc12", "title": "Extract BGM Descriptions from List"}, "1070": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/searchDataParser.py:62-96", "hash": "ae9406a26dad6d2668e0dbcf7d53e2e4", "title": "Video Parser with Duration Conversion and BGM Detection"}, "1071": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/searchDataParser.py:97-131", "hash": "918e77630751698f4fe2222ef9f35263", "title": "Author Keyword Extraction and Tag Filtering"}, "1072": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/searchDataParser.py:132-160", "hash": "873481865d3481b7c0e83696c1ad88d0", "title": "Extracting Bilibili Video Details and Filters"}, "1073": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/searchDataParser.py:161-190", "hash": "84a443b89a546f7df693dbc358d1da00", "title": "Bilibili Search API Data Parser"}, "1074": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/searchDataParser.py:191-227", "hash": "6a640cf41c11b9fb871af89c3935532f", "title": "Parse Search All Results Function"}, "1075": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/searchDataParser.py:228-258", "hash": "fa418bc7feada375600b40ed3ef845cb", "title": "Bilibili Search Data Parser Functions"}, "1076": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/searchDataParser.py:259-286", "hash": "a3a9583f49ec75e483dbede96276814b", "title": "Parse Bilibili Season Episodes for Video Info"}, "1077": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/searchDataParser.py:287-318", "hash": "44e0026eba424c33ba8f4a5e377b2ee5", "title": "Bilibili Video Parser Function"}, "1078": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/searchDataParser.py:319-343", "hash": "a635fc9a6599ac2f23ff1adf9d4ea825", "title": "Bilibili API Test Suite: Search Data Parser"}, "1079": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/searchDataParser.py:344-363", "hash": "c52e2a6ef2fe06a4e6b872e4974e033b", "title": "Test Parser for Bilibili Search API Data"}, "1080": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/template.j2", "hash": "381ce77d7eba0644626ff255f5c70799", "title": "Bilibili Channel TID Class"}, "1081": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/testApi.py", "hash": "e1b39cdbc22e1ab61eb1d085c1445b53", "title": "Bilibili Video Search and Retrieval"}, "1082": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/testApi.py:1-38", "hash": "dd9694f1fb70a02b72c894dbc4202f18", "title": "Bilibili Video Search and Retrieval"}, "1083": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/testApi.py:39-68", "hash": "8d5c6f3ae402b0b1fd993f8238d7c3df", "title": "Bilibili Search API Test: Get Related Videos"}, "1084": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/test_get_user_info_followers_dynamic.py", "hash": "6b2c9194c80b84b75ffdbeca35969ee5", "title": "User Info JSONification"}, "1085": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/test_get_user_info_followers_dynamic.py:1-27", "hash": "ffc8c91d2a475905de8b509f38aba7f4", "title": "Bilibili User Info with Followers and Followings"}, "1086": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/test_get_user_info_followers_dynamic.py:28-48", "hash": "f7d34b98b37ec2cbaaf0c516d3b4923e", "title": "Bilibili API Functions and Errors"}, "1087": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/test_get_user_info_followers_dynamic.py:49-78", "hash": "e84c574423246c5ef3673616e136d43d", "title": "Bilibili User Data Extraction"}, "1088": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/test_search_section_pets.py", "hash": "a6909c0070764be2a4f74d47315d3ac4", "title": "Bilibili Search API Modification"}, "1089": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/test_search_section_pets.py:1-14", "hash": "0fdb18492416c5327f387f2bfa1f4899", "title": "Bilibili Search Query Examples"}, "1090": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/test_search_section_pets.py:14-25", "hash": "bda22e9f640f382c0f680259ad8def97", "title": "Bilibili API Search Parameters Test"}, "1091": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/test_search_section_pets.py:25-45", "hash": "b8839acee93911627ff3cddc29b47c6e", "title": "Bilibili Search Parameters: Content Types and Order Options"}, "1092": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/test_search_section_pets.py:46-92", "hash": "b85771c6e5bf987047248ac4015296de", "title": "Bilibili Video Categories and TID Values"}, "1093": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/test_search_section_pets.py:93-138", "hash": "5cab687df9cdaa46a1b42d95b786996a", "title": "Classifying Bilbili Videos by Tags"}, "1094": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/test_search_section_pets.py:139-185", "hash": "4f20082d7f31bec5ede7323b99941b86", "title": "Bilibili Search API Section Categories"}, "1095": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/test_search_section_pets.py:186-233", "hash": "d1642e81cdbfa22860df94605f6c9dec", "title": "Search API Section Tags and Order Options"}, "1096": {"path": "/tests/bilibili_search_api_modification_section_params_get_related_videos/test_search_section_pets.py:234-253", "hash": "31df51c5e0429154dd23adc565c5cadc", "title": "Bilibili Search Parameters Sorting"}, "1097": {"path": "/tests/bilibili_tag_recommend_activities/README.md", "hash": "16413df69a05026b8d1cedf98b24574a", "title": "Bilibili Upload ID Code Snippet"}, "1098": {"path": "/tests/bilibili_video_recommendation_server/ad_template_0.py", "hash": "cb93704733b82e47b085bef34e31b4b9", "title": "Bilibili Video Recommendation Visualizer"}, "1099": {"path": "/tests/bilibili_video_recommendation_server/ad_template_0.py:1-36", "hash": "8d3d183d407a5a1adabfaafd8529773c", "title": "Chinese Text with Rounded Rectangle Mask"}, "1100": {"path": "/tests/bilibili_video_recommendation_server/ad_template_0.py:37-73", "hash": "fde0f5cc9019cc7ddee2599974e0a36c", "title": "QR Code Ad Image Generator"}, "1101": {"path": "/tests/bilibili_video_recommendation_server/ad_template_0.py:74-110", "hash": "0182cd323292e471fc47b26854dfbe0e", "title": "Bilibili Video Recommendation Visualization"}, "1102": {"path": "/tests/bilibili_video_recommendation_server/ad_template_0.py:111-115", "hash": "adfec19df6ae0be4021845e6160231ae", "title": "Translating, Drawing & Saving Ad Image"}, "1103": {"path": "/tests/bilibili_video_recommendation_server/ad_template_1.py", "hash": "9b15a7b35673acfd792b4ad24508da8e", "title": "Bilibili Ad Template Creator"}, "1104": {"path": "/tests/bilibili_video_recommendation_server/ad_template_1.py:1-36", "hash": "c2ddbc5773c52b58e30b867fe526f62c", "title": "Pixie-powered Image Manipulation"}, "1105": {"path": "/tests/bilibili_video_recommendation_server/ad_template_1.py:37-73", "hash": "1630affb8b66023ccb88a8d84e1f4e1a", "title": "QR Avatar Ad Creation"}, "1106": {"path": "/tests/bilibili_video_recommendation_server/ad_template_1.py:74-115", "hash": "1231c2a7012417bcf69fd6bec2a93498", "title": "Binary Avatar Creation with Pixie"}, "1107": {"path": "/tests/bilibili_video_recommendation_server/ad_template_1.py:117-135", "hash": "7304014c9f313c3d185ba58b72bc21bf", "title": "Image Resizing and Manipulation Algorithm"}, "1108": {"path": "/tests/bilibili_video_recommendation_server/ad_template_2.py", "hash": "d888c8459688a06d722d41542efd452b", "title": "Multifaceted Ad Template Initialization"}, "1109": {"path": "/tests/bilibili_video_recommendation_server/ad_template_2.py:1-38", "hash": "08e37cbdfa813b54d9d74bc0577fd5b2", "title": "Bilibili QR Code Generator"}, "1110": {"path": "/tests/bilibili_video_recommendation_server/ad_template_2.py:39-71", "hash": "a9f264d9eae98c4ba929bfeae15e24b8", "title": "Cover Image Transformation"}, "1111": {"path": "/tests/bilibili_video_recommendation_server/ad_template_2.py:72-110", "hash": "39d2e779858e109dad18779b3bfe9339", "title": "Rounded Rectangle Mask Generator"}, "1112": {"path": "/tests/bilibili_video_recommendation_server/ad_template_2.py:111-138", "hash": "2534a7f4ca631b876e31b0574bc554c9", "title": "Bilibili Ad Template Design"}, "1113": {"path": "/tests/bilibili_video_recommendation_server/ad_template_2.py:140-170", "hash": "3b3c5982200c7faae23f695f3cdd66ae", "title": "Dynamic Play Button and QR Code Generation"}, "1114": {"path": "/tests/bilibili_video_recommendation_server/ad_template_2.py:171-209", "hash": "ea2a3147506bbe6e6c4e9f8323744b71", "title": "Generating QR Code and Title with Pixie Library"}, "1115": {"path": "/tests/bilibili_video_recommendation_server/ad_template_2.py:210-232", "hash": "4ab22262f4c9cbcd3aa4589c9e5ff1c9", "title": "Ad Image Generation Algorithm"}, "1116": {"path": "/tests/bilibili_video_recommendation_server/bilibili_shortlink_get_2.py", "hash": "bf23bb9b345ec784f60d59e6db627410", "title": "Bilibili Shortlink Tracking API"}, "1117": {"path": "/tests/bilibili_video_recommendation_server/bilibili_shortlink_get_2.py:1-24", "hash": "c6e9000855f442841641b387a4991378", "title": "Bilibili API Click Tracking Code"}, "1118": {"path": "/tests/bilibili_video_recommendation_server/bilibili_shortlink_get_2.py:25-33", "hash": "db9acc59418e64485d65d0a2f9c40a9e", "title": "Bilibili Shortlink Extractor"}, "1119": {"path": "/tests/bilibili_video_recommendation_server/concat_qrcode.sh", "hash": "94a0d07dc92a1586ac7e8d63a22b62ac", "title": "Concatenate QR Codes with FFmpeg"}, "1120": {"path": "/tests/bilibili_video_recommendation_server/convert_font.sh", "hash": "ee4dff57ecb1c4c7fed230a778fb348a", "title": "Python Converts TTC to TTF"}, "1121": {"path": "/tests/bilibili_video_recommendation_server/create_invisible_blend_transparent_ebegging.py", "hash": "7722e5108525bdb5cf3ac9a7a69232a1", "title": "Invisible Blend Transparent Overlay"}, "1122": {"path": "/tests/bilibili_video_recommendation_server/detect_qr_code.py", "hash": "8981d6615bec2577a371401a7ac521f9", "title": "QR Code Detection and Display"}, "1123": {"path": "/tests/bilibili_video_recommendation_server/detect_qr_code.py:1-39", "hash": "4fd57b4d0bbf35e4fc5a6780b661b4fa", "title": "QR Code Detector in Images"}, "1124": {"path": "/tests/bilibili_video_recommendation_server/detect_qr_code.py:40-43", "hash": "e30dde70304cab029998223e740143d2", "title": "Detect QR Codes and Display Images"}, "1125": {"path": "/tests/bilibili_video_recommendation_server/detect_qr_code_payments.py", "hash": "346dd67725e5a2cc4f19fce838be4ee5", "title": "Improving Multiple QR Detection"}, "1126": {"path": "/tests/bilibili_video_recommendation_server/detect_qr_code_payments.py:1-32", "hash": "033a411c832b7c182f9077b5f0d09f12", "title": "Detect QR Codes with Pyzbar"}, "1127": {"path": "/tests/bilibili_video_recommendation_server/detect_qr_code_payments.py:33-52", "hash": "fd446c153134e0764bf204486a5aaa30", "title": "Detect QR Codes in Images"}, "1128": {"path": "/tests/bilibili_video_recommendation_server/e_begging_base_bilibili_donation_to_short_link.py", "hash": "fb45276dc12d6906b1c59db770405790", "title": "Bilibili Donation Shortlinks with Cookies"}, "1129": {"path": "/tests/bilibili_video_recommendation_server/ebegging_template.py", "hash": "65ab70e1496c662a42ff6300a4cd9966", "title": "EBegging Template Generator"}, "1130": {"path": "/tests/bilibili_video_recommendation_server/ebegging_template.py:1-35", "hash": "2ed45ca6951a9555a4e50849805840b1", "title": "Creating eBegging Templates with Python"}, "1131": {"path": "/tests/bilibili_video_recommendation_server/ebegging_template.py:36-76", "hash": "6476902143d88ea14ce587080d499615", "title": "Create QR Code Image for Alipay and WeChat"}, "1132": {"path": "/tests/bilibili_video_recommendation_server/ebegging_template.py:77-118", "hash": "312bd81453478873824380d62b8905ad", "title": "Dynamic QR Ad Image Generator"}, "1133": {"path": "/tests/bilibili_video_recommendation_server/ebegging_template.py:119-157", "hash": "a984067bb714fb36b6694ea7b58d8716", "title": "QR Code with Text Overlay and Masking"}, "1134": {"path": "/tests/bilibili_video_recommendation_server/generate_cover.py", "hash": "72b4bcf7b84a80964c573d280d9a45d1", "title": "Bilibili Video Recommendation: Cover Image Generation"}, "1135": {"path": "/tests/bilibili_video_recommendation_server/generate_cover.py:1-38", "hash": "ee6ab870831eeed3ece38daf863edbf8", "title": "Bilibili Video Cover Generator"}, "1136": {"path": "/tests/bilibili_video_recommendation_server/generate_cover.py:38-58", "hash": "e89136525ed43d97f897b7d8aee55f82", "title": "Image Resizing, Masking, and QR Overlay"}, "1137": {"path": "/tests/bilibili_video_recommendation_server/generate_qr_code.py", "hash": "ef48e94da94ab8388dd355c1b5964fd7", "title": "Generate QR Code in Python"}, "1138": {"path": "/tests/bilibili_video_recommendation_server/get_bilibili_shortlink.py", "hash": "ae6a25f7b0f2f6e9cf6d5a0c8378d2e3", "title": "Bilibili Shortlink Fetcher"}, "1139": {"path": "/tests/bilibili_video_recommendation_server/get_bilibili_shortlink.py:2-26", "hash": "563166fbffca714b9a606bef5c161b93", "title": "Bilibili Shortlink HTTP Request"}, "1140": {"path": "/tests/bilibili_video_recommendation_server/get_bilibili_shortlink.py:27-37", "hash": "68d3d3de0009a826f35284775135bd69", "title": "Bilibili Video Shortlink Retrieval"}, "1141": {"path": "/tests/bilibili_video_recommendation_server/get_masked_gif.sh", "hash": "f34f6d98221c2d650a7f6dffadccc95c", "title": "Masked GIF Generation with FFmpeg"}, "1142": {"path": "/tests/bilibili_video_recommendation_server/get_text_boundaries.py", "hash": "19e2bde7aa053ca8e4c3a42017086e9c", "title": "Text Boundary Extraction via Python"}, "1143": {"path": "/tests/bilibili_video_recommendation_server/overlay_gif.sh", "hash": "301949a13b46dea7e3a02a173df273f8", "title": "Overlay PNG on Anime GIF using FFmpeg"}, "1144": {"path": "/tests/bilibili_video_recommendation_server/remove_background.sh", "hash": "64e9e712e05c731bf7edc9bd6568d71b", "title": "Remove Black Background with FFmpeg"}, "1145": {"path": "/tests/bilibili_video_recommendation_server/sample_video/create_sample_video_with_fade_and_metadata.py", "hash": "6f193feadcbf54171d0e5a0bb763d823", "title": "Fade Transitioned Video with Metadata"}, "1146": {"path": "/tests/bilibili_video_recommendation_server/sample_video/create_sample_video_with_fade_and_metadata.py:1-24", "hash": "03733e8e45fbdb27d4f05dab3a494793", "title": "Variable Setup for Video Processing"}, "1147": {"path": "/tests/bilibili_video_recommendation_server/sample_video/create_sample_video_with_fade_and_metadata.py:25-57", "hash": "8a6c93736d30e328b7b7d895bed56198", "title": "Fade Transition and Image Overlay for Bilibili Video"}, "1148": {"path": "/tests/bilibili_video_recommendation_server/sample_video/create_sample_video_with_fade_and_metadata.py:58-86", "hash": "e74a19b2ed637aa9d5e615da0a17afea", "title": "Fade Transitioned Video with Cat and Audio"}, "1149": {"path": "/tests/bilibili_video_recommendation_server/sample_video/create_sample_video_with_fade_and_metadata.py:87-108", "hash": "f224b116dd64838557242341d36f6312", "title": "Generate JSON for Editly Video Template"}, "1150": {"path": "/tests/bilibili_video_recommendation_server/sample_video/tts.py", "hash": "141dd13a4ac53856611791678bb1e59c", "title": "Python TTS Script for MS Cognitive Services"}, "1151": {"path": "/tests/bilibili_video_recommendation_server/sample_video/tts.py:1-35", "hash": "e27b1b2238d3926889622db5dc13f5ad", "title": "SSML-to-MP3 Python Converter"}, "1152": {"path": "/tests/bilibili_video_recommendation_server/sample_video/tts.py:36-52", "hash": "7824ba8789b3fe4575ffca8fd7ff5ce4", "title": "Transferring TTS Data: Communication and Time Functions"}, "1153": {"path": "/tests/bilibili_video_recommendation_server/sample_video/tts.py:53-63", "hash": "840ebe92c7d38cd12cc560987f106e9f", "title": "Microsoft Cognitive Services TTS Integration"}, "1154": {"path": "/tests/bilibili_video_recommendation_server/sample_video/tts.py:64-78", "hash": "2e2687caf868bb7e4328392f42297226", "title": "TTS Service Integration"}, "1155": {"path": "/tests/bilibili_video_recommendation_server/sample_video/tts.py:79-107", "hash": "f3701dcb208b7a5af9353906cf01fbca", "title": "TTS Server Implementation"}, "1156": {"path": "/tests/bilibili_video_recommendation_server/sample_video/tts.py:108-111", "hash": "b90c6dcf0a221d1cfb337b7cfda3d7eb", "title": "Asynchronous SSML TTS with asyncio"}, "1157": {"path": "/tests/bilibili_video_recommendation_server/send_image_botoy.py", "hash": "351938c50b68174e98bf822667a5d04d", "title": "Send QQ Images and Videos with Botoy"}, "1158": {"path": "/tests/bilibili_video_recommendation_server/send_image_botoy.py:1-35", "hash": "fca1587b898dd9b25a3782cfe6429539", "title": "Botoy Image Sending Script"}, "1159": {"path": "/tests/bilibili_video_recommendation_server/send_image_botoy.py:36-43", "hash": "79613ba940be177d7e583f382a5af61e", "title": "Base64 Image Sender"}, "1160": {"path": "/tests/bilibili_video_recommendation_server/send_image_gif.py", "hash": "d24458a44de479199b17c14315f63dc9", "title": "Broadcasting Images with Botoy Library"}, "1161": {"path": "/tests/bilibili_video_recommendation_server/send_payment_urls.py", "hash": "180e71053a68ff95a17d4bc05913b848", "title": "Bilibili Payment URLs Sender (Investigate JSON Issue)"}, "1162": {"path": "/tests/bilibili_video_recommendation_server/send_video.py", "hash": "c820832c8a6b09b6549f628eba3a47cd", "title": "Send Video to Group Chat via CQHTTP"}, "1163": {"path": "/tests/bilibili_video_recommendation_server/stroke_path.py", "hash": "8a75b2d1ef706afb5175955e3f50e530", "title": "Save Stroke Round Rect Transparently"}, "1164": {"path": "/tests/bilibili_video_recommendation_server/test.py", "hash": "3d47a051ef45c23a380509e0115769de", "title": "Bilibili Recommendation Server Tests"}, "1165": {"path": "/tests/bilibili_video_recommendation_server/test.py:1-33", "hash": "b1ff7a07c9e808812f3988152b0ec076", "title": "Bilibili Recommendation Server Functions"}, "1166": {"path": "/tests/bilibili_video_recommendation_server/test.py:34-57", "hash": "9326dda82dcadc28958bbaa6c8ccb28f", "title": "Bilibili Video Recommendation Server Test"}, "1167": {"path": "/tests/bilibili_video_recommendation_server/test.py:58-65", "hash": "c0e7707eb51134ba8add60aa06334e19", "title": "Testing `checkPublishedVideo` with different video states"}, "1168": {"path": "/tests/bilibili_video_recommendation_server/test.sh", "hash": "c638f8f74e2bbd757e157749f0f365b6", "title": "Bilibili Test Script"}, "1169": {"path": "/tests/bilibili_video_recommendation_server/test_fastapi.sh", "hash": "80d720490c91ea64e18d1fe8a4a0dc24", "title": "FastAPI Bilibili Test\n\nExplanation: The content describes a test for the FastAPI server used in the Bilibili video recommendation system. The path also indicates the context as it contains \"bilibili_video_recommendation_server\" and \"test_fastapi.sh\". So, the title should reflect these key aspects of the content"}, "1170": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/new_xml.py", "hash": "a3b1085add214c7b9617e9298a0398fd", "title": "XML Parsing and Printing Tool"}, "1171": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/new_xml.py:1-1", "hash": "d3a5ed4385fd152dbb086acde8c29357", "title": "Bilibili Video Recommendation XML"}, "1172": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/new_xml.py:3-6", "hash": "e331ca20935d6c5881272f1942d4bca1", "title": "Extract Content from XML File"}, "1173": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/print_bilibili_json.py", "hash": "ce7992d568d61ad0a445b165f1fa61df", "title": "QQ Mini-App JSON Formatting"}, "1174": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/print_bilibili_json.py:1-1", "hash": "5d8f14771a7951728d0777706b7f6b96", "title": "QQ Mini-App JSON Structure"}, "1175": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/print_bilibili_json.py:2-2", "hash": "009f3d6c43503fefcead70e67561b3ce", "title": "Replace Spaces with \"&#44\" for QQ Send Formatting"}, "1176": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/print_xml_message.py", "hash": "323b271eb68d0607fd15779c62103268", "title": "Bilibili Video Parser and Printing"}, "1177": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/print_xml_message.py:1-2", "hash": "2d4a761848c3c5663a697e9879b71d05", "title": "XML for QQ Bilibili Video Share"}, "1178": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/print_xml_message.py:2-9", "hash": "1892192924f9e77d6a5d95a6e4253b95", "title": "XML Parser for Bilibili Video Recommendations"}, "1179": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/print_xml_message.py:11-11", "hash": "dd70b43067d794d167297e6ca633a1f5", "title": "XML Message Printer with Exceptions"}, "1180": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/qq_gocqhttp_post_xml.py", "hash": "59c41d6b7b349c0074dec3bbc2ab983a", "title": "XML-JSON QQ Send with GoCQHTTP"}, "1181": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/qq_gocqhttp_post_xml.py:1-12", "hash": "36b3259d8ca8937d75d117ce1bc7832e", "title": "Bilibili Video QQ Gocqhttp XML Post"}, "1182": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/qq_gocqhttp_post_xml.py:13-15", "hash": "b4e5a565690c1c312692b559dccbe4c1", "title": "Rich Media QQ Message with XML and Gocqhttp"}, "1183": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/qq_gocqhttp_post_xml.py:15-16", "hash": "b04a4ff6d5ad3ed6cb9c9437f8a948b0", "title": "QQ gocqHTTP XML Message Creation"}, "1184": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/qq_gocqhttp_post_xml.py:16-18", "hash": "da153ec641e730c3b8748d540692e923", "title": "QQ Gocqhttp Post XML JSON Formatting"}, "1185": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/qq_gocqhttp_post_xml.py:18-19", "hash": "1db23f619556898f65447e42128ff440", "title": "JSON Chat Messages: QQ and Bilibili"}, "1186": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/qq_gocqhttp_post_xml.py:20-34", "hash": "d7aa051e49eba54e8b4b2e445aa3ac8b", "title": "XML/JSON QQ Gocqhttp Messaging"}, "1187": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/qq_gocqhttp_post_xml.py:34-40", "hash": "dcbee029b63c50fa12a73aebbf3c8903", "title": "XML-JSON QQ Send using go-cqhttp"}, "1188": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/run_bilibili_qq_share_xml.sh", "hash": "5d5953ecbfffc126dd054d688f362bed", "title": "Bilibili QQ Share Socks5 MitM Proxy"}, "1189": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/run_qq_capture.sh", "hash": "6a8bf144f93d118180198b08908361d2", "title": "QQ Capture: MITM Proxy for BiliVideo Recommendation"}, "1190": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/send_friend_xml_and_forward_xml_to_group.py", "hash": "9d8a331f01a89bf6ff69b60f4608c57f", "title": "XML-Powered QQ Video Recommendations"}, "1191": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/send_friend_xml_and_forward_xml_to_group.py:1-14", "hash": "001644d3104a1028c110019980f4dee0", "title": "XML QQ Message Sender"}, "1192": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/send_friend_xml_and_forward_xml_to_group.py:15-27", "hash": "8233d874b119357fd2d696a437f0b00d", "title": "XML-JSON QQ Message Send and Forward"}, "1193": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/test_launch_share.sh", "hash": "af6f5748320b1886b1c218b8c1395de5", "title": "Automated QQ Share for BiliBili Videos"}, "1194": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/test_upload_get_link.sh", "hash": "f961dc9473f362a89648c73ec1f41a9e", "title": "Test Upload and Get Link"}, "1195": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/test_upload_xml_qq.py", "hash": "47131916318bacf14a88858237e175b1", "title": "XML/JSON QQ Message Sender"}, "1196": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/test_upload_xml_qq.py:1-12", "hash": "cce0e3730c2f3b10c7ebd96f1a5dfaec", "title": "XML and QQ Send Test Upload Issues"}, "1197": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/test_upload_xml_qq.py:12-16", "hash": "34c16e9efd8ac26dbe314a548dfab7ba", "title": "XML QQ Message Template Formatting"}, "1198": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/test_upload_xml_qq.py:17-26", "hash": "d39b16137c68348de20d8f6ca160c30c", "title": "Sending XML Messages via QQ: Group Chat Error"}, "1199": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/test_upload_xml_qq.py:27-33", "hash": "e6a5058659a45c70bbf85ac5679b502a", "title": "XML and JSON QQ Message Sender"}, "1200": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/test_upload_xml_qq.py:34-36", "hash": "0fd12b261a36e6efe4e80e20f57abcf7", "title": "XML QQ Message Builder"}, "1201": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/test_upload_xml_qq.py:36-41", "hash": "577a89fd6dcf6ed0d898c5e7df918f57", "title": "QQ Music File Sharing XML Message"}, "1202": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/test_upload_xml_qq.py:42-51", "hash": "4c3e479ea03e8dfa1fc81a552cd38812", "title": "XML POST Request with QQ and Funcname Parameters"}, "1203": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/upload_img.py", "hash": "89fe67b6c0c73555eebff7fa654fea17", "title": "QQ Image Upload Python Script"}, "1204": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/upload_img.py:1-25", "hash": "273b358b72c69ef2e97001dc7347e604", "title": "Python QQ Image Upload"}, "1205": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/upload_img.py:26-68", "hash": "6e2be53d2ce3a3d095cb5fb4a1639278", "title": "Python Script for Image Upload and Processing"}, "1206": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/upload_img.py:69-82", "hash": "eb1ef99ad66a6ff665716b11004e38fa", "title": "QQ Session Data and Tokens in Header"}, "1207": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/upload_img.py:83-112", "hash": "da4e66b41cb31e6876e3889d551fe310", "title": "POST Request with Headers"}, "1208": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/upload_img2.py", "hash": "862548c3dd9727f93ac9fd6702e62c72", "title": "Binary Uploads with JSON Conversion"}, "1209": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/upload_img2.py:1-25", "hash": "d69eaa558ef9d7f8ef8e923e6b1ff511", "title": "Binary Image Uploader with Requests"}, "1210": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/upload_img2.py:26-68", "hash": "2fff3f5e1210e64cc8ba2e9471fd089f", "title": "Upload Image with Cookies and Headers"}, "1211": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/upload_img2.py:69-109", "hash": "0f9f9f7825aff392fc88cb4aa4a1ba62", "title": "HTTP Header List Generation"}, "1212": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/upload_img2.py:110-112", "hash": "5220a9937dd199a4e8d9432287111ff7", "title": "POST Request with Files in Python"}, "1213": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/view_bilibili_qq_share_xml.sh", "hash": "0636fcb622d8e3ed1f7d9dff8c635411", "title": "Analyzing Bilibili QQ Share XML Network Traffic"}, "1214": {"path": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/view_qq.sh", "hash": "81f51508f56dd3b09915d6e7ce6a09f5", "title": "Analyzing QQ Logs with Mitmproxy"}, "1215": {"path": "/tests/bilibili_video_recommendation_server/zbar_detect_qrcode.py", "hash": "013723453662199f2e9e9780ec2b6429", "title": "Detecting and Decoding QR Codes with Pyzbar"}, "1216": {"path": "/tests/bilibili_video_recommendation_server/zbar_detect_qrcode.py:2-36", "hash": "d9ff4c139776c8d7c500612ef6a27675", "title": "QR Code Detection Function with Pyzbar"}, "1217": {"path": "/tests/bilibili_video_recommendation_server/zbar_detect_qrcode.py:37-46", "hash": "bbac613aed1663e43b7f17fc2e3d0c72", "title": "ZBar QR Code Detection for Bilibili"}, "1218": {"path": "/tests/black_autopep8_ast_parser_formatter_skipexception/format_functional.py", "hash": "d33176b1d8d2a0a74f112395dfd52229", "title": "Black + Autopep8 Python Formatter"}, "1219": {"path": "/tests/black_autopep8_ast_parser_formatter_skipexception/format_test.sh", "hash": "b5279c4bcd97917171059dc7c8d55feb", "title": "Automating Python Formatting with Black & Autopep8"}, "1220": {"path": "/tests/black_autopep8_ast_parser_formatter_skipexception/test.py", "hash": "1503403b68fd2a6bd594809376c99b35", "title": "Unrelated Fragmented Code"}, "1221": {"path": "/tests/blur_image_detection_mask/BlurDetection_install/test.py", "hash": "df8454e2ec89860de162d429f0a2cec8", "title": "Blur Detection and Masking Toolkit"}, "1222": {"path": "/tests/blur_image_detection_mask/BlurDetection_install/test.py:1-28", "hash": "d7ba21f4839133bcbcec3c2edf84116a", "title": "Blur Detection and Watermark Removal"}, "1223": {"path": "/tests/blur_image_detection_mask/BlurDetection_install/test.py:29-57", "hash": "db0c83116511bfa747e34a8a71ab1949", "title": "Blur Detection and Inpainting Algorithm"}, "1224": {"path": "/tests/blur_image_detection_mask/BlurDetection_install/test.py:58-93", "hash": "33da785ba3e1adc0815f39f2d7c07118", "title": "Contour-based Image Detection"}, "1225": {"path": "/tests/blur_image_detection_mask/BlurDetection_install/test.py:94-126", "hash": "2bcf2001d5ab82a98eebd5f2ed8ca3f8", "title": "Contour Detection and Bounding Box Calculation"}, "1226": {"path": "/tests/blur_image_detection_mask/BlurDetection_install/test.py:127-128", "hash": "43eb2d465aa4c10b9c4c4a9b35b0c7a5", "title": "Bounding Box Contour Detection"}, "1227": {"path": "/tests/blur_image_detection_mask/test_blur_detection.py", "hash": "c0e91baec7722fab102c8569beafc328", "title": "Blur Detection Mask Test"}, "1228": {"path": "/tests/calculate_separate_video_scene_duration_in_dog_video_with_bgm/download_sample.sh", "hash": "ae109859ba52e28a69b775b54fbbaa25", "title": "Bilibili Video Download with Yt-Dlp"}, "1229": {"path": "/tests/calculate_separate_video_scene_duration_in_dog_video_with_bgm/generate_random_clip_lengths.py", "hash": "84ba9875dabc3a7df9cc452d2bd35d92", "title": "Random Clip Lengths with Truncated Gaussian"}, "1230": {"path": "/tests/calculate_separate_video_scene_duration_in_dog_video_with_bgm/get_scene_cuts.sh", "hash": "c6e7aa3ffd58cdac9397a9df89934d0f", "title": "Automated Video Scene Splitting"}, "1231": {"path": "/tests/calculate_separate_video_scene_duration_in_dog_video_with_bgm/load_data_do_experiment.py", "hash": "bb2bc90c34cc51cc277486bb953c471b", "title": "Efficient Video Scene Extraction"}, "1232": {"path": "/tests/calculate_separate_video_scene_duration_in_dog_video_with_bgm/load_data_do_experiment.py:1-46", "hash": "cb3553f57d0aadd55d887fe1136b3076", "title": "Calculating Video Scene Duration"}, "1233": {"path": "/tests/calculate_separate_video_scene_duration_in_dog_video_with_bgm/load_data_do_experiment.py:47-73", "hash": "476b87764e34c3de0c587fa6d882d7fb", "title": "Optimized FFmpeg Command Generator"}, "1234": {"path": "/tests/calculate_separate_video_scene_duration_in_dog_video_with_bgm/load_data_do_experiment.py:74-99", "hash": "5b94c10a964cbcbf236a09f316ee50cf", "title": "Efficient Video Scene Filtering"}, "1235": {"path": "/tests/calculate_separate_video_scene_duration_in_dog_video_with_bgm/load_data_do_experiment.py:101-127", "hash": "59728d4975a78688ee81abc34eeb5a1c", "title": "Shuffle and Filter Scene Duration"}, "1236": {"path": "/tests/calculate_separate_video_scene_duration_in_dog_video_with_bgm/load_data_do_experiment.py:128-150", "hash": "85535fe5caaaa36c288f990346bbaab5", "title": "Checking Neighbor Indices with getNeighborIndexs"}, "1237": {"path": "/tests/calculate_separate_video_scene_duration_in_dog_video_with_bgm/load_data_do_experiment.py:151-180", "hash": "de5ecb12c03477808ae3eec41059957d", "title": "Neighbor Checking Algorithm"}, "1238": {"path": "/tests/calculate_separate_video_scene_duration_in_dog_video_with_bgm/load_data_do_experiment.py:181-205", "hash": "eed2689e9fc426e37c6d482f5c7d085c", "title": "Acceptable Candidate Threshold"}, "1239": {"path": "/tests/calculate_separate_video_scene_duration_in_dog_video_with_bgm/load_data_do_experiment.py:206-208", "hash": "f19f376ac03e1e922568b7d5ce8779ee", "title": "Ban and Shuffle Neighbors"}, "1240": {"path": "/tests/calculate_separate_video_scene_duration_in_dog_video_with_bgm/preview_clips.sh", "hash": "ffe0ce010ad02f9cdbf58dbef8725d49", "title": "Pause-Play Video Scene Extraction"}, "1241": {"path": "/tests/calculate_separate_video_scene_duration_in_dog_video_with_bgm/preview_clips.sh:1-31", "hash": "76419c04c7140ccb7ed481462c3b7839", "title": "Auto-Playing Video Clips with Pauses"}, "1242": {"path": "/tests/calculate_separate_video_scene_duration_in_dog_video_with_bgm/preview_clips.sh:32-63", "hash": "716938f5245d83bd474a2bfb125b7c35", "title": "Automate Dog Video Scene Analysis"}, "1243": {"path": "/tests/calculate_separate_video_scene_duration_in_dog_video_with_bgm/preview_clips.sh:64-95", "hash": "a27244db43bd25565c0152ea21dc95b3", "title": "Preview Video Clips with Delayed Commands"}, "1244": {"path": "/tests/calculate_separate_video_scene_duration_in_dog_video_with_bgm/preview_clips.sh:96-126", "hash": "c23b70d183814ca16888cffec3d20d98", "title": "Automated Video Scene Extraction with ffplay"}, "1245": {"path": "/tests/calculate_separate_video_scene_duration_in_dog_video_with_bgm/render.sh", "hash": "368172cd526a8d9b0a055e6cc63275bf", "title": "Extract 3-sec Video Clips with FFmpeg"}, "1246": {"path": "/tests/calculate_separate_video_scene_duration_in_dog_video_with_bgm/render.sh:1-13", "hash": "19cda3b7d891dbcbfef82b1ff8cb29de", "title": "Extract & Save Video Clips in Dog Video with BGM"}, "1247": {"path": "/tests/calculate_separate_video_scene_duration_in_dog_video_with_bgm/render.sh:14-26", "hash": "77e4f8db49ac7f0807e0f676918d743c", "title": "Split Video Clips with FFmpeg"}, "1248": {"path": "/tests/calculate_separate_video_scene_duration_in_dog_video_with_bgm/render.sh:27-39", "hash": "ce2a5e851d656b241d552f15a3513382", "title": "Extract Separate Video Scenes with FFmpeg"}, "1249": {"path": "/tests/calculate_separate_video_scene_duration_in_dog_video_with_bgm/render.sh:40-52", "hash": "b5d2df36aaeade32a45116355e8824cd", "title": "Extract Video Segments with FFmpeg"}, "1250": {"path": "/tests/calculate_separate_video_scene_duration_in_dog_video_with_bgm/render.sh:53-55", "hash": "7ef90a6161ab50147082f2863cf1415d", "title": "Extract Three 3-Second Segments from Video Using FFmpeg"}, "1251": {"path": "/tests/calculate_separate_video_scene_duration_in_dog_video_with_bgm/viewRenderResult.sh", "hash": "bc85f8432719e76bd292e20450588663", "title": "Sequential Video Playback Script"}, "1252": {"path": "/tests/calculate_separate_video_scene_duration_in_dog_video_with_bgm/viewer.sh", "hash": "bff063680190744f410aea15696c5825", "title": "Sequential FLV Player & Exit"}, "1253": {"path": "/tests/calculate_separate_video_scene_duration_in_dog_video_with_bgm/viewer.sh:1-24", "hash": "5b8fbefddb754ad766aa892d8a5cd6ad", "title": "Sequential Video Player"}, "1254": {"path": "/tests/calculate_separate_video_scene_duration_in_dog_video_with_bgm/viewer.sh:25-34", "hash": "9fbf72bbb16fcd682da645d336c69223", "title": "Auto-Play and Exit FLV Files with Pauses"}, "1255": {"path": "/tests/chatgpt_multiagent_agent_product_line_multimodal_langchain_experiments/README.md", "hash": "a923558dfd72936ce20492ccec20ad7b", "title": "Multi-Agent ChatGPT Bot with URL Extraction"}, "1256": {"path": "/tests/chatgpt_multiagent_agent_product_line_multimodal_langchain_experiments/test_chatgpt_cn_api.py", "hash": "3992274ccfc82194440440b52f6c97f7", "title": "Streamlined ChatGPT API Integration"}, "1257": {"path": "/tests/chatgpt_multiagent_agent_product_line_multimodal_langchain_experiments/test_chatgpt_cn_api.py:1-37", "hash": "83e446255b29e73afa104314fd0d0c9e", "title": "ChatGPT API Wrapper for Development"}, "1258": {"path": "/tests/chatgpt_multiagent_agent_product_line_multimodal_langchain_experiments/test_chatgpt_cn_api.py:38-47", "hash": "71ccbe372ad273eabf350ea6ac322f41", "title": "ChatGPT API Test: Sending and Receiving Messages"}, "1259": {"path": "/tests/chatgpt_multiagent_agent_product_line_multimodal_langchain_experiments/test_url_repair_extract_trace_media_source.py", "hash": "b783f23c489f66c43f9c1e0d9cc71a76", "title": "URL Repair and Extraction Tool"}, "1260": {"path": "/tests/chatgpt_multiagent_agent_product_line_multimodal_langchain_experiments/test_url_repair_extract_trace_media_source.py:2-42", "hash": "8b658db9bf376c3ab1c87c20bcc00106", "title": "URL Recovery and Extraction Tool"}, "1261": {"path": "/tests/chatgpt_multiagent_agent_product_line_multimodal_langchain_experiments/test_url_repair_extract_trace_media_source.py:43-69", "hash": "8fdde3f1e2b3405fbfe1574a29b59502", "title": "Extract and Select YouTube URLs"}, "1262": {"path": "/tests/chatgpt_multiagent_agent_product_line_multimodal_langchain_experiments/test_url_repair_extract_trace_media_source.py:70-114", "hash": "a288628df24a6e17bb2f57e045b58a59", "title": "URL Repair and Extraction Algorithm"}, "1263": {"path": "/tests/chatgpt_multiagent_agent_product_line_multimodal_langchain_experiments/test_url_repair_extract_trace_media_source.py:115-118", "hash": "b69a000f55d510edd4a3cefb3793a8b2", "title": "Printing Selected URLs"}, "1264": {"path": "/tests/chatterbot_test/README.md", "hash": "b3fecafc33d5ea1c9ac502df978d9cc4", "title": "Switch Chatterbot for Levenshtein Bot"}, "1265": {"path": "/tests/chatterbot_test/test.py", "hash": "eeeb46ca90012ac530336860d9115fc0", "title": "Chinese ChatBot Training and Testing"}, "1266": {"path": "/tests/chatterbot_test/test.py:1-40", "hash": "0c42152d48307282a5ee800a6cb22ec5", "title": "Chinese ChatBot Setup and Training"}, "1267": {"path": "/tests/chatterbot_test/test.py:41-72", "hash": "2afc4d63cc2fd5a18dfdde42a79552a8", "title": "Training and Testing Chinese Chatbot"}, "1268": {"path": "/tests/check_json_update.py", "hash": "a9fe3b096c699ce0333e50796b262f27", "title": "Testing JSON Update Functionality"}, "1269": {"path": "/tests/conversation_talk_apis/api_tests.py", "hash": "d36b2dd241ae4313f8f4fb63f7f4f91c", "title": "Weibo Chatbot API Tests"}, "1270": {"path": "/tests/conversation_talk_apis/api_tests.py:1-37", "hash": "4ffc35743f190b518bfb9473480394d8", "title": "API-Powered Chat Functions for Atri and QingYunKe"}, "1271": {"path": "/tests/conversation_talk_apis/api_tests.py:38-69", "hash": "3db2eba109f08134a2a089f85bb4bae0", "title": "Weibo API Direct Messaging in Python"}, "1272": {"path": "/tests/conversation_talk_apis/api_tests.py:70-99", "hash": "ddf31eaf41c67b78b248090bf6942d22", "title": "Weibo/OwnThink API Conversation Test"}, "1273": {"path": "/tests/conversation_talk_apis/api_tests.py:100-103", "hash": "57f2d9bfe02d5a61b06882a68cb87501", "title": "Calling checkApi with Chatbot Parameters"}, "1274": {"path": "/tests/cpm_chinese_chitchat_model_gpt2/init.sh", "hash": "35de3f40658c488c218f4d9dc6980ff5", "title": "GPT2 Chitchat Model Cloning"}, "1275": {"path": "/tests/cpm_chinese_chitchat_model_gpt2/test.sh", "hash": "0bb97ff383594bf5d70abf92e325e81c", "title": "GPT2 Chitchat RAM Test & Model Run"}, "1276": {"path": "/tests/dapp_ethereum_python_crypto/README.md", "hash": "6f487c2c20420a6f85a41e7ada60b365", "title": "Dummy Crypto for AGI Testing"}, "1277": {"path": "/tests/dapp_ethereum_python_crypto/test.py", "hash": "e3865da19399062705febecfd30ead21", "title": "Ethereum Dapp Python Test"}, "1278": {"path": "/tests/dapp_ethereum_python_crypto/test.py:1-26", "hash": "e31b0182107bfbf2a6ca070e7bbefb19", "title": "Connecting to Local Ethereum Node"}, "1279": {"path": "/tests/dapp_ethereum_python_crypto/test.py:27-52", "hash": "6fbd4cd7f83576e6c7c904515a12d9b0", "title": "Ethereum Mainnet Crypto Transaction Test"}, "1280": {"path": "/tests/dog_cat_demo_not_for_test.mdl", "hash": "4d6ebdeac6b1d18c6873c7d4762d2879", "title": "Video Properties and Configurations"}, "1281": {"path": "/tests/dog_cat_demo_not_for_test.mdl:1-33", "hash": "9ff79617fa9d9a8faa0de2b145b57475", "title": "Video File Properties and TODO Notes"}, "1282": {"path": "/tests/dog_cat_demo_not_for_test.mdl:34-68", "hash": "c03b0c7ec849aaa363b9c425fb40ef74", "title": "Video Properties Listing Code"}, "1283": {"path": "/tests/dog_cat_demo_not_for_test.mdl:69-103", "hash": "e5fa9809eccebb3ad47f9cfa451e28ad", "title": "Video Properties Listing in \"/dev/shm/medialang/online\" Directory"}, "1284": {"path": "/tests/dog_cat_demo_not_for_test.mdl:104-138", "hash": "099aa75f719f8431817c3e1a33e946b7", "title": "Media List with File Properties"}, "1285": {"path": "/tests/dog_cat_demo_not_for_test.mdl:139-173", "hash": "5f07406e4fd42af8f548e61f469c002d", "title": "Video File Properties List"}, "1286": {"path": "/tests/dog_cat_demo_not_for_test.mdl:174-208", "hash": "5b4f71695e04b48ff8e49b6eed1ad69f", "title": "Video File Details List"}, "1287": {"path": "/tests/dog_cat_demo_not_for_test.mdl:209-243", "hash": "e814ee754cf65c065b2a5148666b8dce", "title": "Video Parameters List and Storage Directory"}, "1288": {"path": "/tests/dog_cat_demo_not_for_test.mdl:244-278", "hash": "00e8b77af83a4113a53bc348eedcb459", "title": "Video Metadata Code Explained"}, "1289": {"path": "/tests/dog_cat_demo_not_for_test.mdl:279-313", "hash": "64570dc0bc6c99302837a4950a5b2e5e", "title": "Video File List and Properties"}, "1290": {"path": "/tests/dog_cat_demo_not_for_test.mdl:314-321", "hash": "da62e5824fdfd8e7bc8e4679a45b7458", "title": "Dual Video Configuration: Speed, Silent, and Cut Points"}, "1291": {"path": "/tests/download_sections_video_portion_partial_download_youtube_yt_dlp_bilibili/cron_update_cookies_stored_under_root_home.py", "hash": "297bae7fc26869cbae411b53c5c97b5c", "title": "Update Stored Cookies for Browsers"}, "1292": {"path": "/tests/download_sections_video_portion_partial_download_youtube_yt_dlp_bilibili/test_bilibili.sh", "hash": "4681126bd26df00d3272a569041c0af3", "title": "Bilibili Video Portion Downloader"}, "1293": {"path": "/tests/download_sections_video_portion_partial_download_youtube_yt_dlp_bilibili/test_bilibili.sh:1-26", "hash": "0325ab230b3d5692d2556b05c69d2436", "title": "Partial Download Bilibili Videos with YT-DLP"}, "1294": {"path": "/tests/download_sections_video_portion_partial_download_youtube_yt_dlp_bilibili/test_bilibili.sh:26-42", "hash": "aeda4c9f1208242cbecb21d422719a8a", "title": "Partial Bilibili Download with yt-dlp"}, "1295": {"path": "/tests/download_sections_video_portion_partial_download_youtube_yt_dlp_bilibili/test_bilibili.sh:44-59", "hash": "55e775a1c68f479ff544f350dbdcb8e9", "title": "Efficient Bilibili Video Partial Download"}, "1296": {"path": "/tests/download_sections_video_portion_partial_download_youtube_yt_dlp_bilibili/test_bilibili.sh:60-75", "hash": "5f4c077a3b2d63a62d42d071f4b1e638", "title": "Bilibili Playlist Metadata with yt-dlp"}, "1297": {"path": "/tests/dump_python_dependencies/dump.py", "hash": "1c105e4c805a5154e550e4dc90c41bc4", "title": "Log Python Dependencies"}, "1298": {"path": "/tests/editly_test_video_render_with_bgm/test.sh", "hash": "18cae4dccb8e5b9e8aedda3c71f09b82", "title": "Headless Linux Test Environment for Editly Video Render"}, "1299": {"path": "/tests/elastic_search_engine/README.md", "hash": "8980108cf136232eb8769ccdcb07d735", "title": "Memory-Efficient Search Engine: Meilisearch Alternative"}, "1300": {"path": "/tests/english_chinese_mixing_spliter/default.yaml", "hash": "a7117e328e9850ece1218aa818958b45", "title": "GAN-based App Config: Image/Video Input-Output"}, "1301": {"path": "/tests/english_chinese_mixing_spliter/english_grepper.py", "hash": "88435ef88fff1e9d3968c09e139d7fc7", "title": "Python Mix Language Splitter"}, "1302": {"path": "/tests/english_chinese_mixing_spliter/english_grepper.py:1-32", "hash": "46e9e7f4f770a877bfc2a1313f13c628", "title": "Regex-based Search and Number List Formatting Functions"}, "1303": {"path": "/tests/english_chinese_mixing_spliter/english_grepper.py:33-68", "hash": "063e7b44a4d09aceaa823ca44f324aee", "title": "English-Chinese Text Tokenizer"}, "1304": {"path": "/tests/english_chinese_mixing_spliter/english_grepper.py:69-90", "hash": "001415c7fad7f09ab1f2eeb7fdc2bdf0", "title": "English-Chinese Mixing Splitter"}, "1305": {"path": "/tests/english_chinese_mixing_spliter/paddlebobo_paddletools_tts.py", "hash": "9cea7ba30bfd8fd3994b5c138cee27cd", "title": "Multi-Language TTS Synthesis"}, "1306": {"path": "/tests/english_chinese_mixing_spliter/paddlebobo_paddletools_tts.py:1-35", "hash": "a58ff6eeff5fa5a9c016c4d296074883", "title": "Initializing Models and Libraries"}, "1307": {"path": "/tests/english_chinese_mixing_spliter/paddlebobo_paddletools_tts.py:35-69", "hash": "153807b9cc298d929300af997a42f613", "title": "Paddlebobo TTS Models Dictionary"}, "1308": {"path": "/tests/english_chinese_mixing_spliter/paddlebobo_paddletools_tts.py:70-91", "hash": "3adc839890883c954b1008762b28456f", "title": "TTSExecutor Initialization: Retrieving Models and Paths"}, "1309": {"path": "/tests/english_chinese_mixing_spliter/paddlebobo_paddletools_tts.py:92-118", "hash": "b7c13e28edf63c048de77bcf4ca9c63b", "title": "Loading Pre-Trained Models for ASR System"}, "1310": {"path": "/tests/english_chinese_mixing_spliter/paddlebobo_paddletools_tts.py:119-141", "hash": "dba3828280e7409bfdd1b77dae68731d", "title": "Dual Language TTS Setup"}, "1311": {"path": "/tests/english_chinese_mixing_spliter/paddlebobo_paddletools_tts.py:142-164", "hash": "41737fc2f68cc7cfd11f8bc6003fca4c", "title": "PaddleTTS: English-Chinese TTS Synthesis Model"}, "1312": {"path": "/tests/english_chinese_mixing_spliter/paddlebobo_paddletools_tts.py:165-187", "hash": "c7c9be9be96f5097f428648d8150de18", "title": "English-Chinese TTS System with Missing Chinese Tone Information"}, "1313": {"path": "/tests/english_chinese_mixing_spliter/paddlebobo_paddletools_tts.py:188-204", "hash": "82958a0978fde30c9a24636497d3ffd4", "title": "Chinese TTS using Mel Spectrogram and WAV Conversion"}, "1314": {"path": "/tests/english_chinese_mixing_spliter/paddlebobo_paddletools_tts.py:205-219", "hash": "ff60852ded04a5cabbc7ac3e44c4538a", "title": "Audio File Concatenator and Deleter"}, "1315": {"path": "/tests/english_chinese_mixing_spliter/sample_strings.txt", "hash": "afb1d9b77655b991bf226032c315d9a6", "title": "Mixed-Language Test Strings"}, "1316": {"path": "/tests/english_chinese_mixing_spliter/test_tts.py", "hash": "b30a64913c43216be2bb50106e5b78e9", "title": "TTS Tool for Multilingual Audio Generation"}, "1317": {"path": "/tests/english_chinese_mixing_spliter/test_tts.py:1-25", "hash": "aca2369648ac373d5b09786cdf1157c3", "title": "English-Chinese Mixing Spliter: TTS Executor Test"}, "1318": {"path": "/tests/english_chinese_mixing_spliter/test_tts.py:26-32", "hash": "15909f573d7fa1fdec0e996f128de73f", "title": "English TTS Integration"}, "1319": {"path": "/tests/english_without_space_spliting/init.sh", "hash": "0aa66c8b4a093398215930549c8e3e5c", "title": "Fetch English Words List"}, "1320": {"path": "/tests/english_without_space_spliting/test.py", "hash": "3e62b4a90b3389b52999a1f35581400d", "title": "Reconstructing Text with Frequency"}, "1321": {"path": "/tests/english_without_space_spliting/test.py:1-30", "hash": "cf818dc734173c103da04693ab1df7c7", "title": "Zipf's Law and Dynamic Programming for Word Frequency"}, "1322": {"path": "/tests/english_without_space_spliting/test.py:31-50", "hash": "d434a300c80495c91a216f1063fb53e7", "title": "Inferring Spaces from Cost Values"}, "1323": {"path": "/tests/experiment_iterate_and_merge_alike_text_regions.py", "hash": "881c42d2ee4414c935c59e6e26ac28ac", "title": "Iterate, Merge, and Compare Coordinates"}, "1324": {"path": "/tests/experiment_iterate_and_merge_alike_text_regions.py:1-51", "hash": "b78ccba9e5f378dee89df8d717003190", "title": "Finite State Machine Encoding"}, "1325": {"path": "/tests/experiment_iterate_and_merge_alike_text_regions.py:52-104", "hash": "bd6d5d0056b0510935a9a0090477ec35", "title": "Merge Similar Text Regions"}, "1326": {"path": "/tests/experiment_iterate_and_merge_alike_text_regions.py:105-107", "hash": "e1ec98c12c6cd9c75bbf412f48296ff4", "title": "Copy and Append Items in Sample List"}, "1327": {"path": "/tests/ffmpeg_audio_volume_detect_adjust/test.py", "hash": "40e47827e9615af630c81fc57ee50595", "title": "Automated Audio Adjustment for Testing"}, "1328": {"path": "/tests/ffmpeg_audio_volume_detect_adjust/test.py:1-28", "hash": "d8999b704567b177ac45a7f1ae169296", "title": "Black Video Generator with Audio Duration"}, "1329": {"path": "/tests/ffmpeg_audio_volume_detect_adjust/test.py:29-65", "hash": "f8520f55d7b05d3a43db6411927dd384", "title": "Video with Muted Audio using FFmpeg"}, "1330": {"path": "/tests/ffmpeg_audio_volume_detect_adjust/test.py:66-75", "hash": "4ad49e138f5a26b7491ec7e4eb177c8f", "title": "Audio Volume Detection & Adjustment Test"}, "1331": {"path": "/tests/ffmpeg_audio_volume_detect_adjust/test_get_audio_length.py", "hash": "3e707cd84717382bff357977287a7963", "title": "Audio Duration Retriever"}, "1332": {"path": "/tests/ffmpeg_audio_volume_detect_adjust/test_get_media_bitrate.py", "hash": "50159515568e78cdfba3ac8308874fe6", "title": "Media Bitrate Extractor"}, "1333": {"path": "/tests/ffmpeg_audio_volume_detect_adjust/test_output_file_error.py", "hash": "b8c18c23e9330930eb6371c57ac876ef", "title": "FFmpeg Audio Normalization and Clipping"}, "1334": {"path": "/tests/ffmpeg_audio_volume_detect_adjust/test_output_file_error.py:1-23", "hash": "de0f8b89a1676f61c2bdfdeadeedab2a", "title": "Volume Detection and Adjustment in FFmpeg"}, "1335": {"path": "/tests/ffmpeg_audio_volume_detect_adjust/test_output_file_error.py:24-32", "hash": "b54fb72e59784e6b1020e462cb6a7b70", "title": "Audio Clipping Warning and Normalization"}, "1336": {"path": "/tests/ffmpeg_python_test/test.py", "hash": "7587c3d8c98257a3313a247dd509bd2f", "title": "Python FFmpeg Video Processing and Concatenation"}, "1337": {"path": "/tests/ffmpeg_python_test/test.py:1-30", "hash": "b36c5e4a33528be56560595fc80f3a31", "title": "Trim, Crop, and Output Videos with FFmpeg"}, "1338": {"path": "/tests/ffmpeg_python_test/test.py:31-53", "hash": "c446d98ca261eb188e5ee94217b2854a", "title": "Dynamic Crop and Zoom with FFmpeg"}, "1339": {"path": "/tests/ffmpeg_python_test/test.py:53-66", "hash": "ba525204bb4e56a31e68762b6223a065", "title": "FFmpeg Python: Cropping and Resizing Video Streams"}, "1340": {"path": "/tests/ffmpeg_python_test/test.py:68-96", "hash": "c91efea5b5359803e17c15dd729672ef", "title": "Python FFmpeg Merger Tool"}, "1341": {"path": "/tests/ffmpeg_python_test/test.py:97-114", "hash": "844b9ebf0d76e509b591405f9a96d5d0", "title": "Overlay Delogo with FFMPEG Python"}, "1342": {"path": "/tests/ffmpeg_python_test/test.py:115-122", "hash": "4e2d37e264b63128f3adb3c37f4f6754", "title": "FFmpeg Audio Concatenation"}, "1343": {"path": "/tests/generator_yield_from_python_extract_element_one_by_one/test.py", "hash": "963a4bb9b8be0cf4b5d6f70ddb7952f6", "title": "Generators and Lambda: Iterative Resource Management"}, "1344": {"path": "/tests/generator_yield_from_python_extract_element_one_by_one/test.py:1-35", "hash": "d4edf0a6ab7c5978f84a5e41271ac4a1", "title": "Generators with Lambda: Streamline Iteration and Cleanup"}, "1345": {"path": "/tests/generator_yield_from_python_extract_element_one_by_one/test.py:38-50", "hash": "099cb611d910600c9f81798a00fa4034", "title": "Testing Generator Yield from Python: Temporary File Handling"}, "1346": {"path": "/tests/hmm_test_speech_recognization_time_series/pomegranate_test.py", "hash": "bf6ed05d2534ec60764e2d739f46fb0a", "title": "Pomegranate: Advanced HMM Library"}, "1347": {"path": "/tests/hmm_test_speech_recognization_time_series/seqlearn_test.py", "hash": "c72eae44394fdf6303069a1c02458e55", "title": "Time-Series Speech Recognition via Structured Perceptron"}, "1348": {"path": "/tests/hmm_test_speech_recognization_time_series/test.py", "hash": "27fcf6685699ae282fb8513edbf2f50b", "title": "Gaussian HMM Time Series Speech Recognition"}, "1349": {"path": "/tests/hmm_test_speech_recognization_time_series/test.py:1-24", "hash": "8354a8cace4f4a5953545983fea7468e", "title": "Gaussian HMM Model for Speech Recognition"}, "1350": {"path": "/tests/hmm_test_speech_recognization_time_series/test.py:25-38", "hash": "1185302f79e631a804facc529875ea86", "title": "Lower Score, Better Model"}, "1351": {"path": "/tests/hyper_param_optimization/README.md", "hash": "85fcc9bd876836ae51216bc8f8e8e2e2", "title": "Hyperopt Library Guide"}, "1352": {"path": "/tests/hyper_param_optimization/optimize_suggest.py", "hash": "69a60e528a43dee6d3ce2c1fa75849b4", "title": "Hyperopt TPE: Optimizing Functions Efficiently"}, "1353": {"path": "/tests/hyper_param_optimization/test.py", "hash": "22276f0fa92a2c026a5d60d49fb44a8d", "title": "Hyperopt-Driven Hyperparameter Optimization"}, "1354": {"path": "/tests/hyper_param_optimization/test.py:1-24", "hash": "59deda6769a5399ca5d78b93216e8ab4", "title": "Hyperopt Library for Parameter Optimization"}, "1355": {"path": "/tests/hyper_param_optimization/test.py:25-40", "hash": "49a16b40b443874ea1507f9d657eacf0", "title": "Hyperparameter Search with Hyperopt & Pyll"}, "1356": {"path": "/tests/idlefish_\u95f2\u9c7c_xianyu_spider_scraper_taobao_video_guangguang/README.md", "hash": "82d858e9bd707b4c6e5241f8bc0da61b", "title": "Malicious File Warning: Wine Software"}, "1357": {"path": "/tests/image_quality_tests/README.md", "hash": "7c649cec4d29cb5732b5c24976b72afa", "title": "Optimizing Image Quality for Model Accuracy"}, "1358": {"path": "/tests/image_quality_tests/pybrisque_init.sh", "hash": "7dc24e9ac71c0a819e76e3ff9189a41e", "title": "Pybrisque Dependencies Installation"}, "1359": {"path": "/tests/image_quality_tests/pybrisque_test.py", "hash": "ce5e5b74ff6b52751dfaca3ec0f29210", "title": "Fast Image Quality Assessment with PyBrisque"}, "1360": {"path": "/tests/image_quality_tests/pyiqa_inference.py", "hash": "5a586e62d7bdee3b2d7aed089773b73c", "title": "Pyiqa Image Quality Benchmarking"}, "1361": {"path": "/tests/image_quality_tests/pyiqa_inference.py:1-26", "hash": "a61689df2e5fb83a26f2c8432ff8e222", "title": "PyIQA Inference Demo"}, "1362": {"path": "/tests/image_quality_tests/pyiqa_inference.py:27-53", "hash": "ab6640ac126c75c82cd0dfccbd2bb929", "title": "Image Quality Assessment Model Setup"}, "1363": {"path": "/tests/image_quality_tests/pyiqa_inference.py:55-85", "hash": "e81d6a1d3f660a4170219ec659b19e09", "title": "Image Quality Scorer with Pre-Trained Model"}, "1364": {"path": "/tests/image_quality_tests/pyiqa_inference.py:86-99", "hash": "3fc71ecfbe530deb5b1aefa0f9f080ab", "title": "Time-Based Image Quality Algorithm Comparison"}, "1365": {"path": "/tests/image_quality_tests/pyiqa_test.py", "hash": "a88da83dbc646cbcfe97944f2285c459", "title": "Effective Metric Filtering Confusion"}, "1366": {"path": "/tests/image_quality_tests/t_pyiqa2.sh", "hash": "dcb649cf2b57abf96efd989602cb86ca", "title": "Pyiqa Test Piping"}, "1367": {"path": "/tests/image_quality_tests/test_image_quality.py", "hash": "39b20b78d2ca5bf919732ff72fc0b088", "title": "Frame-by-Frame BRISQUE Image Quality Test"}, "1368": {"path": "/tests/image_quality_tests/test_pyiqa.sh", "hash": "31f2ae70264a745a4b916f1d1b9c2a2d", "title": "Image Quality Test with PyIQA Script"}, "1369": {"path": "/tests/image_quality_tests/tiq2.py", "hash": "51d4cb8336b9f783da418f87f913ff08", "title": "BRISQUE-Based Image Quality Assessment"}, "1370": {"path": "/tests/image_quality_tests/tiq2.py:1-40", "hash": "8d27f044491024af63e497f3e63be796", "title": "BRISQUE Algorithm for Image Quality Assessment"}, "1371": {"path": "/tests/image_quality_tests/tiq2.py:41-50", "hash": "35e5dd7dd6c50f12ce8261632fdfda80", "title": "OpenCV GUI Image Display"}, "1372": {"path": "/tests/interval_set_math_operations/continual_less_sympy.py", "hash": "c8d2b28c7366c91709a92f72509cf8d3", "title": "SymPy-Driven Interval Operations"}, "1373": {"path": "/tests/interval_set_math_operations/continual_less_sympy.py:1-33", "hash": "52e771467fc24e77e6db38f4e9355682", "title": "Merging Intervals with SymPy"}, "1374": {"path": "/tests/interval_set_math_operations/continual_less_sympy.py:35-55", "hash": "2401f02d96d8a37993793ae9cbfdfaee", "title": "Interval Boundary Tracking Algorithm"}, "1375": {"path": "/tests/interval_set_math_operations/continual_less_sympy.py:56-78", "hash": "9c9e3acd085fc1d788191e132361228a", "title": "Continual Less Sympy Test"}, "1376": {"path": "/tests/interval_set_math_operations/continual_less_sympy.py:79-94", "hash": "8cb218592198e6fed8bc4d011d9ef6d6", "title": "Interval Set Math: Continual Less SymPy Update"}, "1377": {"path": "/tests/interval_set_math_operations/continual_sympy.py", "hash": "67094cf3fcdc2e6dc1a24ab956e8abd4", "title": "Sympy-Driven Interval Operations"}, "1378": {"path": "/tests/interval_set_math_operations/continual_sympy.py:1-33", "hash": "9868ea883a9d445956005fce5a1e376b", "title": "Sympy Interval Set Operations"}, "1379": {"path": "/tests/interval_set_math_operations/continual_sympy.py:35-66", "hash": "f34d479343bfb257658f1215df7f3405", "title": "Sympy-Aided Interval Set Math Operations"}, "1380": {"path": "/tests/interval_set_math_operations/continual_sympy.py:68-92", "hash": "2de143247aa33edd52a7ead2764cce31", "title": "Sympy Interval Set Reverse Indexing"}, "1381": {"path": "/tests/interval_set_math_operations/continual_sympy.py:94-113", "hash": "9dca7f038bd6521d23f231d4fa16c167", "title": "Interval Set Math Operations Revisit"}, "1382": {"path": "/tests/interval_set_math_operations/continual_sympy.py:114-127", "hash": "b5435fdf383524862ba5fb5cccd9199e", "title": "Interval Set Difference and Union Calculator"}, "1383": {"path": "/tests/jina_deploy_free_gpu_cpu/README.md", "hash": "3e164a4368ca493956d4c39609ed1af1", "title": "Test Jina's Free GPU/CPU Usage"}, "1384": {"path": "/tests/jina_deploy_free_gpu_cpu/hello-jina/client.py", "hash": "8bc1c56c54dedac3e8bf9dcf9f9f7c19", "title": "Jina Client for Remote Processing"}, "1385": {"path": "/tests/jina_deploy_free_gpu_cpu/hello-jina/executor1/config.yml", "hash": "1e9cff9a5313dcb66b07a12924610a2b", "title": "MyExecutor Config"}, "1386": {"path": "/tests/jina_deploy_free_gpu_cpu/hello-jina/executor1/executor.py", "hash": "a35a12f22319987f295e11254e9b6c24", "title": "Custom Executor for Jina Deployment"}, "1387": {"path": "/tests/jina_deploy_free_gpu_cpu/hello-jina/executor1/executor.py:1-29", "hash": "dce60876e9b1caae7c0d01726aaada95", "title": "Custom Executor in Jina"}, "1388": {"path": "/tests/jina_deploy_free_gpu_cpu/hello-jina/executor1/executor.py:30-37", "hash": "7673fc3bb36909862d1c5872f7d76d25", "title": "Command Execution with Subprocess and Error Handling"}, "1389": {"path": "/tests/jina_deploy_free_gpu_cpu/hello-jina/flow.yml", "hash": "0ccf10b6d6f61f2ed6aeef45d06d087b", "title": "Jina Flow Deployment with Toy Executor"}, "1390": {"path": "/tests/jina_deploy_free_gpu_cpu/random_shell/README.md", "hash": "0ffa9fc44ab7524371fa9e7980a87838", "title": "Shell to Jina Transition Script"}, "1391": {"path": "/tests/jina_deploy_free_gpu_cpu/random_shell/config.yml", "hash": "d3a1b9d588d3c3bead56d3887035c9cc", "title": "Configure Random Shell Executor"}, "1392": {"path": "/tests/jina_deploy_free_gpu_cpu/random_shell/executor.py", "hash": "2093609b167a36cdf526499f31cb4a29", "title": "Random Shell Executor for Jina Deployment"}, "1393": {"path": "/tests/jina_deploy_free_gpu_cpu/random_shell/executor.py:1-23", "hash": "a91e833df85901a758f665772dae48cf", "title": "Deploy Executor on Jina Platform"}, "1394": {"path": "/tests/jina_deploy_free_gpu_cpu/random_shell/executor.py:24-42", "hash": "953e90b0e0df82ce815d84d592a09878", "title": "Jina Executor Types Demo"}, "1395": {"path": "/tests/jina_deploy_free_gpu_cpu/random_shell/executor.py:42-63", "hash": "350c2e2202d99ca039b00f32ed9734a7", "title": "Command Executor Class"}, "1396": {"path": "/tests/jina_deploy_free_gpu_cpu/random_shell/flow.yml", "hash": "ffba12c928d063d1a1eff0a26dd5d55d", "title": "Jina Flow with Random Shell and GPU"}, "1397": {"path": "/tests/jina_deploy_free_gpu_cpu/semantic_search_encoder_multilingual/README.md", "hash": "0ffa9fc44ab7524371fa9e7980a87838", "title": "Jina Framework Shell Transition"}, "1398": {"path": "/tests/jina_deploy_free_gpu_cpu/semantic_search_encoder_multilingual/client.py", "hash": "274222aeb2ad95b14a5f8058cfc1ce46", "title": "Jina Semantic Search Client"}, "1399": {"path": "/tests/jina_deploy_free_gpu_cpu/semantic_search_encoder_multilingual/config.yml", "hash": "4a37facdf5ef6c98d03b4b884b33ea38", "title": "Multilingual Semantic Search Encoder"}, "1400": {"path": "/tests/jina_deploy_free_gpu_cpu/semantic_search_encoder_multilingual/deploy_to_jina_cloud.sh", "hash": "9eb72899a3a9db90551f98f37d0eb076", "title": "Deploy Jina Cloud App"}, "1401": {"path": "/tests/jina_deploy_free_gpu_cpu/semantic_search_encoder_multilingual/executor.py", "hash": "74076ce282f17e524588bc3fed40d418", "title": "Multilingual Semantic Search Encoder Executor"}, "1402": {"path": "/tests/jina_deploy_free_gpu_cpu/semantic_search_encoder_multilingual/executor.py:1-28", "hash": "43161268e765bf57f626bb3fe345afc0", "title": "Multilingual Semantic Search Encoder Executor"}, "1403": {"path": "/tests/jina_deploy_free_gpu_cpu/semantic_search_encoder_multilingual/executor.py:29-31", "hash": "4bd57343eb5726cf89f006c96076138e", "title": "Error Handling in Semantic Search Encoder"}, "1404": {"path": "/tests/jina_deploy_free_gpu_cpu/semantic_search_encoder_multilingual/flow.yml", "hash": "d439eded98a618bc11b4430122c49494", "title": "Jina Flow with Multilingual Encoder"}, "1405": {"path": "/tests/jina_deploy_free_gpu_cpu/semantic_search_encoder_multilingual/push_to_jina_hub.sh", "hash": "73d4885de251fe8bcfcb9617c4051a78", "title": "Push to Jina Hub"}, "1406": {"path": "/tests/jina_deploy_free_gpu_cpu/semantic_search_encoder_multilingual/requirements.txt", "hash": "dcea41138f402a677ed99565fc00e38d", "title": "Python Packages for Semantic Search"}, "1407": {"path": "/tests/jina_deploy_free_gpu_cpu/semantic_search_encoder_multilingual/test.py", "hash": "28066b77cf883b51cd51b1711149ca10", "title": "Deploying Semantic Search Encoder Multilingual"}, "1408": {"path": "/tests/jina_deploy_free_gpu_cpu/semantic_search_encoder_multilingual/test.sh", "hash": "7b5d221361ad8bb1624c04e7dc0ab938", "title": "Setting JINA MP Start Method for Semantic Search"}, "1409": {"path": "/tests/jina_deploy_free_gpu_cpu/semantic_search_encoder_multilingual/test_client.py", "hash": "a102970215f05e5fc1af4dbeb680ea4c", "title": "Test Jina Client with Multilingual Encoder"}, "1410": {"path": "/tests/jina_multimodal_cross_modal_search_examples_apps/get_jina_hub_list.py", "hash": "b7c984dd8762bd06dd99c5f0c58369e3", "title": "Jina Hub Executors Scraper"}, "1411": {"path": "/tests/jina_multimodal_cross_modal_search_examples_apps/get_jina_hub_list.sh", "hash": "b358c1d77d49061f63ad3519fc8a9292", "title": "Get Jina Hub Executor List"}, "1412": {"path": "/tests/jina_multimodal_cross_modal_search_examples_apps/get_jina_hub_list.sh:1-15", "hash": "b6f59a39d41706632e63afa2db160d82", "title": "Fetching Jina Hub Executors with Curl"}, "1413": {"path": "/tests/jina_multimodal_cross_modal_search_examples_apps/get_jina_hub_list.sh:16-20", "hash": "3895a12ab222d99aa544781283a73c47", "title": "Compressed HTTP Request to Jina Hub List"}, "1414": {"path": "/tests/kaggle_yt_dls/test.py", "hash": "107fdb15b5fb35bb1ae484ec7319899f", "title": "YTDL Installer and Downloader Script"}, "1415": {"path": "/tests/kaggle_yt_dls/test_init.sh", "hash": "f4a53e8d49149ca600ecb347313d717d", "title": "Initiate Kaggle Kernel Downloads"}, "1416": {"path": "/tests/kaggle_yt_dls/transcode_nvenc.sh", "hash": "149066b6ec619169b73e74189b123f44", "title": "Transcode NVENC Testing"}, "1417": {"path": "/tests/kaggle_yt_dls/transcode_nvenc.sh:1-11", "hash": "183eda0a82fb0ca4171d42576e47dc98", "title": "Hardware-Accelerated FFmpeg Transcode Test"}, "1418": {"path": "/tests/kaggle_yt_dls/transcode_nvenc.sh:11-14", "hash": "ac956b29596b0ce5a82510905b724529", "title": "NVENC Alternatives in Video Transcoding"}, "1419": {"path": "/tests/karaoke_effects/clash_auto_update.py", "hash": "5c2e9ed458a4ee7729a1469faa03f1b5", "title": "Clash Proxy Auto-Updater"}, "1420": {"path": "/tests/karaoke_effects/clash_auto_update.py:1-30", "hash": "ee1a15c8842b1e5d9b004b69f4713bba", "title": "Automatic Clash Configuration Updater"}, "1421": {"path": "/tests/karaoke_effects/clash_auto_update.py:30-56", "hash": "15fc415759284581a39e829f1621ee8e", "title": "Clash Auto-Update with Proxy Management"}, "1422": {"path": "/tests/karaoke_effects/clash_auto_update.py:57-98", "hash": "3d3175d07f7dc129d72c70f5cef699f5", "title": "Auto-updating Tested Proxy List"}, "1423": {"path": "/tests/karaoke_effects/clash_auto_update.py:99-133", "hash": "d09bb8c72b521c5f9f4ac75f52e7c854", "title": "Clash Proxy Candidate Generator"}, "1424": {"path": "/tests/karaoke_effects/clash_auto_update.py:134-173", "hash": "3be472b6043aa1dac8fef59d266a0b5a", "title": "Refining Clash YAML Configs"}, "1425": {"path": "/tests/karaoke_effects/clash_auto_update.py:174-202", "hash": "ca7afa7ecee0dcb31f56602744837818", "title": "Automatic Proxy and DNS Update"}, "1426": {"path": "/tests/karaoke_effects/clash_auto_update.py:203-240", "hash": "eaba6837df27ef5ff6d72f93fe05f2b0", "title": "Clash DNS Server Setup Script"}, "1427": {"path": "/tests/karaoke_effects/clash_auto_update.py:240-269", "hash": "5fd87819948b948cbfe5538a8d4cba87", "title": "Clash Auto-Update via YAML"}, "1428": {"path": "/tests/karaoke_effects/clash_auto_update.py:270-318", "hash": "05c8efc52e81cbb5af71448c449994d3", "title": "Clash Proxy Auto-Update Flask Server"}, "1429": {"path": "/tests/karaoke_effects/clash_auto_update.py:319-353", "hash": "3feca0eb82bce10264d8468f586f4df7", "title": "Clash Proxy Auto-Update Functionality"}, "1430": {"path": "/tests/karaoke_effects/fastapi_translator.py", "hash": "8a05f5efb14858de413faebf04d18216", "title": "FastAPI Translator App with Proxies and Endpoints"}, "1431": {"path": "/tests/karaoke_effects/fastapi_translator.py:1-41", "hash": "2aaf515ac69275f8f47b7c281971fd6d", "title": "FastAPI Translator Setup"}, "1432": {"path": "/tests/karaoke_effects/fastapi_translator.py:44-83", "hash": "d9b988c237d02a9ad43c7d6db46d638b", "title": "FastAPI Translator Functions"}, "1433": {"path": "/tests/karaoke_effects/fastapi_translator.py:84-111", "hash": "75652a0761b698431953ca05050cebbd", "title": "Random Proxy Selection for DeepL Translator"}, "1434": {"path": "/tests/karaoke_effects/fastapi_translator.py:112-148", "hash": "71d6234bc26c3f2b9a7b6ca7464beff4", "title": "Deepl API Request Handler"}, "1435": {"path": "/tests/karaoke_effects/fastapi_translator.py:149-181", "hash": "dfe93f63c103a1c66f63bc4012cd65a3", "title": "Random Proxy Selector and Updater"}, "1436": {"path": "/tests/karaoke_effects/fastapi_translator.py:182-213", "hash": "29bda81cfdc4c8fa0dae4ea49b4005fe", "title": "Multi-Backend Text Translator"}, "1437": {"path": "/tests/karaoke_effects/fastapi_translator.py:214-245", "hash": "b558119a4f522e59654b1a8cc1926e18", "title": "Error-checking Proxy Function"}, "1438": {"path": "/tests/karaoke_effects/fastapi_translator.py:246-283", "hash": "cdd69d23b6258adb8fb69b023c870429", "title": "FastAPI Translator Cache System"}, "1439": {"path": "/tests/karaoke_effects/fastapi_translator.py:284-287", "hash": "cce2f2cdc6f4e899bdb7531e54b6a5a6", "title": "FastAPI Translator Dictionary"}, "1440": {"path": "/tests/karaoke_effects/in2.ass.j2", "hash": "6f199dc6c754e828e2ee73390695558d", "title": "Karaoke Effects Styles"}, "1441": {"path": "/tests/karaoke_effects/in2.ass.j2:1-23", "hash": "59fb9269c679c570829996e5990ef023", "title": "Aegisub Script Template"}, "1442": {"path": "/tests/karaoke_effects/in2.ass.j2:23-31", "hash": "d79bcc05eccf7bd3cab25e26c57fb67d", "title": "Karaoke Effects Code Generation"}, "1443": {"path": "/tests/karaoke_effects/in2.ass.j2:32-36", "hash": "fa9d4b2b76e2ce0a05667e23661e0f86", "title": "Karaoke Timings and Translations"}, "1444": {"path": "/tests/karaoke_effects/launch_clash.sh", "hash": "20541928de24a351d40b2c938607cd71", "title": "Launch Clash Script"}, "1445": {"path": "/tests/karaoke_effects/loadLingua_jpype.py", "hash": "9a3625a9eec5d68032f70754c98bf12c", "title": "Python-Java Language Detection with Jpype and Lingua"}, "1446": {"path": "/tests/karaoke_effects/loadLingua_jpype.py:1-34", "hash": "e3a9c863f83de34e8e4d3c4fe8764a94", "title": "Jpype-based Java Language Detection"}, "1447": {"path": "/tests/karaoke_effects/loadLingua_jpype.py:35-42", "hash": "88c5916e6a3663f012819be985fed4ea", "title": "JVM Shutdown Unclear in Code"}, "1448": {"path": "/tests/karaoke_effects/loadLingua_jpype_fastapi.py", "hash": "98513cef9eb6805fbbced3a2b371f972", "title": "FastAPI-JPype Language Detection"}, "1449": {"path": "/tests/karaoke_effects/loadLingua_jpype_fastapi.py:1-42", "hash": "76b89a348d7b07b8d94b75bf6ff4f443", "title": "FastAPI-JPype Lingua Detector"}, "1450": {"path": "/tests/karaoke_effects/loadLingua_jpype_fastapi.py:43-50", "hash": "b01f14ba970867615eee7440803b377b", "title": "Exception-Handling LangID Analysis with LangID Library"}, "1451": {"path": "/tests/karaoke_effects/loadLingua_pyjnius.py", "hash": "d19a0092f11c886c7f03527ea59a3cb4", "title": "Load Lingua with Pyjnius"}, "1452": {"path": "/tests/karaoke_effects/loadSomeCustomClashYaml.py", "hash": "908290d2b63d31ccc230c6a40b30bf18", "title": "Load Custom Clash YAML and Convert Formats"}, "1453": {"path": "/tests/karaoke_effects/load_translator.sh", "hash": "a9d7b592cf92da05c92ca15ad7940529", "title": "Load Translator Session & Configuration"}, "1454": {"path": "/tests/karaoke_effects/lrc2ass_py3/README.md", "hash": "178ea433709fa56f6213730f575f841a", "title": "LRC to ASS Converter with Karaoke Effects"}, "1455": {"path": "/tests/karaoke_effects/lrc2ass_py3/README.md:1-41", "hash": "31debaa1e44d04387d24d2fae721abfd", "title": "Easy LRC to ASS Converter with Karaoke Effects (Python 3)"}, "1456": {"path": "/tests/karaoke_effects/lrc2ass_py3/README.md:42-72", "hash": "2dc0dcf68faf2c46a337fa31981e2aa8", "title": "LRC to ASS Converter: Features, Warnings & To-Do List"}, "1457": {"path": "/tests/karaoke_effects/lrc2ass_py3/localTest.sh", "hash": "7593a449769c5307e9aba0fe1d3dd4f8", "title": "Silent MPV Player with ASS Subtitle Issues"}, "1458": {"path": "/tests/karaoke_effects/lrc2ass_py3/test.sh", "hash": "149bef60b9f3708792a069684f7cfe27", "title": "Karaoke Subtitle Sync Issue"}, "1459": {"path": "/tests/karaoke_effects/lyricToAss_test.py", "hash": "e5f8906f89bc7fe65931cd224ec831d4", "title": "Generate Karaoke .ass File with Python"}, "1460": {"path": "/tests/karaoke_effects/pyonfx_test/first_try.py", "hash": "c04aafa6be7bb951e97860fb21c3e7fa", "title": "Modify ASS File with PyonFX"}, "1461": {"path": "/tests/karaoke_effects/pyonfx_test/macos_view_best_example.sh", "hash": "33a534ed459a7b130c09fa9c6693a1b8", "title": "Open ASS File with Karaoke Effects on Mac"}, "1462": {"path": "/tests/karaoke_effects/pyonfx_test/render_ass_video.sh", "hash": "f12779ef0d73b6ae6da1296d52d1ea97", "title": "Karaoke Effects Video Rendering"}, "1463": {"path": "/tests/karaoke_effects/pyonfx_test/test.py", "hash": "ac9fc8a8621b70a6036d4c295fd06d6b", "title": "Initializing LRC File and Importing Modules"}, "1464": {"path": "/tests/karaoke_effects/pyonfx_test/view_best_example.sh", "hash": "82cef2c41e0ab388d777b770f80229a0", "title": "Karaoke Subtitles with mpv Player"}, "1465": {"path": "/tests/karaoke_effects/starJumping.py", "hash": "2cad72174a9ed5a452329b65b5787d1c", "title": "Karaoke Star Jump Animation"}, "1466": {"path": "/tests/karaoke_effects/starJumping.py:1-14", "hash": "5c95ba87b680752863c6420be92fdf64", "title": "Star Jumping Karaoke Effects"}, "1467": {"path": "/tests/karaoke_effects/starJumping.py:16-53", "hash": "2fd12810daecedb6d60951c1672f8365", "title": "Star Jumping Effect Customization"}, "1468": {"path": "/tests/karaoke_effects/starJumping.py:54-85", "hash": "08657e9ca4a5ab3d3ed1f357ea5f736e", "title": "Star Jumping Karaoke Effect"}, "1469": {"path": "/tests/karaoke_effects/starJumping.py:86-122", "hash": "803d21857e4ca180524beea4615ff795", "title": "Star Jumping Karaoke Effect"}, "1470": {"path": "/tests/karaoke_effects/starJumping.py:123-152", "hash": "787370d6afb298ac54c4b1bca9f64e02", "title": "Star Jumping Karaoke Effect"}, "1471": {"path": "/tests/karaoke_effects/starJumping.py:153-186", "hash": "f557e5e40c5a01aac7b669bab791546e", "title": "Star-Jumping Karaoke Effect"}, "1472": {"path": "/tests/karaoke_effects/starJumping.py:187-221", "hash": "09834a3b370df2ec57969dbcaa7c90a8", "title": "Karaoke Star Jumping Effect"}, "1473": {"path": "/tests/karaoke_effects/starJumping.py:223-254", "hash": "441414ce81ff88f127c26068778a997a", "title": "Star Jumping Karaoke Animation"}, "1474": {"path": "/tests/karaoke_effects/starJumping.py:255-291", "hash": "288efb29033803c0f3eeb07809b1f8ab", "title": "Dynamic Text Effects in Karaoke Application"}, "1475": {"path": "/tests/karaoke_effects/starJumping.py:292-327", "hash": "57581282b7d2c44aaaa2c8a37b4a0eca", "title": "Star Jumping Karaoke Effect"}, "1476": {"path": "/tests/karaoke_effects/starJumping.py:328-365", "hash": "3d83791c4620b4f43b2bd76c6688ffe5", "title": "Karaoke Effects: Star Jumping Text"}, "1477": {"path": "/tests/karaoke_effects/starJumping.py:366-403", "hash": "f821fc42f1d612ccc78ce985a1da4519", "title": "Dynamic Line Alteration and Word Positioning"}, "1478": {"path": "/tests/karaoke_effects/starJumping.py:404-429", "hash": "0cc93bd86c62285f481fd69cb99f4d75", "title": "Star Jumping Karaoke Effect"}, "1479": {"path": "/tests/karaoke_effects/starJumping.py:430-460", "hash": "90cb1d836288e894d6f01a9f339dd95c", "title": "Karaoke Lyrics Modification Algorithm"}, "1480": {"path": "/tests/karaoke_effects/test_baidu_language_recognize.py", "hash": "66c416dc2979c8ec7e8d808db73ee49c", "title": "Baidu Language Recognition Test"}, "1481": {"path": "/tests/karaoke_effects/test_detect_different_language.py", "hash": "34f2d3839fcd8bdc3b1f13cede2918f6", "title": "Unreliable Multilingual Detection"}, "1482": {"path": "/tests/karaoke_effects/test_detect_different_language.py:1-36", "hash": "8dbf59c3402fffdfb921b59b85b6494c", "title": "Multi-Library Language Detection Instability"}, "1483": {"path": "/tests/karaoke_effects/test_detect_different_language.py:37-39", "hash": "da129428454684437f5cf00c18f9f956", "title": "Testing Chinese Language Detection"}, "1484": {"path": "/tests/karaoke_effects/test_pylrc.py", "hash": "3055970336371ccb9c02d3cf9ae18686", "title": "LRC Parser and Duration Calculator"}, "1485": {"path": "/tests/karaoke_effects/test_pylrc.py:1-43", "hash": "4afc9be2652531dda76e6d8adab6eabd", "title": "Parse Music Lyrics with Duration"}, "1486": {"path": "/tests/karaoke_effects/test_pylrc.py:45-73", "hash": "de31f265da4fee9b7f40a0dc465cfe49", "title": "Calculating Lyric Durations"}, "1487": {"path": "/tests/karaoke_effects/test_split_different_lang.py", "hash": "65f248783487d8e8318009b8b503ec3a", "title": "Multilingual Test Cases Translation"}, "1488": {"path": "/tests/karaoke_effects/test_split_different_lang.py:1-38", "hash": "f78cd4e8bc1ca44b4bd6aa9eb77a0995", "title": "Testing Translation of Multilingual Texts"}, "1489": {"path": "/tests/karaoke_effects/test_split_different_lang.py:39-40", "hash": "8fe82ad5dab9b497178b6c6d505878f4", "title": "Split Different Languages Test"}, "1490": {"path": "/tests/karaoke_effects/translator.yml", "hash": "f73e53d179f578a4ada289d0509b1732", "title": "Automatic Clash Translation with FastAPI"}, "1491": {"path": "/tests/karaoke_effects/translator.yml:1-24", "hash": "db5c8e1d745ca5b741091e609fd8f66c", "title": "Multi-Pane Translator Session with Proxies"}, "1492": {"path": "/tests/karaoke_effects/translator.yml:25-29", "hash": "ced3dd42436a0e25956d6511dc8e7a51", "title": "Automatic Clash Update via Python"}, "1493": {"path": "/tests/keepalive_service/install.sh", "hash": "7832b86a1d27dd8948eff3338a99a7c2", "title": "Installs Keepalive System-Wide"}, "1494": {"path": "/tests/keepalive_service/test.sh", "hash": "a1f4aac6ccc520c1f5c7073c76427452", "title": "Testing Keepalive Service Execution"}, "1495": {"path": "/tests/launch_test_enviroment.py", "hash": "d49c77eff8327ded48bd9926af5dd652", "title": "Launch Test Environment Setup"}, "1496": {"path": "/tests/launch_test_enviroment.py:1-34", "hash": "4199f764423cfc31e3584debb888a5fb", "title": "Launch and Change Directory with Program's Terminal"}, "1497": {"path": "/tests/launch_test_enviroment.py:35-70", "hash": "b9204df2cba93b7608597ae13a9e7bce", "title": "Automated Test Environment Launcher"}, "1498": {"path": "/tests/launch_test_enviroment.py:71-104", "hash": "6dccefe69953a6b60389fa61049ba068", "title": "Launching Multiple Services for Test Environment"}, "1499": {"path": "/tests/launch_test_enviroment.py:105-145", "hash": "38fda1a3eb5c8b4160f588943b918ae0", "title": "Iterative Program Launching Code"}, "1500": {"path": "/tests/launch_test_enviroment.py:146-147", "hash": "bca7a53ab21b3237eb4209f5c274e97c", "title": "Formatted Argument Printing and Breakpoint"}, "1501": {"path": "/tests/launch_test_enviroment.sh", "hash": "373f6e98ea5cefbdc8565d2c05649412", "title": "Shell Script for Test Environments"}, "1502": {"path": "/tests/launch_test_enviroment.sh:1-23", "hash": "b9e5feeb6185cfe835d76ac40a633d36", "title": "Multi-Environment Test Launcher"}, "1503": {"path": "/tests/launch_test_enviroment.sh:24-36", "hash": "e31171dfe168a96e21394b7df3f58b5c", "title": "Concurrent Test Execution via Terminal Instances"}, "1504": {"path": "/tests/medialang_reference/audiolang.mdl", "hash": "d327c13a8a1b7c01338e284ff7f34eb8", "title": "Media Processing Sequence with Voice Conversion"}, "1505": {"path": "/tests/medialang_reference/audiolang.mdl.j2", "hash": "7fb530ee71f663330f4f0135c4a3e63f", "title": "Media Sequence Generation with Adjustable Audio and Video"}, "1506": {"path": "/tests/medialang_reference/processor_demo.mdl", "hash": "ed0c44d234259f11ff5cfbff8d6e657d", "title": "Subtitle Detection and Playback Speed Control"}, "1507": {"path": "/tests/medialang_reference/processor_multi.mdl", "hash": "a74d277adb1637c402aedebe3e36d574", "title": "Video Pipeline with Subtitle and Region Detection"}, "1508": {"path": "/tests/medialang_reference/recursive_audiolang.mdl", "hash": "665e403a8794d68b48bc8d37c2d4f768", "title": "Recursive Audio Language Model Test"}, "1509": {"path": "/tests/medialang_reference/videolang.mdl", "hash": "74d502316e96d9daacdb7f6ab836c762", "title": "Dual Stream Media Playback"}, "1510": {"path": "/tests/microsoft_xiaobing_conversation_bing/chat_with_session_id.js", "hash": "8457abaac7a45426a96f1633b2f37383", "title": "Manage Xiaoice Chat Sessions with Delays and Errors"}, "1511": {"path": "/tests/microsoft_xiaobing_conversation_bing/chat_with_session_id.js:1-37", "hash": "e6b62b9c8d24f8058c2483e1fb4fa723", "title": "Utility Functions in Microsoft Bot Code"}, "1512": {"path": "/tests/microsoft_xiaobing_conversation_bing/chat_with_session_id.js:38-80", "hash": "abe6806bf8a652d4feaa1eadb696554f", "title": "Matrix Transformation Functions"}, "1513": {"path": "/tests/microsoft_xiaobing_conversation_bing/chat_with_session_id.js:81-113", "hash": "41643c272f4b8438000568f9a2414002", "title": "Decrypting Array with Positional Manipulation and XOR Operations"}, "1514": {"path": "/tests/microsoft_xiaobing_conversation_bing/chat_with_session_id.js:114-146", "hash": "84d07554cf8b4292de352ad0f060f3b8", "title": "Encryption Algorithm: Microsoft Xiaobing Conversation"}, "1515": {"path": "/tests/microsoft_xiaobing_conversation_bing/chat_with_session_id.js:147-186", "hash": "8ad45d1d72c65127e122147b4beb1fc0", "title": "Chunked Encoding Scheme Implementation"}, "1516": {"path": "/tests/microsoft_xiaobing_conversation_bing/chat_with_session_id.js:187-212", "hash": "be2289dd28086ce728fbbf1423fb82fd", "title": "Unicode Escaping Function and Number Sequence Array"}, "1517": {"path": "/tests/microsoft_xiaobing_conversation_bing/chat_with_session_id.js:213-237", "hash": "7e9b52fe3ad88dbb18af9ebe84af2db6", "title": "Bitmask Encrypted Arrays"}, "1518": {"path": "/tests/microsoft_xiaobing_conversation_bing/chat_with_session_id.js:238-274", "hash": "606465d64ed949e387e76c56ce42de92", "title": "Wait-Encrypt Message, Check Chat ID"}, "1519": {"path": "/tests/microsoft_xiaobing_conversation_bing/chat_with_session_id.js:275-288", "hash": "3a13e7163783c6435e02b1f3f8daf855", "title": "Sending POST Request to Bing Chat API"}, "1520": {"path": "/tests/microsoft_xiaobing_conversation_bing/chat_with_session_id.js:289-302", "hash": "98deb2505e946d19021d7b823ff0abe8", "title": "Replace \"\u5c0f\u51b0\" with \"\u5c0f\u59dd\" in API response"}, "1521": {"path": "/tests/microsoft_xiaobing_conversation_bing/chat_with_session_id.js:302-322", "hash": "dff91e2561cb668c7586120f22989533", "title": "Efficient Chatbot Response Check"}, "1522": {"path": "/tests/microsoft_xiaobing_conversation_bing/chat_with_session_id.js:323-347", "hash": "9e451707b8f30621632aae088acfeff5", "title": "Bing Chat ID Fetcher Function"}, "1523": {"path": "/tests/microsoft_xiaobing_conversation_bing/chat_with_session_id.js:348-354", "hash": "098485cec07a39d67f41646258acc75c", "title": "Setting HTTP Headers and Cookies for Web Requests"}, "1524": {"path": "/tests/microsoft_xiaobing_conversation_bing/chat_with_session_id.js:354-365", "hash": "ee11ce5d2051ea356ff59ff4d229bdcc", "title": "Bing GET Request Setup"}, "1525": {"path": "/tests/microsoft_xiaobing_conversation_bing/chat_with_session_id.js:367-401", "hash": "1990b255d578b348c5672453bdf8fc03", "title": "API Request Handler with Logging and Cookie Management"}, "1526": {"path": "/tests/microsoft_xiaobing_conversation_bing/chat_with_session_id.js:402-429", "hash": "189a256892a3241cf039c164e72b1c7c", "title": "Request Handler with Cookie Parsing"}, "1527": {"path": "/tests/microsoft_xiaobing_conversation_bing/chat_with_session_id.js:430-462", "hash": "6f44d35ef398a137b6875a4a6b1c6303", "title": "Setting Up a Chat Server"}, "1528": {"path": "/tests/microsoft_xiaobing_conversation_bing/chat_with_session_id.js:463-494", "hash": "568c74677f5b38107050fd00271617bc", "title": "Managing Xiaoice Chats: URL Handling and Response Sending"}, "1529": {"path": "/tests/microsoft_xiaobing_conversation_bing/chat_with_session_id.js:495-516", "hash": "3448c975b36e0905237832c00b7ae9f0", "title": "Server-side Request Tester"}, "1530": {"path": "/tests/microsoft_xiaobing_conversation_bing/test_curl_bing_search_normal_conversation_chitchat.sh", "hash": "855dbf4d77671cdf9c37acccc8a41b6b", "title": "CURL Bing Python Chat Test"}, "1531": {"path": "/tests/microsoft_xiaobing_conversation_bing/test_curl_bing_search_normal_conversation_chitchat.sh:1-6", "hash": "e747e023ce1b3532e10a347d327695f6", "title": "Curl for English Chatbot Conversation Fetch"}, "1532": {"path": "/tests/microsoft_xiaobing_conversation_bing/test_curl_bing_search_normal_conversation_chitchat.sh:6-6", "hash": "802a0446b02991c31a969a348162015e", "title": "Testing Bing Search with Curl and Python"}, "1533": {"path": "/tests/microsoft_xiaobing_conversation_bing/test_curl_bing_search_normal_conversation_chitchat.sh:6-17", "hash": "e7e330083ce9f24c039c8a329afac8a1", "title": "CURL Bing Search Request for Aiohttp Args"}, "1534": {"path": "/tests/microsoft_xiaobing_conversation_bing/test_curl_bing_search_normal_conversation_chitchat.sh:18-23", "hash": "7d48eeeb130f35ec22269c728c40faed", "title": "CURL Bing Search Chatbot Test Script"}, "1535": {"path": "/tests/microsoft_xiaobing_conversation_bing/xiaobing_server_keepalive.sh", "hash": "cf93b2f4c831628dded11436bf7e0fa6", "title": "Xiaobing Server Keepalive Script"}, "1536": {"path": "/tests/mitm_chatbot_framework/README.md", "hash": "c6b127f68ef2d12b2e9879e918b9a8f0", "title": "MITM Chatbot Framework"}, "1537": {"path": "/tests/mmd_human_dance_pose/test_detection_yolo.py", "hash": "75c9cbb10eb3d4c410547d232e8086bf", "title": "YOLOv5 Model Inference and Detection"}, "1538": {"path": "/tests/modify_package.sh", "hash": "410b79ca132a3fb37a2a63a337c096f3", "title": "Python Import Replacer Script"}, "1539": {"path": "/tests/motion_vector_estimation/mpegflow/init.sh", "hash": "d5938afa908d8766fbf631f0317ab5a9", "title": "Motion Vector Estimation Test with mpegflow"}, "1540": {"path": "/tests/motion_vector_estimation/mpegflow/test.sh", "hash": "b251c506ee612ad917ebe978cd53a773", "title": "Fake .so, Real Alternatives"}, "1541": {"path": "/tests/motion_vector_estimation/optical_flow_colored_blocks_convolution.py", "hash": "842230b15b635b14413c45ecba8d9242", "title": "Motion Vector Estimation with OpenCV"}, "1542": {"path": "/tests/motion_vector_estimation/optical_flow_colored_blocks_convolution.py:1-22", "hash": "e0bed96e75bcbd5f113cfe89335a8b4b", "title": "Motion Vector Convolution Optical Flow"}, "1543": {"path": "/tests/motion_vector_estimation/optical_flow_colored_blocks_convolution.py:24-70", "hash": "161a4d5743a1efd5c22fd9969dbe9147", "title": "Motion Vector Estimation Setup"}, "1544": {"path": "/tests/motion_vector_estimation/optical_flow_colored_blocks_convolution.py:72-106", "hash": "219663f7ed8604ada0fd681f5c5b241f", "title": "VideoCap Macroblock Detection and Error Handling"}, "1545": {"path": "/tests/motion_vector_estimation/optical_flow_colored_blocks_convolution.py:107-142", "hash": "dab9761b203a70fbf9eb447da9fcff63", "title": "Optical Flow: Block Weight Calculation"}, "1546": {"path": "/tests/motion_vector_estimation/optical_flow_colored_blocks_convolution.py:143-164", "hash": "98a36b904e8493ed883cd108a769471a", "title": "Horizontal Motion Vector Filter"}, "1547": {"path": "/tests/motion_vector_estimation/optical_flow_colored_blocks_convolution.py:165-184", "hash": "a200b0ce4d29008593415ffe159d985a", "title": "Scaling and Stacking for Motion Vector Restoration"}, "1548": {"path": "/tests/motion_vector_estimation/optical_flow_colored_blocks_convolution.py:185-206", "hash": "6cf7645e59cddb0b18f740a50fc140a0", "title": "Motion Vector Extraction and Processing"}, "1549": {"path": "/tests/motion_vector_estimation/optical_flow_colored_blocks_convolution.py:207-230", "hash": "7e57bf28093b4998e91ef031d21018c5", "title": "Motion Vector Dictionary Builder"}, "1550": {"path": "/tests/motion_vector_estimation/optical_flow_colored_blocks_convolution.py:231-254", "hash": "c51a2ccc0871e63eeb0c104b5225fc86", "title": "Motion Vector Filtering and Averaging"}, "1551": {"path": "/tests/motion_vector_estimation/optical_flow_colored_blocks_convolution.py:255-278", "hash": "e3bca75a2fbb55d661c020fa8b4003eb", "title": "Motion Vector Filtration and Weighting"}, "1552": {"path": "/tests/motion_vector_estimation/optical_flow_colored_blocks_convolution.py:279-301", "hash": "31aed34a4278b801c1f7ae1538568ff8", "title": "Motion Vector Average Calculator"}, "1553": {"path": "/tests/motion_vector_estimation/optical_flow_colored_blocks_convolution.py:302-328", "hash": "dfb55143a46f066beb56df28bc95bc79", "title": "Weighted Average Motion Vectors"}, "1554": {"path": "/tests/motion_vector_estimation/optical_flow_colored_blocks_convolution.py:329-346", "hash": "4d98908e1ce1907542a0e63b5ee99733", "title": "Weighted Motion Vector Calculation"}, "1555": {"path": "/tests/motion_vector_estimation/optical_flow_colored_blocks_convolution.py:347-369", "hash": "752e49c66277c18763395c24e6a16eb6", "title": "Motion Vector Check and Masking"}, "1556": {"path": "/tests/motion_vector_estimation/optical_flow_colored_blocks_convolution.py:370-388", "hash": "a8bebfd023e8a667c09828dff95379e3", "title": "Motion Vector Rectangle Drawing"}, "1557": {"path": "/tests/motion_vector_estimation/optical_flow_colored_blocks_convolution.py:389-419", "hash": "67a1983f1329a671139bfb8bb5710e2c", "title": "Motion Analysis with Image Processing"}, "1558": {"path": "/tests/motion_vector_estimation/optical_flow_colored_blocks_convolution.py:420-449", "hash": "48e1baab68a6dd6462edd44bcac88807", "title": "Multi-Set Data Plotting Script"}, "1559": {"path": "/tests/motion_vector_estimation/run.sh", "hash": "9ed106922c3dc65429de47241dc0106a", "title": "Dockerize Motion Vector Extraction"}, "1560": {"path": "/tests/motion_vector_estimation/test.py", "hash": "f345de0d94a512c94d96b802ee7d9568", "title": "Motion Vector Estimation and Plotting"}, "1561": {"path": "/tests/motion_vector_estimation/test.py:1-25", "hash": "5e31c032f04fa9981b566512779c02a2", "title": "Motion Vector Estimation Testing\nTitle: Motion Vector Test"}, "1562": {"path": "/tests/motion_vector_estimation/test.py:26-75", "hash": "c0eb218ef73f16f7eeef70dcb1c4095f", "title": "Motion Vector Estimation Initialization"}, "1563": {"path": "/tests/motion_vector_estimation/test.py:76-107", "hash": "205068231cd6287b92e919ffe1d29f1b", "title": "Block Center Coordinates Handling Functions"}, "1564": {"path": "/tests/motion_vector_estimation/test.py:108-140", "hash": "41dd864ad74b119e00d3a1c07601a256", "title": "Average Motion Vectors Function"}, "1565": {"path": "/tests/motion_vector_estimation/test.py:142-163", "hash": "69d41e5d17027e5e9894bd313a2af09d", "title": "Motion Vector Estimation and Processing"}, "1566": {"path": "/tests/motion_vector_estimation/test.py:164-184", "hash": "ab18d3f498090cd370cb05a38625a362", "title": "Restoring Motion Vectors in Test Py Snippet"}, "1567": {"path": "/tests/motion_vector_estimation/test.py:185-208", "hash": "e7d544f1fc339701dae952cbc96cb2c0", "title": "Motion Vector Estimation Scale Issue"}, "1568": {"path": "/tests/motion_vector_estimation/test.py:209-232", "hash": "8a240f2e7e38075cb08f51995fb7f14f", "title": "Skip Zero Motion Vectors"}, "1569": {"path": "/tests/motion_vector_estimation/test.py:233-257", "hash": "015f252a596031a49d647938b8b8ebe3", "title": "Motion Vector Estimation Test"}, "1570": {"path": "/tests/motion_vector_estimation/test.py:258-279", "hash": "013a6b3dba64d5efce97608305c563ab", "title": "Weighted Motion Vector Calculation"}, "1571": {"path": "/tests/motion_vector_estimation/test.py:280-304", "hash": "2cc98c8fc47836e062e25b1ee43e5300", "title": "Weighted Motion Vector Calculation"}, "1572": {"path": "/tests/motion_vector_estimation/test.py:305-329", "hash": "f39a8287d5c3f30d96d37496b12b0cc6", "title": "Average Motion Vector Calculator"}, "1573": {"path": "/tests/motion_vector_estimation/test.py:330-348", "hash": "24dbd5ee6604a3b67974727135772d27", "title": "Motion Vector Estimation and Area Ratio"}, "1574": {"path": "/tests/motion_vector_estimation/test.py:349-369", "hash": "73c7e652c62e6d17f3f6e142935d2130", "title": "Motion Vector Metrics Calculation and Masking"}, "1575": {"path": "/tests/motion_vector_estimation/test.py:370-388", "hash": "f58e8056776069751d15981acccbabb3", "title": "Motion Vector Estimation and Display"}, "1576": {"path": "/tests/motion_vector_estimation/test.py:389-419", "hash": "6bae738b568018996be087473bab181f", "title": "Motion Vector Estimation and Plotting"}, "1577": {"path": "/tests/motion_vector_estimation/test.py:420-444", "hash": "39dfeda56ff564aca0243a12a65733cc", "title": "Matplotlib Data Plotting and Titling"}, "1578": {"path": "/tests/motion_vector_estimation/test.sh", "hash": "a156817bb0775c8373561bc1d45f62ab", "title": "Motion Vector Estimation Test"}, "1579": {"path": "/tests/moviepy_loop_video_till_target/loop_till_target.py", "hash": "513ac8634dc52f623bb23f3d447f5b77", "title": "Loop Video to Target Duration"}, "1580": {"path": "/tests/moviepy_loop_video_till_target/loop_till_target.py:1-47", "hash": "54bf1fba05d6ee1c8bebfca6fba366de", "title": "Loop Video Until Target Duration Met"}, "1581": {"path": "/tests/moviepy_loop_video_till_target/loop_till_target.py:48-82", "hash": "58f63023623e6d16c938864398a33af5", "title": "Reversible Video Looping"}, "1582": {"path": "/tests/moviepy_loop_video_till_target/loop_till_target.py:83-116", "hash": "ca813388d6e3fd330606ae00b45ebec6", "title": "Video Looping until Target Duration"}, "1583": {"path": "/tests/moviepy_loop_video_till_target/loop_till_target.py:117-128", "hash": "5b56d5abbd400c58c5d8bd120790f61a", "title": "Initializing Parser and Asserting Flags"}, "1584": {"path": "/tests/moviepy_loop_video_till_target/test.py", "hash": "4309d09a09894eb9495fffe00b8d67e1", "title": "Test Loop Till Target"}, "1585": {"path": "/tests/music_analysis/bpm_tracking/test_audioowl.py", "hash": "4197f32536c19cf2f01d980e47bbaaf9", "title": "BPM Tracking with AudioOwl"}, "1586": {"path": "/tests/music_analysis/bpm_tracking/test_audioowl.py:1-30", "hash": "4f1a0118eabc02226f934cdbd4be3a56", "title": "BPM Tracking with AudioOwl"}, "1587": {"path": "/tests/music_analysis/bpm_tracking/test_audioowl.py:31-69", "hash": "44966517e3ed269f7ed90625b83253f7", "title": "Even Beat Slicing and BPM Detection"}, "1588": {"path": "/tests/music_analysis/bpm_tracking/test_audioowl.py:70-78", "hash": "31973f4210af5d441c53b85262d3dae5", "title": "Finding Closest Beat Time"}, "1589": {"path": "/tests/music_analysis/download_exciting_bgm_with_lyric.py", "hash": "b3140c9b23fe72d17c231e53bbbb0914", "title": "BGM Downloader with Lyrics"}, "1590": {"path": "/tests/music_analysis/download_exciting_bgm_with_lyric.py:1-23", "hash": "58aaa1dc08ea1e2c6f64657328cad4fd", "title": "Download Exciting BGMs with Lyrics API"}, "1591": {"path": "/tests/music_analysis/download_exciting_bgm_with_lyric.py:24-55", "hash": "3124c8a791ce5f27dc8751f8b2c00951", "title": "GET Request for Song Details"}, "1592": {"path": "/tests/music_analysis/download_exciting_bgm_with_lyric.py:56-82", "hash": "925294d40181b1c0692ccc2d6d92b581", "title": "Song Download and Analysis"}, "1593": {"path": "/tests/music_analysis/download_exciting_bgm_with_lyric.py:83-99", "hash": "8b5680e2003205fd7758c7a19b944cde", "title": "Download and Analyze Exciting_BGM File"}, "1594": {"path": "/tests/music_analysis/lyric_change_detector/download_lyric.sh", "hash": "768dd2440e67f97352fdf5bd6b6ac89d", "title": "Download LRC Lyrics Script"}, "1595": {"path": "/tests/music_analysis/lyric_change_detector/extract_lyrics_from_netease_json.py", "hash": "b861a36ff7466e69483f3001b44f1eb8", "title": "Lyric Extractor from JSON to LRC"}, "1596": {"path": "/tests/music_analysis/lyric_change_detector/launch_lyric_api_server.sh", "hash": "6961bf78b81845e2bd23a85b1d9842fd", "title": "Launch Music API Server"}, "1597": {"path": "/tests/music_analysis/lyric_change_detector/read_lyrics.py", "hash": "00412835c9e78a38a3a0429446a32e4c", "title": "Read LRC Lyrics with Pylrc"}, "1598": {"path": "/tests/nearly_duplicate_frames_detection_removal/fast_vqa_test.sh", "hash": "79dab7a98954ea06c06f9dbb358a0bb0", "title": "K-NN Based Nearly Duplicate Detection"}, "1599": {"path": "/tests/nearly_duplicate_frames_detection_removal/knn_similar_color_extraction.py", "hash": "c842cf03e6675ecc20c5cffcb4867793", "title": "Clustering Image Centrality with OpenCV, cv2, and MiniBatchKMeans"}, "1600": {"path": "/tests/nearly_duplicate_frames_detection_removal/knn_similar_color_extraction.py:1-35", "hash": "71b54aa5df2ae29a73f893d17996a1cd", "title": "Image Centrality and Coordinate Issues"}, "1601": {"path": "/tests/nearly_duplicate_frames_detection_removal/knn_similar_color_extraction.py:36-75", "hash": "193a4cb59632cf89f389a8723012cb92", "title": "Duplicate Frame Detection and Removal Tool"}, "1602": {"path": "/tests/nearly_duplicate_frames_detection_removal/knn_similar_color_extraction.py:76-119", "hash": "d731652b4586cccd2867d0b40795ca14", "title": "Random Color Sampling for Clustering"}, "1603": {"path": "/tests/nearly_duplicate_frames_detection_removal/knn_similar_color_extraction.py:120-161", "hash": "5536560f2aa00dad12b301b7d44947da", "title": "Clustering and Labeling for Nearly Duplicate Frames"}, "1604": {"path": "/tests/nearly_duplicate_frames_detection_removal/knn_similar_color_extraction.py:162-185", "hash": "3a056dcf151e01319c10e439a45b928c", "title": "KNN Similar Color Frame Percentages"}, "1605": {"path": "/tests/nearly_duplicate_frames_detection_removal/knn_spatial_similar_color_extraction.py", "hash": "dc67e45361eda40992f19be3ba87b61c", "title": "Centrality Threshold Testing for Near-Duplicate Frames"}, "1606": {"path": "/tests/nearly_duplicate_frames_detection_removal/knn_spatial_similar_color_extraction.py:1-35", "hash": "f3157a4830877953f9e097b0831a3554", "title": "Nearly Duplicate Frame Detection"}, "1607": {"path": "/tests/nearly_duplicate_frames_detection_removal/knn_spatial_similar_color_extraction.py:36-76", "hash": "605ef82b9b7155393f4701541ec09962", "title": "Duplicate Frame Detection via Centrality Calculation"}, "1608": {"path": "/tests/nearly_duplicate_frames_detection_removal/knn_spatial_similar_color_extraction.py:77-123", "hash": "24824f88d8fa41f9fb9df35f90db446a", "title": "Spatial Coordinate-Based Color Extraction"}, "1609": {"path": "/tests/nearly_duplicate_frames_detection_removal/knn_spatial_similar_color_extraction.py:124-165", "hash": "4f62692c21e87825fde3b3d152ee104b", "title": "KMeans Clustering for Near-Duplicate Frames"}, "1610": {"path": "/tests/nearly_duplicate_frames_detection_removal/knn_spatial_similar_color_extraction.py:166-195", "hash": "ab4685b42d3b3fe3a2016dc1ff4a0da3", "title": "Centrality Metrics Calculator"}, "1611": {"path": "/tests/nearly_duplicate_frames_detection_removal/pyav_effective_fps.py", "hash": "084dfdf23aabadd364a528827cfee66e", "title": "Keyframe Percentage Calculator with Python"}, "1612": {"path": "/tests/nearly_duplicate_frames_detection_removal/test.py", "hash": "2627d378f31ddc39e419fe1f01fa536e", "title": "Video Analysis with Scene Detection"}, "1613": {"path": "/tests/nearly_duplicate_frames_detection_removal/test.py:1-28", "hash": "afeee14c5fa7dc758013fd3279346322", "title": "No Scene Changes Detected"}, "1614": {"path": "/tests/nearly_duplicate_frames_detection_removal/test.py:30-32", "hash": "5337f1d96cb3e5ffa01c704bca4afec7", "title": "Pandas CSV Data Frame Printing and Debugging"}, "1615": {"path": "/tests/neo4j_cypher_builder_template_why_you_suddenly_want_to_create_exceptions_and_find_solutions_to_hot_fix_reloading_and_edit_and_continue/babel_decorator.js", "hash": "c5fdd23df555062bbd6b396af268b7f3", "title": "Babel Decorator: Logging Arguments"}, "1616": {"path": "/tests/neo4j_cypher_builder_template_why_you_suddenly_want_to_create_exceptions_and_find_solutions_to_hot_fix_reloading_and_edit_and_continue/cypher_inline.js", "hash": "6132cbff2bdc376fb097206bb6d47e2d", "title": "Inline Cypher Functions: Debugging Issues and Logging"}, "1617": {"path": "/tests/neo4j_cypher_builder_template_why_you_suddenly_want_to_create_exceptions_and_find_solutions_to_hot_fix_reloading_and_edit_and_continue/cypher_inline.js:2-28", "hash": "4774e76e40dcffb2975bef9cd9504390", "title": "Dynamic SQL Statements with Cypher and Template Literals"}, "1618": {"path": "/tests/neo4j_cypher_builder_template_why_you_suddenly_want_to_create_exceptions_and_find_solutions_to_hot_fix_reloading_and_edit_and_continue/cypher_inline.js:29-71", "hash": "c92aa78b296a45d47502c751e45ed846", "title": "Interdependent Functions in Query Class"}, "1619": {"path": "/tests/neo4j_cypher_builder_template_why_you_suddenly_want_to_create_exceptions_and_find_solutions_to_hot_fix_reloading_and_edit_and_continue/cypher_inline.js:72-80", "hash": "41a80bd0f99ef33dc466bce605286350", "title": "Inconsistent Static Functions and Logged Undefined Variables"}, "1620": {"path": "/tests/neo4j_cypher_builder_template_why_you_suddenly_want_to_create_exceptions_and_find_solutions_to_hot_fix_reloading_and_edit_and_continue/hy_repl_normal.py", "hash": "1a5d489785bac13c34fc6565dc371f9f", "title": "Intro to HyREPL Usage"}, "1621": {"path": "/tests/neo4j_cypher_builder_template_why_you_suddenly_want_to_create_exceptions_and_find_solutions_to_hot_fix_reloading_and_edit_and_continue/mtest.py", "hash": "89529863a225d6cb70c38edcb5c66781", "title": "Creating Exceptions for Hot Fixes"}, "1622": {"path": "/tests/neo4j_cypher_builder_template_why_you_suddenly_want_to_create_exceptions_and_find_solutions_to_hot_fix_reloading_and_edit_and_continue/my_module/some_module.py", "hash": "c3de0f435854c662e567d08705b7b096", "title": "Hot-Fix Reloading through Exception Handling"}, "1623": {"path": "/tests/neo4j_cypher_builder_template_why_you_suddenly_want_to_create_exceptions_and_find_solutions_to_hot_fix_reloading_and_edit_and_continue/sql_inline.py", "hash": "cead46b9903d338d2ac8c759e2e594f6", "title": "SQL Queries with Chalk Library"}, "1624": {"path": "/tests/neo4j_cypher_builder_template_why_you_suddenly_want_to_create_exceptions_and_find_solutions_to_hot_fix_reloading_and_edit_and_continue/thread_based_program.py", "hash": "13748960bb3a2197fdaa03526e5c3dc5", "title": "Multithreaded Event-Driven Python Programming"}, "1625": {"path": "/tests/neo4j_cypher_builder_template_why_you_suddenly_want_to_create_exceptions_and_find_solutions_to_hot_fix_reloading_and_edit_and_continue/thread_based_program.py:1-35", "hash": "d9e4503ddbb88ed8bce3ddfaba68736e", "title": "Multithreaded Event-Driven Python Program"}, "1626": {"path": "/tests/neo4j_cypher_builder_template_why_you_suddenly_want_to_create_exceptions_and_find_solutions_to_hot_fix_reloading_and_edit_and_continue/thread_based_program.py:36-37", "hash": "586aa22be84260264c70bb8202ffb17e", "title": "Promise Frustrations in Node.js"}, "1627": {"path": "/tests/nsfw_violence_drug_detection/README.md", "hash": "bca1a03a9b8c34eac8e0f99489f5168c", "title": "Automatic NSFW Video Censorship"}, "1628": {"path": "/tests/nsfw_violence_drug_detection/init_nsfwjs.sh", "hash": "b10f00032c929b13ac4d1cd1d24e8036", "title": "Initializing Global Dependencies"}, "1629": {"path": "/tests/nsfw_violence_drug_detection/launch_nodejs_server.sh", "hash": "a31a8cedd523c2245cabc8421e4e533e", "title": "Launching Node.js Nsfw Detection Tests"}, "1630": {"path": "/tests/nsfw_violence_drug_detection/nsfwjs_gif.js", "hash": "738de1e95863f1dd1d7349570d99cca1", "title": "Nsfwjs Gif Nsfw Violence Drug Detection"}, "1631": {"path": "/tests/nsfw_violence_drug_detection/nsfwjs_gif.js:1-27", "hash": "44d2165589ed31300a37cd766564045d", "title": "NSFW Detection in GIFs"}, "1632": {"path": "/tests/nsfw_violence_drug_detection/nsfwjs_gif.js:29-64", "hash": "4be4fa699e810606a1a0e73fb4dfa537", "title": "Efficient GIF Classification via Streaming Model"}, "1633": {"path": "/tests/nsfw_violence_drug_detection/nsfwjs_gif.js:65-73", "hash": "9d83778921f2e074f2b3e2367b0cba90", "title": "Streaming Data Chunks for Partial Processing"}, "1634": {"path": "/tests/nsfw_violence_drug_detection/nsfwjs_test.js", "hash": "786c6e840e29109e129fbf40aa08987e", "title": "NSFW Violence and Drug Detection Tool"}, "1635": {"path": "/tests/nsfw_violence_drug_detection/nsfwjs_test.js:1-22", "hash": "caace6df079c6222f42143d8dfcee83f", "title": "Create Color Mask from Four Parameters"}, "1636": {"path": "/tests/nsfw_violence_drug_detection/nsfwjs_test.js:23-48", "hash": "6fec85b2bd5d6df072089a2ea4756547", "title": "BmpDecoder Constructor and parseHeader Function"}, "1637": {"path": "/tests/nsfw_violence_drug_detection/nsfwjs_test.js:49-74", "hash": "76eefb0312c4b7aeab08d8b3e5294043", "title": "BMP File Header Parsing"}, "1638": {"path": "/tests/nsfw_violence_drug_detection/nsfwjs_test.js:75-100", "hash": "b0308b11bedcc57ca9e141cde58dd601", "title": "Header-Type Aware Mask Assignment"}, "1639": {"path": "/tests/nsfw_violence_drug_detection/nsfwjs_test.js:101-123", "hash": "a2709df2e43707ac6360b8632c4ffdf6", "title": "Handling Bitmap Headers in File Formats"}, "1640": {"path": "/tests/nsfw_violence_drug_detection/nsfwjs_test.js:124-159", "hash": "979081c19bcf625dd7ea95a5268ae5c7", "title": "Variable Initialization and Adjustment"}, "1641": {"path": "/tests/nsfw_violence_drug_detection/nsfwjs_test.js:160-185", "hash": "90c473fcdf72f0573c8460f7448e81d7", "title": "Converting Image Data to RGBA Format"}, "1642": {"path": "/tests/nsfw_violence_drug_detection/nsfwjs_test.js:186-209", "hash": "c60e040e0eae0ab394662a0a99479711", "title": "Image Metadata Processing Algorithm"}, "1643": {"path": "/tests/nsfw_violence_drug_detection/nsfwjs_test.js:210-230", "hash": "b21dcb1cc0e7e768a9ed22040bb4e8e3", "title": "Image Encoding and Decoding Code"}, "1644": {"path": "/tests/nsfw_violence_drug_detection/nsfwjs_test.js:231-254", "hash": "2011f00c8a416c1ef48e0e4e956fc3a4", "title": "Image Region Scanning and Padding Update"}, "1645": {"path": "/tests/nsfw_violence_drug_detection/nsfwjs_test.js:255-282", "hash": "c0ad3f6af9f88077e43df8e724fdd448", "title": "RLE8 Image Decoding Algorithm"}, "1646": {"path": "/tests/nsfw_violence_drug_detection/nsfwjs_test.js:283-307", "hash": "5eab6e395b5c0d0b7609531b5e474262", "title": "Image Pixel Processing Algorithm"}, "1647": {"path": "/tests/nsfw_violence_drug_detection/nsfwjs_test.js:308-331", "hash": "9e0bd6a36cdb49f6d048b91da468393a", "title": "Pixel Processing Algorithm"}, "1648": {"path": "/tests/nsfw_violence_drug_detection/nsfwjs_test.js:332-355", "hash": "b7f574ace1fb0d0035ded45a49705773", "title": "Image Processing Library Functions"}, "1649": {"path": "/tests/nsfw_violence_drug_detection/nsfwjs_test.js:356-386", "hash": "0e38c57420b8e4e2b1d05f187ad84a4a", "title": "Image Processing Class in Node.js"}, "1650": {"path": "/tests/nsfw_violence_drug_detection/nsfwjs_test.js:387-423", "hash": "fcaf55a13b80237ecfd9f993858a4882", "title": "Image Conversion and Loading"}, "1651": {"path": "/tests/nsfw_violence_drug_detection/nsfwjs_test.js:424-452", "hash": "307b1881fa56fba615fe7db54312d039", "title": "Image to TensorFlow Tensor3D Array Function"}, "1652": {"path": "/tests/nsfw_violence_drug_detection/nsfwjs_test.js:453-475", "hash": "5c2bb79adbdb946615365e11578ac5e7", "title": "Image Classifier: GIF Detection and Conversion"}, "1653": {"path": "/tests/nsfw_violence_drug_detection/nsfwjs_test.js:476-491", "hash": "0d94bb009937522ccc50a507bc0a37a1", "title": "NSFW Content Detection Server"}, "1654": {"path": "/tests/nsfw_violence_drug_detection/nsfwjs_test.mjs", "hash": "9d59279bba6b56277a98eae442a2d1ca", "title": "NSFW Image Detection App Setup"}, "1655": {"path": "/tests/nsfw_violence_drug_detection/nsfwjs_test.mjs:1-40", "hash": "92dffc7e7e214ff9c64d150ca9ff68e2", "title": "NSFWJS: Image Processing and Detection"}, "1656": {"path": "/tests/nsfw_violence_drug_detection/nsfwjs_test.mjs:41-68", "hash": "976565e7dccc5de2b0d445a863b5dc86", "title": "TensorFlow NodeJS Image Processing"}, "1657": {"path": "/tests/nsfw_violence_drug_detection/nsfwjs_test.mjs:69-89", "hash": "f54d0107596f4e77be2c09f1f0e2cdf9", "title": "Nsfw Detection: Image Classification and GIF Handling"}, "1658": {"path": "/tests/nsfw_violence_drug_detection/nsfwjs_test.mjs:91-109", "hash": "e85093fa9f4132554aeab68089c9542c", "title": "NSFW Image Detection Server"}, "1659": {"path": "/tests/nsfw_violence_drug_detection/porndetect_test.sh", "hash": "bbb14a923b6340dcb8477a67eb494bd2", "title": "BMP Decoder Error Test"}, "1660": {"path": "/tests/nsfw_violence_drug_detection/post_jpg_to_nsfwjs.sh", "hash": "ecb707142db7ef98ac78734c5d059f2d", "title": "Testing NSFW Detection API with Various Image Formats"}, "1661": {"path": "/tests/optical_flow/mmof_test/execute_me.py", "hash": "cb36d5a6c24037b821efb55bb95294f8", "title": "Interactive MMFlow Optical Flow Demo"}, "1662": {"path": "/tests/optical_flow/mmof_test/execute_me.py:1-35", "hash": "026f73bba00e28a557bcbf8938176b2d", "title": "MMFlow Optical Flow Video Processing"}, "1663": {"path": "/tests/optical_flow/mmof_test/execute_me.py:36-42", "hash": "60d71c80967d62f5bc34759ef4addb80", "title": "Optical Flow Map Visualization"}, "1664": {"path": "/tests/optical_flow/mmof_test/get_frame_flow.py", "hash": "4954f3a32650ebe174c7859430eace19", "title": "Frame Extractor from Video File"}, "1665": {"path": "/tests/optical_flow/nvidia_common.py", "hash": "691f0d5999e3bee393f6b4596beb6a13", "title": "Setting OpenCV Path for Turing Architecture"}, "1666": {"path": "/tests/optical_flow/nvidia_of_test.py", "hash": "48a90ed10d7cb2f7cb989ca26470f009", "title": "Optical Flow GPU Visualization"}, "1667": {"path": "/tests/optical_flow/nvidia_of_test.py:1-36", "hash": "c6cd02589555b6157fb028d09004c7ac", "title": "GPU-accelerated Optical Flow Processing"}, "1668": {"path": "/tests/optical_flow/nvidia_of_test.py:37-53", "hash": "e67e35c3c4332e69c759c80cec7d60f4", "title": "GPU Optical Flow Visualization"}, "1669": {"path": "/tests/optical_flow/sparse_cpu.py", "hash": "1b102843c26f0f5ee531d86aa3e5ba92", "title": "Sparse Optical Flow Tracking with Flownet2"}, "1670": {"path": "/tests/optical_flow/sparse_cpu.py:1-37", "hash": "da3c3e96b43c43bc2c1d6b170b767bc3", "title": "App Object Initialization and Video Reading"}, "1671": {"path": "/tests/optical_flow/sparse_cpu.py:38-58", "hash": "911357bae66ba6640a2fc2aa16231857", "title": "Optical Flow Tracking with PyrLK Algorithm"}, "1672": {"path": "/tests/optical_flow/sparse_cpu.py:59-74", "hash": "4b5cf2a825c7931d7b63191a86163e59", "title": "Optical Flow Tracking and Displacement Measurement"}, "1673": {"path": "/tests/optical_flow/sparse_cpu.py:75-98", "hash": "f9da152b0009ffc7f51080855b97adf2", "title": "Sparse Optical Flow Tracking"}, "1674": {"path": "/tests/optical_flow/sparse_cpu.py:99-117", "hash": "76923d5e30fbdcc3fe07590c773ecf51", "title": "Sparse Optical Flow Tracking"}, "1675": {"path": "/tests/optical_flow/sparse_cpu.py:118-151", "hash": "86ffd9a4050ccc423696a80798c98c07", "title": "Video Optical Flow Estimation"}, "1676": {"path": "/tests/patch_requests_timeout/client.py", "hash": "49fa8e934475ea46c5952ec9f91e30f9", "title": "Default Timeout for Requests"}, "1677": {"path": "/tests/patch_requests_timeout/server.py", "hash": "6eb0f5641aed31e7ce758238c79f2d30", "title": "FastAPI Hello Server with Delay"}, "1678": {"path": "/tests/post_numpy_array/client.py", "hash": "8f393be8ebfe7e41039e6f3def1da1fa", "title": "Send Numpy Array via POST Request"}, "1679": {"path": "/tests/post_numpy_array/server.py", "hash": "86af5141e4423685f3a1e510ea071c91", "title": "Non-Blocking Image Validator Server"}, "1680": {"path": "/tests/post_numpy_array/server.py:2-39", "hash": "a460cc0da3a14bd1a86d2e6824572730", "title": "FastAPI Image Server: Good or Bad"}, "1681": {"path": "/tests/post_numpy_array/server.py:39-46", "hash": "41d81d647637d176d55e145a9577ab7d", "title": "Uvicorn Server Multitasking"}, "1682": {"path": "/tests/pyidm_yd_dlp_download_manager_multithread/test.py", "hash": "3ebae888952b5d761e24ec85fc34418f", "title": "Multi-Library Download Manager"}, "1683": {"path": "/tests/qq_go_cqhttp/build.sh", "hash": "9e62de6073e5fd6d5f6a25e751ebfc3d", "title": "Compiling Go-CQHTTP"}, "1684": {"path": "/tests/qq_go_cqhttp/launch.sh", "hash": "21723a23178e9f9761d4e3b8136df750", "title": "Starts CQHTTP Bot"}, "1685": {"path": "/tests/qq_go_cqhttp/tests/download_group_files.py", "hash": "3925e4a02aead0597919389313d84fd2", "title": "QQ Group Files Downloader Tool"}, "1686": {"path": "/tests/qq_go_cqhttp/tests/download_group_files.py:1-34", "hash": "f5813cf7c2f2b97c64775282e4cdd80f", "title": "Test CQHTTP Connectivity with Go"}, "1687": {"path": "/tests/qq_go_cqhttp/tests/download_group_files.py:36-77", "hash": "131a00c05ce6282150c2f89769a32700", "title": "Group File Download and Verification Function"}, "1688": {"path": "/tests/qq_go_cqhttp/tests/download_group_files.py:78-109", "hash": "876df194382a3d9000a6156773901e81", "title": "Recursive Group File Download and Directory Creation"}, "1689": {"path": "/tests/qq_go_cqhttp/tests/download_group_files.py:111-134", "hash": "81e6a8b733d6c1eb942da1b3ddc1da79", "title": "QQ Group File Downloader"}, "1690": {"path": "/tests/qq_go_cqhttp/tests/download_group_files.py:137-159", "hash": "6ec38470f9332f5f17103b5a5d8343ea", "title": "QQ Group File Downloader Function"}, "1691": {"path": "/tests/qq_share_autojs/account_management.sh", "hash": "ebe7e58aea0c136eea2f7b73b78c934e", "title": "MobileQQ Account Management Activity Launch"}, "1692": {"path": "/tests/qq_share_autojs/adb_autox_launch.sh", "hash": "7e31aa9aa1fd3e6ca46808ce44d69ff9", "title": "Adb AutoJS QQ Share Launch"}, "1693": {"path": "/tests/qq_share_autojs/adb_check_lock.sh", "hash": "a0bfe004c82ac97f8df4d6c12ff94f83", "title": "Adb Lock Checker"}, "1694": {"path": "/tests/qq_share_autojs/adb_unlock.sh", "hash": "86f3513142ff035ef1c17ce436d3c5b0", "title": "ADB-Controlled Android Simulation"}, "1695": {"path": "/tests/qq_share_autojs/appium_test.py", "hash": "bcc9d15c37dc9b620d17d70138c54cb2", "title": "Appium Test for Android: Launch Settings & Click Battery"}, "1696": {"path": "/tests/qq_share_autojs/appium_unlock_phone.py", "hash": "133bc6a7285965d034a13f3c968e01b6", "title": "Appium Unlock Android Phone Test"}, "1697": {"path": "/tests/qq_share_autojs/autojs_scripts/qq_account_switch.js", "hash": "d2f2829ea9f3802d26f46c63d007464e", "title": "QQ Account Switch: Starting com.tencent.mobileqq"}, "1698": {"path": "/tests/qq_share_autojs/autojs_scripts/qq_share_auto.js", "hash": "f769ddf33a6fb39d41cc5ffb0e2d4108", "title": "QQ Share AutoJS Script"}, "1699": {"path": "/tests/qq_share_autojs/autojs_scripts/qq_share_auto.js:1-21", "hash": "9408fbcd69605ad6173f2d5cc87c03f6", "title": "QQ Share Script Automation"}, "1700": {"path": "/tests/qq_share_autojs/autojs_scripts/qq_share_auto.js:22-24", "hash": "e6db76cc9ba3f9534b12f49fd3625315", "title": "Delete Flag File with AutoJS Script"}, "1701": {"path": "/tests/qq_share_autojs/autojs_scripts/show_toast.js", "hash": "8dc9a0452c03c7f2c5fd35d85f497722", "title": "Display 'Hello' Toast Notification in autojs_scripts"}, "1702": {"path": "/tests/qq_share_autojs/autojs_scripts/taobao_gg_search.js", "hash": "b048027a7528149b8b51205f877795db", "title": "Taobao GG Search AutoJS Script"}, "1703": {"path": "/tests/qq_share_autojs/autojs_scripts/taobao_gg_search.js:1-19", "hash": "bac1e256670c2b574a64eab44dd8e66c", "title": "Silent Taobao Search"}, "1704": {"path": "/tests/qq_share_autojs/autojs_scripts/taobao_gg_search.js:19-19", "hash": "e9a943bb8987aa82878bea7ce1b96cde", "title": "Taobao Video URL Analysis"}, "1705": {"path": "/tests/qq_share_autojs/autojs_scripts/taobao_gg_search.js:19-54", "hash": "2a695e41cd2cc2bcb5dbd6b95d26d9e5", "title": "Taobao App Auto Search and Volume Adjustment"}, "1706": {"path": "/tests/qq_share_autojs/autojs_scripts/wesee_search.js", "hash": "5c2852683519bb05d386fed2fcf06a84", "title": "WeSee Search Automation"}, "1707": {"path": "/tests/qq_share_autojs/launch_autojs.sh", "hash": "b0cfd37aecbf0efa257b79ee5de542d0", "title": "Launch AutoJS Script with Am Start"}, "1708": {"path": "/tests/qq_share_autojs/parse_qq_url.py", "hash": "075755aca0888ab1cbfbe8d22ec35d5e", "title": "Parse QQ Share URL in AutoJS"}, "1709": {"path": "/tests/qq_share_autojs/parse_qq_url.py:1-9", "hash": "b4ae5a4602fc5a9f4c6a29753a0dcc1f", "title": "Parse QQ Share URL with urllib.parse"}, "1710": {"path": "/tests/qq_share_autojs/parse_qq_url.py:10-55", "hash": "51c0f8ca358577d5174c722d3fc8bab0", "title": "QQ Share URL Parser and Encoder"}, "1711": {"path": "/tests/qq_share_autojs/parse_qq_url.py:56-67", "hash": "b0875d96bd8b9af2f73fd58da13efdc1", "title": "QQ Share Link Parser in Python"}, "1712": {"path": "/tests/qq_share_autojs/test_qq_share.sh", "hash": "af6f5748320b1886b1c218b8c1395de5", "title": "Automate QQ Share to Bilibili"}, "1713": {"path": "/tests/qq_share_autojs/unlock_and_run_autox.sh", "hash": "eb5482aaf942c5f0bc876e82119f2caf", "title": "Unlock and Run Auto.js"}, "1714": {"path": "/tests/random_giphy_gifs/README.md", "hash": "6858b146e6361fc77153c30b51b89495", "title": "Giphy API Keys and Access"}, "1715": {"path": "/tests/random_giphy_gifs/README.md:1-34", "hash": "82d4b14a4d5b30db1268f89dc3e2b0ed", "title": "Giphy APIs: Usage and Keys Explained"}, "1716": {"path": "/tests/random_giphy_gifs/README.md:35-41", "hash": "24f20484e00314e43c938f1f0da9ccd4", "title": "Global Variable Setup"}, "1717": {"path": "/tests/random_giphy_gifs/can_we_get_tag_info_about_this.sh", "hash": "35e9d53f578b5a6c1a85fc94b8cd6e0e", "title": "Giphy GIF Tag Info Retrieval"}, "1718": {"path": "/tests/random_giphy_gifs/download_webp.sh", "hash": "ddbf670084cbfad8088633c62549e60a", "title": "Faster GIF Download with Proxy"}, "1719": {"path": "/tests/random_giphy_gifs/nodejs_server.js", "hash": "ab88dec3f65ce6d095db342bcbcc9b55", "title": "Giphy Node.js Server"}, "1720": {"path": "/tests/random_giphy_gifs/nodejs_server.js:1-22", "hash": "178acaf62b5f2560b49f39bf2d4e361d", "title": "Random API Key and Random Integer Functions"}, "1721": {"path": "/tests/random_giphy_gifs/nodejs_server.js:23-59", "hash": "f0d45e761cd11a07c5c5c49aa215c622", "title": "GIF Processor: Filtering and Error Handling"}, "1722": {"path": "/tests/random_giphy_gifs/nodejs_server.js:60-93", "hash": "51e8ad31332ac735aa322a542d98e462", "title": "Error-Handling JSON Parser"}, "1723": {"path": "/tests/random_giphy_gifs/nodejs_server.js:94-130", "hash": "9bc7dd33ece1e6c9408e2ae34bb36ce4", "title": "Node.js Giphy API Gif Fetcher"}, "1724": {"path": "/tests/random_giphy_gifs/nodejs_server.js:131-164", "hash": "052c9d7abb7de91a8c274ab4de46cb47", "title": "Giphy GIF Functions: Search, Trending, Related"}, "1725": {"path": "/tests/random_giphy_gifs/nodejs_server.js:165-192", "hash": "0ea3ee510e262f0fd146eb7c6e6abfad", "title": "Fallback Handling: Media Arrays and Endpoints"}, "1726": {"path": "/tests/random_giphy_gifs/nodejs_server.js:193-213", "hash": "7e9ab5290ef16ecf253d96961c9e5034", "title": "Random Giphy GIF Server in Node.js"}, "1727": {"path": "/tests/random_giphy_gifs/nodejs_server.js:214-239", "hash": "4c60ef86562af299ea8da5cfb036ac8b", "title": "Route-Based GIF Filter and Sort Server"}, "1728": {"path": "/tests/random_giphy_gifs/test_api.js", "hash": "4faa146439623ff43b435f71894ae794", "title": "Random Giphy GIFs Testing"}, "1729": {"path": "/tests/random_giphy_gifs/test_api.js:1-31", "hash": "05d3973ef9b531b497fada3c52df0a7b", "title": "Write Pokemon GIFs to JSON"}, "1730": {"path": "/tests/random_giphy_gifs/test_api.js:32-64", "hash": "ddd1029fb90c9067112d47e82793809f", "title": "Giphy API Gif Scraper & JSON Saver"}, "1731": {"path": "/tests/random_giphy_gifs/test_api.js:65-68", "hash": "9fcf39ca0bad18144f5ed0bc15ac2e6a", "title": "Error Logging and JSON Saving"}, "1732": {"path": "/tests/random_giphy_gifs/test_sdk.js", "hash": "2306c44e16e14fa389fef582c4f701f8", "title": "Giphy API Tests and JSON Output"}, "1733": {"path": "/tests/random_giphy_gifs/test_sdk.js:1-35", "hash": "09419a7a491cbbd47d9c4a6993dcc151", "title": "Giphy API Gif Fetcher"}, "1734": {"path": "/tests/random_giphy_gifs/test_sdk.js:36-61", "hash": "800f0c580cd0c16fad95e75a1ce6a5c2", "title": "Exploring Giphy API with Tests"}, "1735": {"path": "/tests/readbility_webpage_to_markdown_simplification/README.md", "hash": "102ec44a6bc2c9415a809c5baeaf88bc", "title": "Test Webpage Simplification"}, "1736": {"path": "/tests/readbility_webpage_to_markdown_simplification/test_mozilla.js", "hash": "224f47f2b3d5bf747ed79169e24cd79f", "title": "Parse Webpage to Article Content with Readability"}, "1737": {"path": "/tests/readbility_webpage_to_markdown_simplification/test_node_readbility.js", "hash": "11071108b4712875ed0166445dc7ca9c", "title": "Node Readability Module Fetches and Converts URL Articles"}, "1738": {"path": "/tests/readbility_webpage_to_markdown_simplification/test_readability.py", "hash": "53e624bf498568cf4dbd05fc3e2683c4", "title": "Webpage to Markdown Summarization"}, "1739": {"path": "/tests/recommendation_system/dgl_link_prediction.py", "hash": "4973a1fc6826b313d424cee01f0f6867", "title": "DGL Cora Dataset Demo"}, "1740": {"path": "/tests/recommendation_system/karate_test.py", "hash": "71b112aec1fb46def1fc7a4107c8ef1c", "title": "GCN Model Initialization with Karate Club Data"}, "1741": {"path": "/tests/recommendation_system/neo4j_e2e_recsys.py", "hash": "297d385f247eff9a8c79df7f134df618", "title": "Neo4j Fast RP with kNN Algorithm"}, "1742": {"path": "/tests/redis_music_info_persistance/launch_redis.sh", "hash": "eaff8df5856fba7ad2f20f4a4fc4d71a", "title": "Single Instance Redis Server Launcher"}, "1743": {"path": "/tests/redis_music_info_persistance/test_cache.py", "hash": "86d93091e12ee0518e37430c2b6c5bf8", "title": "Redis LRU Cache Test: /tests/redis_music_info_persistance/test_cache.py"}, "1744": {"path": "/tests/remove_subtle_watermark_local_contrast_ocr/README.md", "hash": "0939ac23021fa90b1eb6d4885cce1505", "title": "Local Contrast Enhancement for Watermark OCR"}, "1745": {"path": "/tests/remove_subtle_watermark_local_contrast_ocr/glche_test.py", "hash": "1222b7250196d1c601408d1799c7a420", "title": "CLAHE Image Fusion & Contrast"}, "1746": {"path": "/tests/remove_subtle_watermark_local_contrast_ocr/glche_test.py:1-40", "hash": "68b3158d5a19af7da8eb0cb757659208", "title": "Image Enhancement Functions for OCR"}, "1747": {"path": "/tests/remove_subtle_watermark_local_contrast_ocr/glche_test.py:41-64", "hash": "874ac9f601b0498d61abe370843259ee", "title": "Linear Stretching and Histogram Normalization for Watermark Detection"}, "1748": {"path": "/tests/remove_subtle_watermark_local_contrast_ocr/glche_test.py:65-91", "hash": "0d85311489d1adbc86d8bd511269b86d", "title": "Contrast-Enhanced Color Image Fusion"}, "1749": {"path": "/tests/remove_subtle_watermark_local_contrast_ocr/glche_test.py:93-109", "hash": "88374d4a15044ffef6507053bfe67756", "title": "Image Processing with OCR"}, "1750": {"path": "/tests/remove_subtle_watermark_local_contrast_ocr/imagej2_pyimagej_test_clahe.py", "hash": "addc1c24a9a4fa2e3222483d471d38d5", "title": "JVM-Java Python Integration for Image Contrast Enhancement"}, "1751": {"path": "/tests/remove_subtle_watermark_local_contrast_ocr/imagej2_pyimagej_test_clahe.py:1-18", "hash": "12ebd44dfaeb7b653a523a28484f7cd2", "title": "Integrating Python and Java with JPype"}, "1752": {"path": "/tests/remove_subtle_watermark_local_contrast_ocr/imagej2_pyimagej_test_clahe.py:19-58", "hash": "8bda8238bdde4a1f3255f3f39867e32b", "title": "Enhancing Local Contrast with CLAHE"}, "1753": {"path": "/tests/remove_subtle_watermark_local_contrast_ocr/imagej2_pyimagej_test_clahe.py:59-85", "hash": "f8e11ea074daf58a51550f0889938182", "title": "ImageJ2-Matplotlib Integration Test"}, "1754": {"path": "/tests/remove_subtle_watermark_local_contrast_ocr/imagej2_pyimagej_test_clahe.py:86-89", "hash": "456939518a20c0a805476b446b6dc29d", "title": "Commented Out ImageJ2/PyImageJ Attributes"}, "1755": {"path": "/tests/remove_subtle_watermark_local_contrast_ocr/imagej2_pyimagej_test_clahe.py:89-92", "hash": "f78a857fe4197472f40717042255478f", "title": "ImageJ2 CLAHE Import"}, "1756": {"path": "/tests/remove_subtle_watermark_local_contrast_ocr/init_mclahe_numpy_only.sh", "hash": "35e10c91188ae3b4967f75a068409156", "title": "Init Mclahe Numpy Library"}, "1757": {"path": "/tests/remove_subtle_watermark_local_contrast_ocr/jython_imagej_test_clahe.py", "hash": "0f718920d2c6f2da140421c4e1b0aaa9", "title": "Enhanced Local Contrast OCR"}, "1758": {"path": "/tests/remove_subtle_watermark_local_contrast_ocr/jython_imagej_test_clahe.py:1-38", "hash": "f1791445f752273c32851372bfb576d5", "title": "CLAHE Image Processing in Python"}, "1759": {"path": "/tests/remove_subtle_watermark_local_contrast_ocr/jython_imagej_test_clahe.py:39-58", "hash": "5bd72c04ac0511ced05dd2d8b0e838a0", "title": "Jython ImageJ Contrast Enhancement"}, "1760": {"path": "/tests/remove_subtle_watermark_local_contrast_ocr/mclahe_test.py", "hash": "c28dc98294358bccc99826994bf3207b", "title": "MCLAHE Test Fails to Produce Expected Result"}, "1761": {"path": "/tests/remove_subtle_watermark_local_contrast_ocr/opencv_clahe.py", "hash": "a5a38d7b4a35549b1bf4dd18be2656bc", "title": "CLAHE Image Enhancement with OpenCV"}, "1762": {"path": "/tests/remove_subtle_watermark_local_contrast_ocr/opencv_clahe.py:1-36", "hash": "ce17b083a80e6518a358ed5c1f438788", "title": "CLAHE Image Contrast Enhancement"}, "1763": {"path": "/tests/remove_subtle_watermark_local_contrast_ocr/opencv_clahe.py:38-61", "hash": "232044d94714c4844d19c593ee7101f3", "title": "CLAHE Enhancement and Unnecessary Steps"}, "1764": {"path": "/tests/remove_subtle_watermark_local_contrast_ocr/test.py", "hash": "f021f34d77f0ec04ad5cbc7b3e718985", "title": "Local Contrast Enhancement for OCR"}, "1765": {"path": "/tests/render_and_recognize_long_text_to_filter_unwanted_characters/test_pytesseract.py", "hash": "78a87715f3cf65e22fe12db42ffef7f9", "title": "Multi-Language Text Recognition with Pytesseract"}, "1766": {"path": "/tests/render_and_recognize_long_text_to_filter_unwanted_characters/test_render.py", "hash": "a5483cb2a998900ba532a59e978e15bf", "title": "Pygame Text Rendering and Display"}, "1767": {"path": "/tests/render_and_recognize_long_text_to_filter_unwanted_characters/test_render.py:1-33", "hash": "2ef49b1a015b2825d5dc32b83709e6cd", "title": "Rendering and Sizing Text in Pygame"}, "1768": {"path": "/tests/render_and_recognize_long_text_to_filter_unwanted_characters/test_render.py:34-38", "hash": "88b23b0b31bb479fd1282230a0b9a4b5", "title": "Rendering and Saving Text Image"}, "1769": {"path": "/tests/search_engine_suggestion_based_qa_bot/parse_baidu_search_ajax.py", "hash": "bee7e35e00ffb4584ae9a738deffcd00", "title": "Parse Baidu Image Search Results"}, "1770": {"path": "/tests/search_engine_suggestion_based_qa_bot/parse_baidu_search_ajax.py:1-23", "hash": "d52603c860783d2dea358cd71ffbcf42", "title": "Parsing Baidu Search AJAX Data"}, "1771": {"path": "/tests/search_engine_suggestion_based_qa_bot/parse_baidu_search_ajax.py:24-51", "hash": "dac95e1f6f18dff3d5c64a6cd19032ef", "title": "Baidu Search Ajax Parser with Pyjq"}, "1772": {"path": "/tests/search_engine_suggestion_based_qa_bot/parse_baidu_search_ajax.py:53-85", "hash": "ce2b55eb47154ed6c1b5c06aec01f5d4", "title": "Baidu Search Results Parser"}, "1773": {"path": "/tests/search_engine_suggestion_based_qa_bot/parse_baidu_search_ajax.py:86-89", "hash": "984019837cde743ccffff02d547f5ec1", "title": "Baidu Search Ajax JSON Parsing"}, "1774": {"path": "/tests/search_engine_suggestion_based_qa_bot/parse_baidu_title_abstract.py", "hash": "3d2da9ea6024e8e76454c727788c7779", "title": "Baidu Search Parser: Top 20 BM25 Phrases"}, "1775": {"path": "/tests/search_engine_suggestion_based_qa_bot/parse_baidu_title_abstract.py:1-41", "hash": "a14365876436af2e2a6ce9be5e219a2b", "title": "Parse Baidu Titles and Abstracts"}, "1776": {"path": "/tests/search_engine_suggestion_based_qa_bot/parse_baidu_title_abstract.py:42-73", "hash": "633672a971eb7e2d1f0a77a5463100d4", "title": "Baidu Title-Abstract Parser"}, "1777": {"path": "/tests/search_engine_suggestion_based_qa_bot/parse_baidu_title_abstract.py:74-111", "hash": "5588865308140df87cc86812a043952b", "title": "BM25-based Phrase Ranking and Chinese Portion Calculation"}, "1778": {"path": "/tests/search_engine_suggestion_based_qa_bot/parse_baidu_title_abstract.py:112-132", "hash": "01674daf34150597610f80001720de72", "title": "Baidu Search Engine Sorting"}, "1779": {"path": "/tests/search_engine_suggestion_based_qa_bot/search_for_picture_embedding.py", "hash": "5b276b4ffbb958c9d43a113ce697cbc6", "title": "BaiDu Image Search Python Code"}, "1780": {"path": "/tests/search_engine_suggestion_based_qa_bot/search_for_picture_embedding.py:1-34", "hash": "2a72b6a82132ef654dbd14aa19c59079", "title": "Python Image Search using BaiDu API"}, "1781": {"path": "/tests/search_engine_suggestion_based_qa_bot/search_for_picture_embedding.py:36-52", "hash": "0f481ad7b0b70d38b037e5217c801509", "title": "Baidu Image Search Ajax Parsing Error Handling"}, "1782": {"path": "/tests/search_engine_suggestion_based_qa_bot/search_image_with_keywords.py", "hash": "3169c2f35abd948ce87487e6f2a58ea6", "title": "Search Image with Keywords: BaiduSpider"}, "1783": {"path": "/tests/search_engine_suggestion_based_qa_bot/test.py", "hash": "0ca9c2d5165e806e2c1f23969b077e99", "title": "BaiduSpider-Based Search Suggestions Bot"}, "1784": {"path": "/tests/search_engine_suggestion_based_qa_bot/test.py:1-37", "hash": "fe275fd4904c5fbc107755497bbf66e4", "title": "BaiduSearchBot: Generating Suggestions and Messages"}, "1785": {"path": "/tests/search_engine_suggestion_based_qa_bot/test.py:38-61", "hash": "ca87e99b3eab1fddf9b33e20908b0713", "title": "BaiduSearch JSON Saving with Issues"}, "1786": {"path": "/tests/search_engine_suggestion_based_qa_bot/test_fix.py", "hash": "d24dbbe2dde43fdcf7a69f135bb80901", "title": "Python BaiduSpider Search Engine"}, "1787": {"path": "/tests/setu_server_mail_collector_ad_poster_personalization_java/README.md", "hash": "b78350e84a072e782ad6459c7689f794", "title": "Bilibli UID Server with Personalized Ads"}, "1788": {"path": "/tests/skin_clean/process_image.py", "hash": "dfc64eb4b473177ffbc53257ce21af3e", "title": "Enhancing Facial Features with Gaussian Blur"}, "1789": {"path": "/tests/skin_clean/process_image.py:3-41", "hash": "6c203256c6462b1e07d76f79c824b2ed", "title": "Enhanced Image Processing Functions"}, "1790": {"path": "/tests/skin_clean/process_image.py:42-79", "hash": "cde8d12c198044e1ebd392a415b382b9", "title": "Enhanced Facial Features with Python"}, "1791": {"path": "/tests/skin_clean/process_image.py:80-81", "hash": "6316b178ac24dc775f678c9cd5be5539", "title": "Initialize Image Processing"}, "1792": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/basic.py", "hash": "3dcb32a40d405cd7c03d19c36f3ffe92", "title": "Time Travel Debugging: Resurrect and Continue"}, "1793": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/basic.py:1-31", "hash": "483536c90170a978a2e1e11ce355d74d", "title": "Calculating Value Stack Depth: Skipexception Debugging"}, "1794": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/basic.py:33-54", "hash": "9c4220a8208ead2d2087c1cede15f684", "title": "Time Travel Debugging"}, "1795": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/basic.py:55-76", "hash": "dd30f49e3ac72b6304a12ef7af631d4d", "title": "Stack Depth Management Code"}, "1796": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/basic.py:77-97", "hash": "8571920d7759a8a4e04468df72ffc194", "title": "Stack Depth Adjustment for Execution"}, "1797": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/basic.py:98-130", "hash": "b9d3b2d3290396ed9e48def96fa794a4", "title": "Interpreter for Depth Management and Exception Handling"}, "1798": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/basic.py:132-166", "hash": "a39d9f396722dd594609a4997609e1a4", "title": "Python Frame Class and ObliteratedException"}, "1799": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/basic.py:167-188", "hash": "1f489839d0ece635beb937294c2d8884", "title": "Rewriting Absolute Jump Offsets"}, "1800": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/basic.py:189-219", "hash": "c55be90b4cdc84fcf6df4bc7153c310b", "title": "Resume Next Debugging"}, "1801": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/basic.py:220-238", "hash": "ad59baf941c3f9d8b6067d6b2069d4bb", "title": "Exception-Driven Debugging: Resume from Next Instruction"}, "1802": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/basic.py:239-258", "hash": "b5b9de912ad83feacd672c135671ace2", "title": "Resume Execution After Return Value"}, "1803": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/basic.py:259-280", "hash": "978de15ba58e2f8d6f773e781ceeec81", "title": "Faulting Instruction Stack Restoration"}, "1804": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/basic.py:281-303", "hash": "1dddd787c82fdfd80367d6a7657a2b90", "title": "Time Travel Debugging: Co-Consts and Resurrection"}, "1805": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/basic.py:304-327", "hash": "6bb48b910f6d1bcbe5857a0c2f17dcd4", "title": "Time-Travel Debugging with Patch Prefix"}, "1806": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/basic.py:329-348", "hash": "83aa26562f39f023988a29a396741ab3", "title": "Code Cloning and Object Creation"}, "1807": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/basic.py:349-370", "hash": "771858fb3bb225a4970349924bad1afb", "title": "Time Travel Debugging with Error Resumption"}, "1808": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/codemod_redbaron/create_decnode.py", "hash": "280b6266b93e9f27c9809d6e4a28f7ac", "title": "RedBaron-Powered Decorator Generator"}, "1809": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/codemod_redbaron/pasta_test.py", "hash": "e7940b6fe1f3f4398b7f62334fdd0347", "title": "Time-Travel Code Debugging"}, "1810": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/codemod_redbaron/pasta_test.py:1-28", "hash": "9b158f405bee81a6fc24cebce7bcf75f", "title": "Preserve LRU Cache, Discard Reloading Decorators"}, "1811": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/codemod_redbaron/pasta_test.py:29-41", "hash": "05efbda0a1c013a80d6601e8222efc50", "title": "Time Travel Debugging Code Mod"}, "1812": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/codemod_redbaron/recover_source.py", "hash": "213006f4294baa24715e53aacb1d5006", "title": "Recover Source with Red Baron Code"}, "1813": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/codemod_redbaron/redbaron_test.py", "hash": "612ccc38306cb987903161899bbb10bc", "title": "RedBaron Test: Code Analysis & Decorator Appending"}, "1814": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/codemod_redbaron/test2.py", "hash": "5b0cdc767546fe5ee6d173f397f6b3c9", "title": "Unprofessional Profanity-Filled Code: Test2.py"}, "1815": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/hook_error_handler_to_see_if_context_preserved.py", "hash": "4d6e8bc43414d602fb8200b66b51c342", "title": "Exception Handling with Progress Bar and User Input"}, "1816": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/hook_error_handler_to_see_if_context_preserved.py:1-38", "hash": "7973139540671991cfddf0d8848d511c", "title": "Exception Handling Testing: Context Preservation and Resurrection Time Travel Debugging"}, "1817": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/hook_error_handler_to_see_if_context_preserved.py:39-63", "hash": "a75f17986cbe9822580c35b6f1af749e", "title": "Error-Handling File Integrity Check"}, "1818": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/hook_error_handler_to_see_if_context_preserved.py:64-104", "hash": "c83df05e2c6352b1729537ab7b4422c5", "title": "Error Handling and Function Execution Preservation Test"}, "1819": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/minterpreter.py", "hash": "ec97c3a086ec56967d34fca05c91a27c", "title": "Exception-Aware Code Debugger"}, "1820": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/minterpreter.py:1-23", "hash": "13113c241ed2bc117c59b51d7eac4a4c", "title": "Resurrection Time Travel Debugging"}, "1821": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/minterpreter.py:24-29", "hash": "ba0b9504e131fd03747673ed850742ad", "title": "Indentation and Function Definition Checker"}, "1822": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/return_inside_function.py", "hash": "239223d897138724dc954fee3a56fc3b", "title": "Resurrect Functions from Exceptions"}, "1823": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/standardFunction.py", "hash": "2b42e411cb80904f6d2eecfdc07af079", "title": "Error Resurrection Debugger"}, "1824": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test.py", "hash": "1a67c720ad6f13d72512ff718e8621d6", "title": "Function Returns 0 Despite Errors"}, "1825": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_builtin_exception_with_debugpy/test.py", "hash": "5557dc700e371f914f3bdb95fdd15fda", "title": "Missing Exception Handling in Os.path.join Call"}, "1826": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_code/bowler_test.py", "hash": "6dcfd2fcc60a5f136319398b94a6f8d5", "title": "Bowler Test: Function Identification"}, "1827": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_code/new_test.py", "hash": "464b8b6e246cbe863bd64d76db57ca34", "title": "Reloading Decorator with Undefined Variable"}, "1828": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_code/new_test2.py", "hash": "9b24f6f950f4608bdee0abedc08534f0", "title": "Asynchronous Python Reloading Functions"}, "1829": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_code/pyjom_recover_and_rewrite.py", "hash": "8a6b612376478948109f46d9ba2ddead", "title": "Pyjom: Automatic Code Recovery and Rewrite"}, "1830": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_code/pyjom_recover_and_rewrite.py:1-30", "hash": "8dac9bfcd99b423a5924f6bdb1fec5c1", "title": "Rewriting Files with Resurrection Functions"}, "1831": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_code/pyjom_recover_and_rewrite.py:32-42", "hash": "475d86e9a747b4f39e9fd21e925e8473", "title": "Batch Py File Modification with Progress Bar"}, "1832": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_code/recover.py", "hash": "c337aee0bd8c64d3f613f06a0242682d", "title": "Reload-Free Code Recovery with Comby"}, "1833": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_code/recover_and_rewrite.py", "hash": "57210df13b69736c7dae31bf3b946f5f", "title": "Recover and Rewrite Source Code"}, "1834": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_code/rewrite.py", "hash": "06b92525b892de3b851b4eb474f3fcfb", "title": "Time-Travel Debugging: Rewriting Python Code with Comby"}, "1835": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_code/test.py", "hash": "c30a4c4ecb93cfa55d45d90cef3fe6d3", "title": "Skipping Exception, Resurrection Time Travel Debugging"}, "1836": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_code/test.sh", "hash": "a1a175c3a42fbafbf4c76bdd21d0e1e5", "title": "Dynamic Code Reloading for Debugging"}, "1837": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_code/test2.py", "hash": "c66f66c033ffbe9e67441412d49cdf82", "title": "Confusing Functions and Decorators"}, "1838": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_method_in_class/test.py", "hash": "fb1b49f8915d5d4a3425cc3a1681784e", "title": "Async Tasks and Exception Improvement"}, "1839": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_method_in_class/test.py:1-35", "hash": "ffd14bb5252ed410ff614ea4d24faaab", "title": "Incomplete Exception Handling in Class mClass"}, "1840": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_method_in_class/test.py:36-68", "hash": "84f4660632093ee1e187696ef0d9355e", "title": "Asynchronous Function Testing"}, "1841": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_method_in_class/test.sh", "hash": "90b9cf0944fea63854f390661e5f329f", "title": "Skip Exception, Continue Resurrection Time Travel Debugging"}, "1842": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_semgrep/subdir/test2.py", "hash": "aece0c55175e5d5c14d7e650e3e88406", "title": "Function 'foo' Called with Argument 0"}, "1843": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_semgrep/test.py", "hash": "d30954f51f7133205dd356c8e88b6e1e", "title": "Function 'foo' Argument 1 Called"}, "1844": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_semgrep/test.sh", "hash": "52cfef5c054ad32228f80569b67ef3a3", "title": "Demonstrating Semgrep's Dry Run and Replacement"}, "1845": {"path": "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_semgrep/test2.py", "hash": "aece0c55175e5d5c14d7e650e3e88406", "title": "Semgrep Test Case 2: Mysterious 'foo' Call with Argument 0"}, "1846": {"path": "/tests/soundhound_houndify_midomi_sound_recognize_music/mixed_to_simplified_chinese.py", "hash": "d25d9d3a76d95b58548161abeab1b225", "title": "Simplified to Traditional Chinese Conversion with OpenCC"}, "1847": {"path": "/tests/soundhound_houndify_midomi_sound_recognize_music/shazamio_recognize_music.py", "hash": "b46e1833f2732e8dbcc4e46b2de8e3a4", "title": "ShazamIO Music Recognizer"}, "1848": {"path": "/tests/soundhound_houndify_midomi_sound_recognize_music/test.py", "hash": "f9ac30d37c4322519f2c0f459e455a73", "title": "Sound Recognition with Shazam & Houndify APIs"}, "1849": {"path": "/tests/soundhound_houndify_midomi_sound_recognize_music/test_shazamio_recognize_music.sh", "hash": "683a391f75aadb48748fd20998cc085b", "title": "ShazamIO Music Recognition Test"}, "1850": {"path": "/tests/soundhound_houndify_midomi_sound_recognize_music/test_songrec_rust.sh", "hash": "70365d1398f4e2e295f99322b26daa12", "title": "Song Recognition Tool: Matching Limitations"}, "1851": {"path": "/tests/spatial_temporal_slice_pip/test.py", "hash": "775f3c3d0614218f1212bb28687e09e1", "title": "OpenCV VideoFrame Reader"}, "1852": {"path": "/tests/split_long_image_into_video/cleanup.sh", "hash": "bb8e8331d5393fed8ed6744fbe803395", "title": "Post-Process Cleanup"}, "1853": {"path": "/tests/split_long_image_into_video/generate_video.py", "hash": "fdbd207b90937258251ffa759f7a3e44", "title": "Video Generation from Long Image Slices"}, "1854": {"path": "/tests/split_long_image_into_video/generate_video.py:1-36", "hash": "6bdf6abc0eddbe1a734af9c67827a4ff", "title": "Resizing Image for Video Cover"}, "1855": {"path": "/tests/split_long_image_into_video/generate_video.py:37-89", "hash": "26c574b40c72ed6053c2aee88eb83bdb", "title": "Video Generator from Long Image"}, "1856": {"path": "/tests/split_long_image_into_video/generate_video.py:90-97", "hash": "d2acbd5338c8dfb70c007bf03ece194d", "title": "Temporary Execute and Cleanup"}, "1857": {"path": "/tests/split_long_image_into_video/init.sh", "hash": "3fd8d9c5f60f1130bd6446a0c1ea3ad2", "title": "Download BGM and Image with Curl"}, "1858": {"path": "/tests/still_watermark_auto_removal/EAST-Detector-for-text-detection-using-OpenCV-master/README.md", "hash": "c7641b595d2debd75c7b1a5963436146", "title": "Real-time Accurate Text Detection with EAST Detector"}, "1859": {"path": "/tests/still_watermark_auto_removal/EAST-Detector-for-text-detection-using-OpenCV-master/README.md:1-13", "hash": "9368a8a8d7b937065fb330ca8242e825", "title": "EAST Detector: Real-Time Text Detection"}, "1860": {"path": "/tests/still_watermark_auto_removal/EAST-Detector-for-text-detection-using-OpenCV-master/README.md:15-24", "hash": "dfc5425ead5daf5a50d48ab3bd6d22be", "title": "Natural Scene Text Detection: Challenges and OpenCV"}, "1861": {"path": "/tests/still_watermark_auto_removal/EAST-Detector-for-text-detection-using-OpenCV-master/README.md:24-35", "hash": "3ec30226787b7e6404b7f2854ec1c639", "title": "EAST Detector for Complex Text Detection"}, "1862": {"path": "/tests/still_watermark_auto_removal/EAST-Detector-for-text-detection-using-OpenCV-master/opencv_text_detection_image.py", "hash": "f09f6781b223508c3bb39a5ca07c7ea3", "title": "OpenCV-EAST Text Detection Script"}, "1863": {"path": "/tests/still_watermark_auto_removal/EAST-Detector-for-text-detection-using-OpenCV-master/opencv_text_detection_image.py:1-26", "hash": "018518a02c226fbfb01e8d3552017ccf", "title": "OpenCV Image Text Detection"}, "1864": {"path": "/tests/still_watermark_auto_removal/EAST-Detector-for-text-detection-using-OpenCV-master/opencv_text_detection_image.py:27-55", "hash": "e29856ea09f6ab54a21e6052903e7c74", "title": "EAST Text Detection in OpenCV"}, "1865": {"path": "/tests/still_watermark_auto_removal/EAST-Detector-for-text-detection-using-OpenCV-master/opencv_text_detection_image.py:56-86", "hash": "b7e59d68549b9ab8f437fbddf3eb8ed4", "title": "EAST Detector for OpenCV Text Detection"}, "1866": {"path": "/tests/still_watermark_auto_removal/EAST-Detector-for-text-detection-using-OpenCV-master/opencv_text_detection_image.py:88-115", "hash": "fdca049834a6ee4ba069794592b40cd2", "title": "OpenCV Text Detection and Suppression"}, "1867": {"path": "/tests/still_watermark_auto_removal/EAST-Detector-for-text-detection-using-OpenCV-master/opencv_text_detection_image.py:116-133", "hash": "ea3200303a36021022b575989efa8ec1", "title": "OpenCV Bounding Box Detector"}, "1868": {"path": "/tests/still_watermark_auto_removal/automatic-watermark-detection/video_watermark_detection.py", "hash": "61b3a9d7642aeb6d24749d9af10618d7", "title": "Automatic Video Watermark Detection and Removal"}, "1869": {"path": "/tests/still_watermark_auto_removal/automatic-watermark-detection/video_watermark_detection.py:1-25", "hash": "fd14234f9b129e474dfcb35cd1917dfc", "title": "Video Watermark Detection Setup"}, "1870": {"path": "/tests/still_watermark_auto_removal/automatic-watermark-detection/video_watermark_detection.py:27-62", "hash": "b64f0c5f4867cd991c5a6ee63b4e7f0e", "title": "Automatic Video Watermark Detection and Analysis"}, "1871": {"path": "/tests/still_watermark_auto_removal/automatic-watermark-detection/video_watermark_detection.py:64-91", "hash": "38ba089effeb46b302334749d74cab05", "title": "AI-Based Watermark Removal"}, "1872": {"path": "/tests/still_watermark_auto_removal/automatic-watermark-detection/video_watermark_detection.py:92-119", "hash": "8e6426385117c1a166b0af98dbaa44f3", "title": "Deep Learning Watermark Detection"}, "1873": {"path": "/tests/still_watermark_auto_removal/automatic-watermark-detection/video_watermark_detection.py:120-144", "hash": "8b76761f3386b4dc5a0bad1143b38371", "title": "Watermark Detection Bounding Boxes"}, "1874": {"path": "/tests/still_watermark_auto_removal/automatic-watermark-detection/video_watermark_detection.py:146-181", "hash": "d8258e3082f090bfcdb5580b50848aed", "title": "Video Watermark Detection Algorithm"}, "1875": {"path": "/tests/still_watermark_auto_removal/automatic-watermark-detection/video_watermark_detection.py:183-206", "hash": "4274e9af93d7eb17527f972bf0c6f845", "title": "Adaptive Thresholding for Video Watermark Detection"}, "1876": {"path": "/tests/still_watermark_auto_removal/automatic-watermark-detection/video_watermark_detection.py:207-239", "hash": "70c30145eef6dd31f3fec04d8b3084ea", "title": "Video Watermark Detection and Removal"}, "1877": {"path": "/tests/still_watermark_auto_removal/maxRectangleSolver.py", "hash": "5844fbbfa9cff3d626cfe87d5239d453", "title": "Optimizing Rectangles in MaxRectangleSolver.py"}, "1878": {"path": "/tests/still_watermark_auto_removal/maxRectangleSolver.py:1-43", "hash": "790c2bcf507c48234fcb34fd041f599a", "title": "Max Rectangle Solver for JSON Canvas"}, "1879": {"path": "/tests/still_watermark_auto_removal/maxRectangleSolver.py:44-85", "hash": "777d830b4913d8dfed8556ada0a7e2e6", "title": "Checking Rectangle Overlaps"}, "1880": {"path": "/tests/still_watermark_auto_removal/maxRectangleSolver.py:86-120", "hash": "40710c690f3fc9e5cd6ff4d37a6457dd", "title": "Max Rectangle Solver Algorithm"}, "1881": {"path": "/tests/still_watermark_auto_removal/maxRectangleSolver.py:121-151", "hash": "9a6b3a611f58226c66486e4b73670a49", "title": "Max Rectangle Finder"}, "1882": {"path": "/tests/still_watermark_auto_removal/maxRectangleSolver.py:153-161", "hash": "66dede83f5e675b6857459100fde9bb3", "title": "Optimal Rectangle Generator"}, "1883": {"path": "/tests/still_watermark_auto_removal/test_auto_video_watermark_detection.sh", "hash": "1d933e8b379e362c7dc43ac03a600482", "title": "Auto Video Watermark Detection"}, "1884": {"path": "/tests/taobao_guangguang_download_\u54c7\u54e6\u89c6\u9891_\u6dd8\u5b9d\u901b\u901b_tiktok_douyin/README.md", "hash": "1212e1c478950d2e111099e715c1f6c8", "title": "Taobao Guangguang Crawler: TikTok DouYin Test"}, "1885": {"path": "/tests/taobao_guangguang_download_\u54c7\u54e6\u89c6\u9891_\u6dd8\u5b9d\u901b\u901b_tiktok_douyin/decodeTaobaoQuery.py", "hash": "60ab68d749cb8c28f6df6451ea128ad4", "title": "Decoding Taobao Query Strings"}, "1886": {"path": "/tests/taobao_guangguang_download_\u54c7\u54e6\u89c6\u9891_\u6dd8\u5b9d\u901b\u901b_tiktok_douyin/decodeTaobaoQuery.py:1-3", "hash": "f4f3f28e1e55c3065ec6933db86428a6", "title": "Decoding Taobao Query Strings"}, "1887": {"path": "/tests/taobao_guangguang_download_\u54c7\u54e6\u89c6\u9891_\u6dd8\u5b9d\u901b\u901b_tiktok_douyin/decodeTaobaoQuery.py:3-3", "hash": "815c4e6867716258fdcf07b0e2ce5cc5", "title": "Decoding Taobao Query Parameters"}, "1888": {"path": "/tests/taobao_guangguang_download_\u54c7\u54e6\u89c6\u9891_\u6dd8\u5b9d\u901b\u901b_tiktok_douyin/decodeTaobaoQuery.py:3-8", "hash": "85883c95c07920c4183c80fe3e95ddc9", "title": "URL-Encoded String Decoding and JSON Printing"}, "1889": {"path": "/tests/taobao_guangguang_download_\u54c7\u54e6\u89c6\u9891_\u6dd8\u5b9d\u901b\u901b_tiktok_douyin/disable_ssl.js", "hash": "e1e990568dfd9a71f16e52b6bff00e1f", "title": "Frida SSL Bypass"}, "1890": {"path": "/tests/taobao_guangguang_download_\u54c7\u54e6\u89c6\u9891_\u6dd8\u5b9d\u901b\u901b_tiktok_douyin/frida_globalswitch_apk.js", "hash": "d2de4d46aff424128a33ddc1dad9421d", "title": "Frida-Driven Taobao Global Switch APK Debugging"}, "1891": {"path": "/tests/taobao_guangguang_download_\u54c7\u54e6\u89c6\u9891_\u6dd8\u5b9d\u901b\u901b_tiktok_douyin/frida_globalswitch_apk.js:2-27", "hash": "2a3d56ff83755ee0b7d8df470aef4d3f", "title": "Disabling SSL-SPDY with Frida JavaScript"}, "1892": {"path": "/tests/taobao_guangguang_download_\u54c7\u54e6\u89c6\u9891_\u6dd8\u5b9d\u901b\u901b_tiktok_douyin/frida_globalswitch_apk.js:28-59", "hash": "dedd10d5993e77bdc898bcf5bfc18e5e", "title": "Frida APK Class Printing with Callbacks"}, "1893": {"path": "/tests/taobao_guangguang_download_\u54c7\u54e6\u89c6\u9891_\u6dd8\u5b9d\u901b\u901b_tiktok_douyin/frida_globalswitch_apk.js:60-87", "hash": "c2a720283f0bcae2eaed4b0c0a9b1964", "title": "Java Class Manipulation for Tracking"}, "1894": {"path": "/tests/taobao_guangguang_download_\u54c7\u54e6\u89c6\u9891_\u6dd8\u5b9d\u901b\u901b_tiktok_douyin/frida_globalswitch_apk.js:88-112", "hash": "ebfad6bef351376058b9c956df2c40f8", "title": "Frida-Based SPDY Disable in APK"}, "1895": {"path": "/tests/taobao_guangguang_download_\u54c7\u54e6\u89c6\u9891_\u6dd8\u5b9d\u901b\u901b_tiktok_douyin/get_frida_codeshare_source.sh", "hash": "981f37c1cb0015efa7309d36818de283", "title": "Frida CodeShare Downloader with Security Warning"}, "1896": {"path": "/tests/taobao_guangguang_download_\u54c7\u54e6\u89c6\u9891_\u6dd8\u5b9d\u901b\u901b_tiktok_douyin/get_url.py", "hash": "e0bd116bcc3f9196dd4a7c7bdfb3d704", "title": "Fetch Data with Cookies"}, "1897": {"path": "/tests/taobao_guangguang_download_\u54c7\u54e6\u89c6\u9891_\u6dd8\u5b9d\u901b\u901b_tiktok_douyin/guangguang_update.sh", "hash": "3bef128f1aa478d35b2199e5faf0134d", "title": "Taobao API Fetch and Post Script"}, "1898": {"path": "/tests/taobao_guangguang_download_\u54c7\u54e6\u89c6\u9891_\u6dd8\u5b9d\u901b\u901b_tiktok_douyin/guangguang_update.sh:1-1", "hash": "452dee8ce6eca4a1450a6d90ba489094", "title": "Taobao API GET Request for Content Recommendations"}, "1899": {"path": "/tests/taobao_guangguang_download_\u54c7\u54e6\u89c6\u9891_\u6dd8\u5b9d\u901b\u901b_tiktok_douyin/guangguang_update.sh:1-7", "hash": "f6e434421b6450d58bcf50d8658b41dd", "title": "Taobao API HTTP GET Request"}, "1900": {"path": "/tests/taobao_guangguang_download_\u54c7\u54e6\u89c6\u9891_\u6dd8\u5b9d\u901b\u901b_tiktok_douyin/guangguang_update.sh:7-22", "hash": "5324c064246434e2f263199ce693c516", "title": "Taobao API GET Request with JavaScript"}, "1901": {"path": "/tests/taobao_guangguang_download_\u54c7\u54e6\u89c6\u9891_\u6dd8\u5b9d\u901b\u901b_tiktok_douyin/guangguang_update.sh:23-39", "hash": "29aaa6d345c3de36c59560d82a10289a", "title": "Taobao Video API Request"}, "1902": {"path": "/tests/taobao_guangguang_download_\u54c7\u54e6\u89c6\u9891_\u6dd8\u5b9d\u901b\u901b_tiktok_douyin/guangguang_update.sh:39-47", "hash": "d68fc6b13320cda1822550d11067531e", "title": "Deciphering Taobao API Call"}, "1903": {"path": "/tests/taobao_guangguang_download_\u54c7\u54e6\u89c6\u9891_\u6dd8\u5b9d\u901b\u901b_tiktok_douyin/guangguang_update.sh:47-47", "hash": "777d6d83c27e85e0af9a1c3dc913ef53", "title": "Sending POST Request to API with JSON Parameters and Authentication"}, "1904": {"path": "/tests/taobao_guangguang_download_\u54c7\u54e6\u89c6\u9891_\u6dd8\u5b9d\u901b\u901b_tiktok_douyin/run_gg.sh", "hash": "43ec5319e7ee0a3dc84bc27ef113649a", "title": "Socks5 Mitmproxy Setup for Taobao Test"}, "1905": {"path": "/tests/taobao_guangguang_download_\u54c7\u54e6\u89c6\u9891_\u6dd8\u5b9d\u901b\u901b_tiktok_douyin/run_weishi.sh", "hash": "a0a77fc788f983517d1d42f71c886d64", "title": "Weishi Socks5 Mitmproxy"}, "1906": {"path": "/tests/taobao_guangguang_download_\u54c7\u54e6\u89c6\u9891_\u6dd8\u5b9d\u901b\u901b_tiktok_douyin/taobao_query.sh", "hash": "db590bae6d14c2bd2880bdabe9e37bb5", "title": "TMALL_MARKET_O2O JSON Data Explained"}, "1907": {"path": "/tests/taobao_guangguang_download_\u54c7\u54e6\u89c6\u9891_\u6dd8\u5b9d\u901b\u901b_tiktok_douyin/taobao_query.sh:1-11", "hash": "a005a1d0d86a2d0e3d5f8ea737e3dee5", "title": "Checking Login and H5API Usage"}, "1908": {"path": "/tests/taobao_guangguang_download_\u54c7\u54e6\u89c6\u9891_\u6dd8\u5b9d\u901b\u901b_tiktok_douyin/taobao_query.sh:11-11", "hash": "5c6caca58352a171b3d232fd30e9bbfc", "title": "JSON Data: Taobao Market O2O Stores"}, "1909": {"path": "/tests/taobao_guangguang_download_\u54c7\u54e6\u89c6\u9891_\u6dd8\u5b9d\u901b\u901b_tiktok_douyin/view_weishi_capture_data.sh", "hash": "6501003dba186116604c4ea18251020f", "title": "Weishi Capture Data Script"}, "1910": {"path": "/tests/taobao_guangguang_download_\u54c7\u54e6\u89c6\u9891_\u6dd8\u5b9d\u901b\u901b_tiktok_douyin/wtf_is_this_shit.sh", "hash": "dcf7d0eb83d812f76a8becbc853a663f", "title": "Download and Unzip Main JSON"}, "1911": {"path": "/tests/tencent_video_recommendation_extraction/dump_page.py", "hash": "5e82448a133e43ef99f7ac6e82f753f1", "title": "Automate QQ Video Page Dump"}, "1912": {"path": "/tests/tencent_video_recommendation_extraction/loop_all_tags.py", "hash": "f5390b1d78de74d2b4e41593ca24e1df", "title": "Extract and Print HTML Attributes"}, "1913": {"path": "/tests/tencent_video_recommendation_extraction/phantomjs_test.js", "hash": "aa8d5f81321ff4d196f00ef4fd517df5", "title": "PhantomJS-Based URL Checker"}, "1914": {"path": "/tests/tencent_video_recommendation_extraction/playwright_with_elinks.sh", "hash": "b92a060fb63dd230a3193d601933e411", "title": "Automated Extraction of Tencent Video Recommendations"}, "1915": {"path": "/tests/tencent_video_recommendation_extraction/requests_html_test.py", "hash": "654fe598de434f72d820e48eeea14f38", "title": "QQ Video Link Scraper"}, "1916": {"path": "/tests/test_auto_dog_video_giphy_online_producer.py", "hash": "bf01642cc8f3825f34976551a03e24e9", "title": "Automated Giphy Online Video Producer Testing"}, "1917": {"path": "/tests/test_auto_dog_video_giphy_online_producer.py:1-37", "hash": "4c8b7a957268ed111466fb06e773553f", "title": "Default Timeout for Requests Library"}, "1918": {"path": "/tests/test_auto_dog_video_giphy_online_producer.py:38-65", "hash": "0f199f3bf36d6c3213d2603823c661aa", "title": "Preconfiguring Dog or Cat"}, "1919": {"path": "/tests/test_auto_dog_video_giphy_online_producer.py:66-90", "hash": "e75f355ea337ec404e58c8eae990c11a", "title": "Paraphrasing Bilibili Metadata Generator"}, "1920": {"path": "/tests/test_auto_dog_video_giphy_online_producer.py:91-121", "hash": "3e104d108bf192d86bf01698a5acab5a", "title": "Dog and Cat Metadata Handling"}, "1921": {"path": "/tests/test_auto_dog_video_giphy_online_producer.py:122-148", "hash": "c9faabe29e1cc5af46ee6b5c9dd82cf5", "title": "Auto-Download Music using Redis and NeteaseAPI"}, "1922": {"path": "/tests/test_auto_dog_video_giphy_online_producer.py:149-170", "hash": "d6683360355a390c4f41f35d58f3eafc", "title": "Music and Lyric File Previewer"}, "1923": {"path": "/tests/test_auto_dog_video_giphy_online_producer.py:171-183", "hash": "2327c650e1526d0265a27337f070c46a", "title": "Giphy Video Subtitle Generator"}, "1924": {"path": "/tests/test_auto_dog_video_giphy_online_producer.py:184-215", "hash": "423e3a05f0515dc58e4884e9a8264ac2", "title": "Giphy Online Auto Producer Test"}, "1925": {"path": "/tests/test_auto_dog_video_giphy_online_producer.py:216-248", "hash": "dc761661c99fb43d3401212eec56657f", "title": "Test Medialang Render Function"}, "1926": {"path": "/tests/test_auto_dog_video_giphy_online_producer.py:249-275", "hash": "95e3b6a5d38b607115d2a8884cd73f25", "title": "Temporary Directory Test Cleanup"}, "1927": {"path": "/tests/test_auto_dog_video_giphy_online_producer.py:276-295", "hash": "f954c1b56970413f3297c1895a1b8cd0", "title": "Auto Dog Video: PMRT_0 Function Implementation"}, "1928": {"path": "/tests/test_auto_dog_video_giphy_online_producer.sh", "hash": "2547f36081b8d31435ef14e83dccabf0", "title": "Automating Video Testing Script"}, "1929": {"path": "/tests/test_auto_dog_video_giphy_online_producer.yaml", "hash": "6a3b16bc61f9760b193e2431d754d4e7", "title": "Tmux Test Session Setup"}, "1930": {"path": "/tests/test_auto_local_producer.py", "hash": "65c3baad11dab0a8bf0b0ff140bbe278", "title": "Local Producer OCR Test Suite"}, "1931": {"path": "/tests/test_auto_local_producer.py:1-27", "hash": "2f8e5d825232831b17b3dbc1d5256888", "title": "OCR Testing with CUDA and Pip Modifications"}, "1932": {"path": "/tests/test_auto_local_producer.py:28-56", "hash": "1212c49f359a49c22382ef67b3c9660f", "title": "Local Producer Setup Code"}, "1933": {"path": "/tests/test_auto_local_producer.py:57-87", "hash": "13175571d8a463195217b5ee929e9307", "title": "Video Processing Configuration and Testing"}, "1934": {"path": "/tests/test_auto_local_producer.py:88-123", "hash": "c0fbdc1f5576bb800e136e9a6da558c4", "title": "Temporary Directory Context Manager and Test Function"}, "1935": {"path": "/tests/test_auto_local_producer.py:124-147", "hash": "3422c5baa102b8bf9937a64569763b51", "title": "Temporary Directory Cleanup in Auto Local Producer"}, "1936": {"path": "/tests/test_auto_local_producer.py:149-154", "hash": "a2ecd7a2f5c2dd6fad9a5d0ff40bf4bf", "title": "Debugging Save Path with Breakpoints"}, "1937": {"path": "/tests/test_auto_local_producer.sh", "hash": "ccee0ff4aa93212556b23f8cb6b9855a", "title": "Customizing LD_LIBRARY_PATH for Local Producer Test"}, "1938": {"path": "/tests/test_auto_local_reviewer.py", "hash": "7e6d2d6a6a3c2187a56766837ea5d734", "title": "Initializing WB Rev Object"}, "1939": {"path": "/tests/test_auto_local_reviewer.py:1-24", "hash": "e40f53ea081bd00c43c74d9b8a75d1fe", "title": "Setting Up Auto Arguments and Test Templates"}, "1940": {"path": "/tests/test_auto_local_reviewer.py:25-32", "hash": "bfda31b516f82e4d9516356d4ee232ef", "title": "Initializing Main Object and Calling main() Method"}, "1941": {"path": "/tests/test_bilibili_register_video.py", "hash": "f613fd6e5dfe80f461db0ddd5377a7d3", "title": "Bilibili Video Registration Test"}, "1942": {"path": "/tests/test_bilibili_resolve_tid.py", "hash": "dc8dfce11266cbe2e4a0d8781ad2b73f", "title": "Testing Bilibili TID Resolution"}, "1943": {"path": "/tests/test_commons.py", "hash": "c52976662e8ab66b501d4f60d4223341", "title": "Modifying Test Path and Proxy Variables"}, "1944": {"path": "/tests/test_dummy.py", "hash": "c091acfb0c9410ba6d4b79471ba9255d", "title": "Testing Content Producer and Reviewer Functionality"}, "1945": {"path": "/tests/test_dummy.sh", "hash": "ce157a79bcef26474785f22c319deee4", "title": "Running Test Dummy Python Script"}, "1946": {"path": "/tests/test_iterator_generator_wrapper_lazero_utils.py", "hash": "7f9cc23949b546ff24cc1a58c03090e1", "title": "Lazero IteratorWrapper Testing"}, "1947": {"path": "/tests/test_local_reviewer.py", "hash": "ee17aba5a3716a5a716e799a1343fd27", "title": "Directory Content Reviewer Test"}, "1948": {"path": "/tests/test_manual_censor.py", "hash": "0e39b4301d9c93326d31d4ec58b64075", "title": "Manual Censoring Test Suite"}, "1949": {"path": "/tests/test_manual_censorInterface.py", "hash": "d6af867268aef315305509012f451f6a", "title": "Content Censorship with Tags Testing"}, "1950": {"path": "/tests/test_medialang.py", "hash": "12ce41f8cd21774b877c5bb3351b4214", "title": "Testing Medialang with Prettified Scripts"}, "1951": {"path": "/tests/test_ocr_entity_detector.py", "hash": "d00552e07651fce1e50f14bdfe51f7fd", "title": "Optical Character Recognition and Spatial Analysis"}, "1952": {"path": "/tests/test_ocr_entity_detector.py:1-30", "hash": "cc817905d8f0ce2227097ddb87b9ff8a", "title": "Subtitle Detection with JSON and PaddleOCR"}, "1953": {"path": "/tests/test_ocr_entity_detector.py:31-43", "hash": "5e1b03da0d43d2a2b43dab559197bfc3", "title": "Forced OCR Combination and Result Printing"}, "1954": {"path": "/tests/test_remerge_demanded_cut_spans.py", "hash": "0bd8ec86e916b43c5fa496493a956528", "title": "Testing Consistent Span Reordering"}, "1955": {"path": "/tests/test_remerge_demanded_cut_spans.py:1-2", "hash": "c530a976b019d2e01624fe789df7dcef", "title": "Testing Demanded Cut Spans Merge"}, "1956": {"path": "/tests/test_remerge_demanded_cut_spans.py:2-7", "hash": "32820eea1531824d86eb066dd3327fad", "title": "Testing Cut Spans Validation"}, "1957": {"path": "/tests/test_remerge_demanded_cut_spans.py:8-35", "hash": "fb96eaada0db2bd018d68cbb06a457a7", "title": "Consistent Span Order and Duration Checker"}, "1958": {"path": "/tests/test_talib_stream_ema.py", "hash": "aa7e71c0827035a3f0be37108c92d687", "title": "Comparing Talib SMA Execution Speeds: Function vs. Streaming"}, "1959": {"path": "/tests/test_weibo_pets.py", "hash": "5f2e0e6259e08b11f9425eae2f3ee09d", "title": "Automated Weibo Pets Data Review"}, "1960": {"path": "/tests/test_weibo_pets.sh", "hash": "0216ebe885a27f75931442be254e7c60", "title": "Automated Weibo Pets Testing"}, "1961": {"path": "/tests/title_cover_generator/commons.py", "hash": "a2e32252247fdc874c2e8663e7638b0f", "title": "Efficient Text Data Processing in Commons.py"}, "1962": {"path": "/tests/title_cover_generator/commons.py:1-17", "hash": "c2ac3174f0873002475270ff3ebf8223", "title": "Load Train Data Core: Pickle File Imports"}, "1963": {"path": "/tests/title_cover_generator/commons.py:18-44", "hash": "88e6e70ae6eb1fcfa747874b33eeba4c", "title": "Pickle Data Processing and Shuffling"}, "1964": {"path": "/tests/title_cover_generator/commons.py:45-67", "hash": "6d2ffe08d51843758359d32eaff6b9d3", "title": "Text Chunks Iteration and String Formatting"}, "1965": {"path": "/tests/title_cover_generator/commons.py:68-87", "hash": "7fec8ad5a8dd561a3896a931039047c5", "title": "Function `import_word`: Load, Analyze, Print Word Data"}, "1966": {"path": "/tests/title_cover_generator/gpt2_title_data_prep.py", "hash": "67e636b26ba0040d09a3bb6715a70c08", "title": "Train-Test Data Preparation"}, "1967": {"path": "/tests/title_cover_generator/gpt2_train.sh", "hash": "fb53a51a696ac63ab6945eba67c74b75", "title": "Train GPT-2 for News Titles"}, "1968": {"path": "/tests/title_cover_generator/paddlenlp_word_label.py", "hash": "2ac42225a28ac7a7699af16519b8b44b", "title": "PaddleNLP Taskflow Data Processing"}, "1969": {"path": "/tests/title_cover_generator/pegasus_trainer.py", "hash": "241337254a5b6cf9a542706715571146", "title": "PEGASUS MT Model Training and Performance Evaluation"}, "1970": {"path": "/tests/title_cover_generator/pegasus_trainer.py:2-27", "hash": "b926a4e83197399c771007410eae4153", "title": "Training PEGASUS Model for Specific Tasks"}, "1971": {"path": "/tests/title_cover_generator/pegasus_trainer.py:28-49", "hash": "af5e99766962f033b71904dd330b6537", "title": "Pegasus Trainer: RMSprop, Batch Size 2, Unlimited Sentence Length"}, "1972": {"path": "/tests/title_cover_generator/pegasus_trainer.py:52-77", "hash": "9ab7b3afc1582b72ca845ed77c2714c9", "title": "Pegasus Translation Model Loss Calculation"}, "1973": {"path": "/tests/title_cover_generator/pegasus_trainer.py:78-94", "hash": "84f5b94032fb71a6c6e7f1214fc48291", "title": "Frustrated ML Trainer: Kaggle Woes"}, "1974": {"path": "/tests/title_cover_generator/pyltp_server.py", "hash": "1a1d66edd4b970aed3db5e9a8ae3d0aa", "title": "PyLTP Server: NLP Tasks & Relationship Extraction"}, "1975": {"path": "/tests/title_cover_generator/pyltp_server.py:1-35", "hash": "163271352d2de5cec826415c18cfc8cc", "title": "Initialize LTP Models for NLP Tasks"}, "1976": {"path": "/tests/title_cover_generator/pyltp_server.py:36-61", "hash": "890fbc79f48ed71e72d64fb60c8dd2a1", "title": "Load and Utilize NLP Models in PyLTp Server"}, "1977": {"path": "/tests/title_cover_generator/pyltp_server.py:62-90", "hash": "d34f409331704f22f1009cfd2d72aa0e", "title": "Named Entity Recognition Functions"}, "1978": {"path": "/tests/title_cover_generator/pyltp_server.py:91-113", "hash": "6650ffa47ebd6cc575451fc85a6a4bb1", "title": "Named Entity Recognition Code Snippet"}, "1979": {"path": "/tests/title_cover_generator/pyltp_server.py:114-151", "hash": "0336bee9d6f2bb860f58ecaa6455ff7e", "title": "Named Entity Categorizer"}, "1980": {"path": "/tests/title_cover_generator/pyltp_server.py:152-175", "hash": "01f13c86c45e733a537bfa00fae156dd", "title": "Named Entity Recognition for Segmentation"}, "1981": {"path": "/tests/title_cover_generator/pyltp_server.py:176-198", "hash": "9314bee9781252816d9f9bc561987244", "title": "Named Entity Recognition and Extraction Function"}, "1982": {"path": "/tests/title_cover_generator/pyltp_server.py:199-229", "hash": "8936a04e2deaea8b93d9a6c8dfc88ab5", "title": "Syntax Parser Tree Generation"}, "1983": {"path": "/tests/title_cover_generator/pyltp_server.py:230-258", "hash": "0fb9b14960fa316f8f8166057690673c", "title": "Triplet Extraction Function"}, "1984": {"path": "/tests/title_cover_generator/pyltp_server.py:260-284", "hash": "8ddbfdffd59be523a8693ccf57298412", "title": "Extracting SPO Triples from NL Sentences using PyLTP"}, "1985": {"path": "/tests/title_cover_generator/pyltp_server.py:285-306", "hash": "62fc20cc3a94dc54a35d2f07196c253c", "title": "Relationship Checker and Appender"}, "1986": {"path": "/tests/title_cover_generator/pyltp_server.py:307-331", "hash": "52dd03138ff8d4c00891cd4022bfc978", "title": "Named Entity Extraction Code"}, "1987": {"path": "/tests/title_cover_generator/pyltp_server.py:332-354", "hash": "1ed63504123b15e4d7166fd15a14e2f0", "title": "Parsing Sentence Dependency in PyLTp Server"}, "1988": {"path": "/tests/title_cover_generator/pyltp_server.py:355-383", "hash": "a2392dda6985534e8c1a7629cfd301a1", "title": "Arc Dictionary Organization Function"}, "1989": {"path": "/tests/title_cover_generator/pyltp_server.py:384-414", "hash": "1626ac9abaa92486bbfa49ed17e1bc9c", "title": "Named Entity Recognizer in Chinese Language Processing Model"}, "1990": {"path": "/tests/title_cover_generator/pyltp_server.py:415-426", "hash": "281120d5ec65093be7bc0f624f6244e7", "title": "Triple Extraction and Release"}, "1991": {"path": "/tests/title_cover_generator/spacy_word_swapper.py", "hash": "5f05bc4d1106644873cbd4d2f8c3b206", "title": "Spacy-Jieba Tokenizer for English and Non-English Text"}, "1992": {"path": "/tests/title_cover_generator/spacy_word_swapper.py:1-30", "hash": "eec4432fb0921b4d74c09326a830ed38", "title": "Spacy Chinese Text Search Function"}, "1993": {"path": "/tests/title_cover_generator/spacy_word_swapper.py:31-56", "hash": "03c308f2284bf9d8c3b1556787f9bdc5", "title": "Spacy Word Swapper: POS and Dependency Tags"}, "1994": {"path": "/tests/title_cover_generator/tokenizer.py", "hash": "f0b0132d55f913126c30b016604e8bde", "title": "T5PegasusTokenizer: Custom Bert Extender"}, "1995": {"path": "/tests/title_rewrite_paraphrase/test.py", "hash": "9fdc734858ed501c1efaa14f0aeb40e0", "title": "Paraphrasing Titles with ClueAI and OpenAI"}, "1996": {"path": "/tests/title_rewrite_paraphrase/test.py:1-46", "hash": "517a9a3f0e8a3ae85a490d85339e7204", "title": "OpenAI Paraphraser with ClueAI and LRU Cache"}, "1997": {"path": "/tests/title_rewrite_paraphrase/test.py:47-67", "hash": "c287c3693c6101669157ddf52786c2f1", "title": "Paraphrase Prediction Generator"}, "1998": {"path": "/tests/title_rewrite_paraphrase/test_api.py", "hash": "032602685ffc28a75adbe88cdaef2f3f", "title": "API-Based Chinese Text Paraphrasing Test"}, "1999": {"path": "/tests/title_rewrite_paraphrase/test_baidu_paraphrase.py", "hash": "557f7ff80d6cc1f2e0f3eda83f7f09d5", "title": "Baidu Paraphraser: Language Translation and Detection"}, "2000": {"path": "/tests/title_rewrite_paraphrase/test_baidu_paraphrase.py:1-41", "hash": "48774d615bdb4c4686d04e9895d1e95f", "title": "Baidu Language Detection and Translation Toolkit"}, "2001": {"path": "/tests/title_rewrite_paraphrase/test_baidu_paraphrase.py:42-81", "hash": "0d51d41610e19c7adec806051079ebf1", "title": "Baidu Paraphrase via Translation"}, "2002": {"path": "/tests/title_rewrite_paraphrase/test_baidu_paraphrase.py:83-109", "hash": "fde1babc57a2633d680c7f2fc9b10bb6", "title": "Paraphrasing through Multiple Languages"}, "2003": {"path": "/tests/title_rewrite_paraphrase/test_baidu_paraphrase.py:110-124", "hash": "2c2b16dce39a488665edd52f7c42ee6a", "title": "Baidu Paraphraser Testing"}, "2004": {"path": "/tests/title_rewrite_paraphrase/test_local.py", "hash": "2e6ff949c21cc6495c554062bf1372b0", "title": "Paraphrasing Function Performance Testing"}, "2005": {"path": "/tests/title_rewrite_paraphrase/test_local.py:1-33", "hash": "c67c7bc075a03dfe7a6422f50cf7764a", "title": "Local Tokenizer and Model Loading with Preprocessing"}, "2006": {"path": "/tests/title_rewrite_paraphrase/test_local.py:34-75", "hash": "1edeb532719c742b88cecb191f00891d", "title": "Time-efficient Paraphrasing Model"}, "2007": {"path": "/tests/title_rewrite_paraphrase/test_local.py:76-77", "hash": "e33f9c424cf13d81ab422db50b780c92", "title": "Acceptable Time Range"}, "2008": {"path": "/tests/tkinter_tag_toggle_button/toggle_button.py", "hash": "6db0b17f0f2e1ee3ce79428e384aa97a", "title": "Tkinter Tag Toggle Button"}, "2009": {"path": "/tests/tkinter_tag_toggle_button/toggle_button.py:1-46", "hash": "3ecaa096999d92385c715c94acfdeae1", "title": "Tkinter Toggle Buttons"}, "2010": {"path": "/tests/tkinter_tag_toggle_button/toggle_button.py:47-67", "hash": "c058500e42bf087ca9ca92656d8fab23", "title": "Tkinter Tag Toggle Buttons for Video Editing"}, "2011": {"path": "/tests/topic_modeling/english_test.py", "hash": "d1c4050c032b793620bf3102b4c0113e", "title": "Multi-Library Text Processing for Topic Modeling"}, "2012": {"path": "/tests/topic_modeling/english_test.py:1-30", "hash": "7bb3bae3f266f3776ef5ba5c5976c7f7", "title": "Text Preprocessing with NLTK and Spacy"}, "2013": {"path": "/tests/topic_modeling/english_test.py:31-56", "hash": "c680e95a82525ea447db1150c5466242", "title": "Lemmatizing with TextBlob: Redundant and Unclear"}, "2014": {"path": "/tests/topic_modeling/english_test.py:57-66", "hash": "0a5e73d683d830bfa20ed98bb8bf29a9", "title": "Lemmatization in NLP Task"}, "2015": {"path": "/tests/topic_modeling/english_test.py:66-74", "hash": "a3fd575e7f28f92b87e510a49363017e", "title": "Tokenizing and Storing Lemmas"}, "2016": {"path": "/tests/topic_modeling/poc_english_preprocessing.py", "hash": "48ed548b47bc50895b827d1a21974856", "title": "English Text Preprocessing with spaCy"}, "2017": {"path": "/tests/topic_modeling/poc_english_preprocessing.py:1-27", "hash": "0484444184b69b2fd729ff63ca9ace19", "title": "English Preprocessing in Topic Modeling"}, "2018": {"path": "/tests/topic_modeling/poc_english_preprocessing.py:28-42", "hash": "e81c29dfebf76e2bd004273f2e05df5f", "title": "Stemming and Stop Words Removal"}, "2019": {"path": "/tests/topic_modeling/poc_english_topic_modeling.py", "hash": "6f574a84efefb5dc11b26eba736d7986", "title": "Topic Modeling with Python: Analyzing English Documents"}, "2020": {"path": "/tests/topic_modeling/poc_english_topic_modeling.py:1-27", "hash": "4e8383e628be53fba84d91576e87dcae", "title": "NLP Model Initialization and Preprocessing"}, "2021": {"path": "/tests/topic_modeling/poc_english_topic_modeling.py:28-71", "hash": "8ecd2afd5e31f5bf44d66ebcf4e53c30", "title": "Preprocessing and Vectorizing Text"}, "2022": {"path": "/tests/topic_modeling/poc_english_topic_modeling.py:72-99", "hash": "ffefb21ef48fae6b4f9f4796473b2e9f", "title": "Topic Modeling with CountVectorizer and LatentDirichletAllocation"}, "2023": {"path": "/tests/topic_modeling/poc_english_topic_modeling.py:100-106", "hash": "371a972cca62cae75b34a36c0452a2c6", "title": "Topic Distribution Analysis via LDA"}, "2024": {"path": "/tests/unittest_aegisub_ass_configure.py", "hash": "fbdf0c3d9a85c0e63911fd7258251207", "title": "Aegisub Ass Configure Test"}, "2025": {"path": "/tests/unittest_async_function_type.py", "hash": "aea839e296bab8a6028127d3bcfa7c85", "title": "Testing Async Function Types"}, "2026": {"path": "/tests/unittest_bezier_evaluate.py", "hash": "e70da32849a7f116ed1bc565caa4c11f", "title": "Testing Bezier Curve Evaluation"}, "2027": {"path": "/tests/unittest_bezier_evaluate.py:1-43", "hash": "2029471804e5753b6917f24aab6f1395", "title": "Bezier Curve Evaluator"}, "2028": {"path": "/tests/unittest_bezier_evaluate.py:44-44", "hash": "c9cd2bdbf1b860ee9c6b65ccbc636fc6", "title": "Printing Raw 'axis' Value"}, "2029": {"path": "/tests/unittest_bezier_fitting_bias_skew_baidu_resnet_animals_detection_hyperopt.py", "hash": "e672b78bea85cdd9d1657334cd9ef321", "title": "Bezier-Based Animal Detection with Hyperopt Optimization"}, "2030": {"path": "/tests/unittest_bezier_fitting_bias_skew_baidu_resnet_animals_detection_hyperopt.py:1-33", "hash": "6788940b49c01aa19015e074c7512366", "title": "Bezier Curve Function and Evaluation"}, "2031": {"path": "/tests/unittest_bezier_fitting_bias_skew_baidu_resnet_animals_detection_hyperopt.py:34-61", "hash": "b1fa4aeb8a551b2736e013be6427ee5b", "title": "Exponential Network Model for Inputs"}, "2032": {"path": "/tests/unittest_bezier_fitting_bias_skew_baidu_resnet_animals_detection_hyperopt.py:62-88", "hash": "5cbf07b0ee719c362fa893618a55d7c3", "title": "Animal Detection Probabilities Testing"}, "2033": {"path": "/tests/unittest_bezier_fitting_bias_skew_baidu_resnet_animals_detection_hyperopt.py:89-109", "hash": "95e968262d85a6ae177e7d96c0d9e906", "title": "Hyperopt Tuning Input Bias and Skew"}, "2034": {"path": "/tests/unittest_bezier_fitting_bias_skew_baidu_resnet_animals_detection_hyperopt.py:110-133", "hash": "3e32ef2ba5731849084edf8d58241651", "title": "Neural Network Fitting with Bezier Curve and Hyperopt"}, "2035": {"path": "/tests/unittest_bezier_fitting_bias_skew_baidu_resnet_animals_detection_hyperopt.py:134-167", "hash": "143727f020679a0841bea16ea4d82489", "title": "Optimizing Skew and Bias for Model Performance"}, "2036": {"path": "/tests/unittest_bezier_fitting_bias_skew_baidu_resnet_animals_detection_hyperopt.py:168-172", "hash": "48366d8c56ac0d8cf11e381dc05e855c", "title": "Evaluating Best Hyperparameters and Loss"}, "2037": {"path": "/tests/unittest_bilibili_login.py", "hash": "864fdcd5431f0b69170ca2a9535566c5", "title": "Bilibili Login Unit Test"}, "2038": {"path": "/tests/unittest_bilibili_recommendation_server.py", "hash": "9fd317daefe5d4d6e061cf569f97a35a", "title": "Bilibili Recommendation Server Tester"}, "2039": {"path": "/tests/unittest_bilibili_recommendation_server.py:1-33", "hash": "54a7c6c547f4337493cf2059df8387b6", "title": "Bilibili Recommendation Server Testing"}, "2040": {"path": "/tests/unittest_bilibili_recommendation_server.py:34-50", "hash": "547c2285bda8d46b33e8160f52840ca5", "title": "Bilibili Server Function Parameters"}, "2041": {"path": "/tests/unittest_bilibili_video_upload.py", "hash": "a88cab6f704a222ba4e03b7dff45c903", "title": "Bilibili Video Upload with FFmpeg"}, "2042": {"path": "/tests/unittest_bilibili_video_upload.py:1-29", "hash": "d36c066b130c35f8ab04f9f990c1926b", "title": "Bilibili Video Uploader with FFmpeg"}, "2043": {"path": "/tests/unittest_bilibili_video_upload.py:30-34", "hash": "c7488742887e7bc4357ffe0d3fb6254c", "title": "Testing Bilibili Video Upload with Credentials"}, "2044": {"path": "/tests/unittest_caer_fps_kitty_9.5.py", "hash": "db456612e29602e231af704e5261d824", "title": "Reading FPS with OpenCV and caer"}, "2045": {"path": "/tests/unittest_caer_get_gif_width_height.py", "hash": "341e792b74c00bf0039331c0d4308c16", "title": "Get GIF Width and Height from caer.video"}, "2046": {"path": "/tests/unittest_chain.py", "hash": "197112b1b33f56cde762d1b55efe4dc7", "title": "Unnecessary 'Chain' Module?"}, "2047": {"path": "/tests/unittest_check_video_corrput.py", "hash": "56b9d894bbed28b6827ad83306d6359c", "title": "Check Video Corruption with FFmpeg"}, "2048": {"path": "/tests/unittest_cirular_import.py", "hash": "4aeb4a588c965708c4472634746beccf", "title": "Circular Import Testing"}, "2049": {"path": "/tests/unittest_clean_lrc.py", "hash": "bae6dc80d0f8fd2240b56ca7eb952cf9", "title": "LRC Lyrics Format Cleaner"}, "2050": {"path": "/tests/unittest_clean_lrc.py:1-10", "hash": "732ff4f6309925722e180d5658ef6ddc", "title": "Time-Stamped LRC Creation Test"}, "2051": {"path": "/tests/unittest_clean_lrc.py:12-46", "hash": "99fd77ea5bea2ac219debdc2029e528f", "title": "LRC Lyrics Validator"}, "2052": {"path": "/tests/unittest_clean_lrc.py:47-78", "hash": "1474bc9be661f8ebc010f7ef5854e6b2", "title": "Parse LRC and Validate Times"}, "2053": {"path": "/tests/unittest_clean_lrc.py:79-98", "hash": "5f1b52032db27d31e67dc1d1c76abd6f", "title": "LRC Format Generator"}, "2054": {"path": "/tests/unittest_convolution_bilibili_translate_text_detect.py", "hash": "ddb33ab4087323def4065af56aa884f8", "title": "Image Processing Pipeline"}, "2055": {"path": "/tests/unittest_convolution_bilibili_translate_text_detect.py:1-41", "hash": "b470d61112945307bf94921d2f60b026", "title": "Retrieving Video Dimensions from JSON"}, "2056": {"path": "/tests/unittest_convolution_bilibili_translate_text_detect.py:44-86", "hash": "bfc489786988c52381cf11fdef4e7615", "title": "Blurred Image Averaging for Convolution"}, "2057": {"path": "/tests/unittest_convolution_bilibili_translate_text_detect.py:87-111", "hash": "1fb9951f53e99172c153b5885f650d17", "title": "Bounding Box Processing and NMS"}, "2058": {"path": "/tests/unittest_convolution_bilibili_translate_text_detect.py:112-142", "hash": "6f167a4ac3a5c8148b60051ebf1c460e", "title": "Bounding Box Detection Algorithm"}, "2059": {"path": "/tests/unittest_convolution_bilibili_translate_text_detect.py:143-156", "hash": "da94e684ae0c3ade2f703435c92252b9", "title": "Bounding Box Visualization & Image Display"}, "2060": {"path": "/tests/unittest_cv2_rectangle.py", "hash": "1208f46b9da882a90c7b34ca7b777974", "title": "Draw Rectangle on Black Image"}, "2061": {"path": "/tests/unittest_extract_cat_cover_from_video.py", "hash": "f6c0c52c138ff366aa6c498f35c221b5", "title": "Automated Bilibili Pet Video Cover Extractor"}, "2062": {"path": "/tests/unittest_extract_cat_cover_from_video.py:1-42", "hash": "485fcd57d94403fc39562b65594415b8", "title": "Download Bilibili Video with yt_dlp"}, "2063": {"path": "/tests/unittest_extract_cat_cover_from_video.py:43-74", "hash": "3124aa38197ebbb6e693c89bcf1c98f3", "title": "Video Cover Extractor: Efficiency Enhancement"}, "2064": {"path": "/tests/unittest_extract_cat_cover_from_video.py:75-88", "hash": "0bc4d7ddb45bb53c636c5f2f6f187a96", "title": "Video Clear Frame Detection"}, "2065": {"path": "/tests/unittest_extract_tags_tfidf.py", "hash": "e44ea4c2454e453559e711694f3bbf87", "title": "Chinese Text Tag Extraction using Jieba and NLTK"}, "2066": {"path": "/tests/unittest_ffmpegVideoPreProductionFilter.py", "hash": "a2e49b4274accf7861fd6c6513e889db", "title": "Video Pre-Production Filter Testing"}, "2067": {"path": "/tests/unittest_ffmpegVideoPreProductionFilter.py:1-34", "hash": "494c584769850bb8cebb64ca38bc1f3a", "title": "Initializing FFmpeg Video Filter Unit Tests"}, "2068": {"path": "/tests/unittest_ffmpegVideoPreProductionFilter.py:35-64", "hash": "ee1cba049a310879a0c24868acd77469", "title": "Temporary Directory and Unique Cache File Generation"}, "2069": {"path": "/tests/unittest_ffmpegVideoPreProductionFilter.py:65-97", "hash": "69a4b95823a444715dc042ff3e38ccf8", "title": "Text Detection Test with FFmpeg Filters"}, "2070": {"path": "/tests/unittest_ffmpegVideoPreProductionFilter.py:98-117", "hash": "2b3995c65ae2f1be6b63988d528fed30", "title": "Iterative Video Filter Testing"}, "2071": {"path": "/tests/unittest_ffmpeg_args.py", "hash": "dcd7ddfc3ac28e6c2f36badad73b17bd", "title": "FFmpeg Video Processing with Python"}, "2072": {"path": "/tests/unittest_ffmpeg_args.py:1-23", "hash": "3c8642e28c9a4009f18f61b09c79a5c7", "title": "Split, Filter, and Scale Video with FFmpeg"}, "2073": {"path": "/tests/unittest_ffmpeg_args.py:23-48", "hash": "aed85ef2934ede9694108f85da1f819f", "title": "FFmpeg Video Concatenation Commands"}, "2074": {"path": "/tests/unittest_ffmpeg_args.py:49-84", "hash": "7e040e56b23e536165120afeb512700f", "title": "Video Processing with FFmpeg Commands"}, "2075": {"path": "/tests/unittest_ffmpeg_args.py:85-98", "hash": "f5e13e1a771811ebfb7b6ff4b07612ae", "title": "Video Processing with FFmpeg Filters and Concatenation"}, "2076": {"path": "/tests/unittest_ffmpeg_args.py:99-107", "hash": "4549959c15a41e71a40a0812ce6c5c0e", "title": "Subprocess Running FFmpeg Command"}, "2077": {"path": "/tests/unittest_ffmpeg_cropdetect_from_image_parse_log.py", "hash": "d01695e348684ce4978f603dafbfcccf", "title": "Threshold-Based Image Cropping with FFmpeg and OpenCV"}, "2078": {"path": "/tests/unittest_ffmpeg_cropdetect_from_image_parse_log.py:1-40", "hash": "41a03c5d092bfb1c4809ceacb9109e1f", "title": "Extracting Crops from Image with FFmpeg"}, "2079": {"path": "/tests/unittest_ffmpeg_cropdetect_from_image_parse_log.py:40-62", "hash": "c03177e9ee7ff66a8042b2958fd98b75", "title": "Crop Log Parser and Dimension Extractor"}, "2080": {"path": "/tests/unittest_ffmpeg_cropdetect_from_image_parse_log.py:63-78", "hash": "a17da96d2adb23e7b24e98cc5ae346a5", "title": "Image Crop Ratio Threshold Detector"}, "2081": {"path": "/tests/unittest_ffmpeg_delogo_parser.py", "hash": "cd7331e814eab822535a243cd3855893", "title": "Delogo Parser: Parsing & Filtering Video Streams"}, "2082": {"path": "/tests/unittest_ffmpeg_delogo_parser.py:1-20", "hash": "7e274de27f6ab38adfa586d84fa91d00", "title": "Delogo Parser and Filter for FFmpeg"}, "2083": {"path": "/tests/unittest_ffmpeg_delogo_parser.py:21-64", "hash": "939e474d20b7e2b4c9eb489612a96064", "title": "FFmpeg Delogo Filter Parser Test"}, "2084": {"path": "/tests/unittest_ffmpeg_delogo_parser.py:65-83", "hash": "b66151bf74f681da42546ce3837f8ad9", "title": "Delogo Filter: Extracting and Removing Logos"}, "2085": {"path": "/tests/unittest_ffmpeg_overlay_boxblur.py", "hash": "7c4b038243bab04fb98dcefdd9a54fb3", "title": "FFmpeg Overlay Boxblur Testing"}, "2086": {"path": "/tests/unittest_ffmpeg_overlay_boxblur.py:1-40", "hash": "c1429cb598807ca01a8d3ec06010c5b1", "title": "Gaussian Blur and Overlay with FFmpeg"}, "2087": {"path": "/tests/unittest_ffmpeg_overlay_boxblur.py:42-54", "hash": "f4cdf48b9237a3f277715ca7f4194999", "title": "Temporary FFmpeg Output in Python"}, "2088": {"path": "/tests/unittest_full_text_search_peewee_sqlite.py", "hash": "4a2b96067f6c1bbd081ce07a7ddc2877", "title": "Peewee SQLite Full-Text Search Demo"}, "2089": {"path": "/tests/unittest_full_text_search_peewee_sqlite.py:1-42", "hash": "9b27eb8a7793c04e5978abf71963a559", "title": "Peewee SQLite Full-Text Search Setup"}, "2090": {"path": "/tests/unittest_full_text_search_peewee_sqlite.py:43-68", "hash": "c3d3225e683ee8cacf000359426eea33", "title": "Full-Text Search Test with Python and Bilibili"}, "2091": {"path": "/tests/unittest_get_subtid_name_and_majortid_name.py", "hash": "c4061324334e3f4d10bd72768e6e5509", "title": "Getting Major and Minor Topic IDs for TID 1"}, "2092": {"path": "/tests/unittest_get_subtid_name_and_majortid_name.py:1-26", "hash": "c111b7a91eb2ab7badfdfc03e3788949", "title": "Retrieve Major/Minor Topics from Dictionary"}, "2093": {"path": "/tests/unittest_get_subtid_name_and_majortid_name.py:27-49", "hash": "efa20c8a6519583a145357a3b3a49783", "title": "Retrieve and Format Topic Tags"}, "2094": {"path": "/tests/unittest_houghline_dog_blur_detection.py", "hash": "2422bc6e1a7722b8beb8759260220a26", "title": "Hough Line Detection for Edge Lines in Images"}, "2095": {"path": "/tests/unittest_houghline_dog_blur_detection.py:1-28", "hash": "7be32ec8e44d97cbbf59632ecf41493b", "title": "Blur Detection and Edge Detection Algorithm"}, "2096": {"path": "/tests/unittest_houghline_dog_blur_detection.py:29-43", "hash": "6029b78bef922f11240a9836c8fa1431", "title": "Line Detection with Hough Transform"}, "2097": {"path": "/tests/unittest_lazero_external_downloader.py", "hash": "72119100852ad507d81f2a17d7fa7103", "title": "File Downloader and Deleter"}, "2098": {"path": "/tests/unittest_mathlib_ranges_continual.py", "hash": "d7afc4bdc82bea14bac0584484418dda", "title": "Mathlib Ranges Continual Merging"}, "2099": {"path": "/tests/unittest_music_recognition.py", "hash": "85f8c7518df9cc02d524438ecee9d2f6", "title": "Unit Test: Music Recognition Backends"}, "2100": {"path": "/tests/unittest_musictoolbox_netease_music_lyric.py", "hash": "14bf6cf767ea3408415fca31de19c0b7", "title": "NeteaseMusic API Lyrics Test"}, "2101": {"path": "/tests/unittest_nsfw_video_score.py", "hash": "f3261eec633942f58263cdddb2d8c96c", "title": "NSFW Content Detection and Posting API"}, "2102": {"path": "/tests/unittest_nsfw_video_score.py:1-44", "hash": "ea4c1bb90fb43e41c32ad9249de314af", "title": "Test NSFW Image Classification Tool"}, "2103": {"path": "/tests/unittest_nsfw_video_score.py:45-80", "hash": "6de733673014368d01ce216f19af2fbb", "title": "Filtered NSFW Video Scores"}, "2104": {"path": "/tests/unittest_nsfw_video_score.py:81-108", "hash": "58f65922ea802f158e4dff6174061e68", "title": "NSFW Video Frame Display Test"}, "2105": {"path": "/tests/unittest_nsfw_video_score.py:109-130", "hash": "d5ce47442526fdca16f7bb0eef6d14bc", "title": "NSFW Video Frame Classifier"}, "2106": {"path": "/tests/unittest_nsfw_video_score.py:131-149", "hash": "e35682b1d6034dbea56ba71e4e14443c", "title": "NSFW Video Test Evaluation"}, "2107": {"path": "/tests/unittest_nsfw_video_score.py:149-154", "hash": "a2ae2a7acebe543faa67e5ca5b8e563d", "title": "NSFW Content Classification Model Test"}, "2108": {"path": "/tests/unittest_nsfw_video_score.py:155-161", "hash": "e71ee8cda53ce1f9bfefead230c2f70c", "title": "Testing NSFW Image Classifier Accuracy"}, "2109": {"path": "/tests/unittest_nsfw_video_score.py:161-170", "hash": "0cb1a682af036446796d5696c4b130f8", "title": "NSFW Image Padding and Classification"}, "2110": {"path": "/tests/unittest_nsfw_video_score.py:171-180", "hash": "f5806110dc80424b0c7c291a7b5c7582", "title": "NSFW Video Classification and Image Posting"}, "2111": {"path": "/tests/unittest_ocr_filter_large_area_of_text.py", "hash": "f6f81fc8194127b125d0f2bf119c4b53", "title": "OCR Image Rectangle Detection"}, "2112": {"path": "/tests/unittest_ocr_filter_large_area_of_text.py:1-37", "hash": "e3e27e42dc5ac1553e10b1308928166a", "title": "Setting Up for OCR Detection"}, "2113": {"path": "/tests/unittest_ocr_filter_large_area_of_text.py:38-50", "hash": "89014090d4a75769383fd03b1f135454", "title": "Text Area Percentage Calculator"}, "2114": {"path": "/tests/unittest_online_topic_generator_giphy.py", "hash": "f29373e04d4a57291b45aed651271dda", "title": "Giphy Online Topic Generator"}, "2115": {"path": "/tests/unittest_online_topic_generator_giphy.py:1-36", "hash": "1f491d6e41ac8a0b82ec4cec97eac20a", "title": "Testing Online Topic Generator with GIPHY"}, "2116": {"path": "/tests/unittest_online_topic_generator_giphy.py:37-61", "hash": "460ad6bc2b31d72d68650805fe248d77", "title": "Multithreaded Asset Download with Error Handling"}, "2117": {"path": "/tests/unittest_online_topic_generator_giphy.py:62-85", "hash": "ec9d745a6fb325f13cf3fa6ea9c7dd26", "title": "Video Filtering Algorithm"}, "2118": {"path": "/tests/unittest_online_topic_generator_giphy.py:86-111", "hash": "c6a74289aadde8957ec66e1d6a26ebd2", "title": "Video Filter Criteria and Thresholds"}, "2119": {"path": "/tests/unittest_online_topic_generator_giphy.py:112-131", "hash": "ef3f2e9cb058f35713ee9b44aa0ed575", "title": "Video Filtering and Validation"}, "2120": {"path": "/tests/unittest_paddlehub_animal_resnet.py", "hash": "3dd518a177a643ca4a80a1eb3e59b7a7", "title": "Animal ResNet Classifier: Testing PaddleHub Model"}, "2121": {"path": "/tests/unittest_paddlehub_animal_resnet.py:1-32", "hash": "024ca0cd88e5ad919479711b3b40fc31", "title": "Dog and Cat Labels Data Preprocessing"}, "2122": {"path": "/tests/unittest_paddlehub_animal_resnet.py:33-78", "hash": "9a6b4af72335881767162e8f2efa7e4f", "title": "Dog/Cat Name Recognizer: PaddleHub-Animal ResNet"}, "2123": {"path": "/tests/unittest_paddlehub_animal_resnet.py:79-100", "hash": "353a20de445b4ff1208a6a5d3bbadd05", "title": "Video Animal Classification with PaddleHub's ResNet Model"}, "2124": {"path": "/tests/unittest_paddlehub_animal_resnet.py:101-114", "hash": "a28a4222ff14dd77bf2851eb539aff78", "title": "Animal Recognition Model Testing & Improvement"}, "2125": {"path": "/tests/unittest_paddlehub_animal_resnet.py:115-134", "hash": "0e2adcf3b932fe6ec543abee526fd7ae", "title": "Image Classifier Accuracy Test"}, "2126": {"path": "/tests/unittest_photo_histogram_match_0.2.py", "hash": "055dcfe66448c7cda6051ea28e95dcfc", "title": "Image Processing Algorithms Demo"}, "2127": {"path": "/tests/unittest_photo_histogram_match_0.2.py:1-38", "hash": "4c612397fedf57b9632623c06bd720f7", "title": "Inpainting-based Text Removal"}, "2128": {"path": "/tests/unittest_photo_histogram_match_0.2.py:40-60", "hash": "cbfe504cbff324d3d1f502a42cb055b7", "title": "Image Processing Pipeline"}, "2129": {"path": "/tests/unittest_property_decorator.py", "hash": "8715a844b3c224f0dbc4eac8a60b5231", "title": "Dynamic Property Increment"}, "2130": {"path": "/tests/unittest_sqlalchemy_1.3_alternative_wrapper_peewee.py", "hash": "9cbaab1b156909f622367a129cb03f13", "title": "Peewee SQLite Database CRUD with Bilibili Videos"}, "2131": {"path": "/tests/unittest_sqlalchemy_1.3_alternative_wrapper_peewee.py:1-39", "hash": "6f38cdd70f6f04d538f29142844960ae", "title": "Peewee SQLite Database and Models Setup"}, "2132": {"path": "/tests/unittest_sqlalchemy_1.3_alternative_wrapper_peewee.py:40-71", "hash": "60ff49e4166caa366261c670ca898796", "title": "Peewee Tables and Fields Code Snippet"}, "2133": {"path": "/tests/unittest_sqlalchemy_1.3_alternative_wrapper_peewee.py:73-102", "hash": "01be92c8296bd3d5716db83e6ba7be33", "title": "Peewee User and Bilibili Video Checker"}, "2134": {"path": "/tests/unittest_sqlalchemy_1.3_alternative_wrapper_peewee.py:103-139", "hash": "2af16f4c3d48ca5f44dc7c456d29bc42", "title": "Peewee Model CRUD Operations with SQLAlchemy"}, "2135": {"path": "/tests/unittest_sqlalchemy_1.3_alternative_wrapper_peewee.py:140-146", "hash": "6a5f3237d2ddf6001fbefda8c1fb5e5d", "title": "Peewee Test for Username None Error"}, "2136": {"path": "/tests/unittest_tempfile_generator.py", "hash": "7f415b7bee89582adda98bf2009f84c2", "title": "Tempfile Generator and Reader"}, "2137": {"path": "/tests/unittest_translate_lyrictoolbox.py", "hash": "dfc4cfb08ff37f47f270b5d99bd9884e", "title": "Pyjom Lyric Translation Unit Test"}, "2138": {"path": "/tests/unittest_update_peewee_while_get.py", "hash": "c6240e5a41919d7fbabdc1c2d06c9c01", "title": "Updating Bilibili Username with Peewee"}, "2139": {"path": "/tests/unittest_video_cover_extraction_dog_cat_detections.py", "hash": "61464c523efaf75bc00e301ccf2874ce", "title": "YOLOv5 Dog & Cat Cover Detection"}, "2140": {"path": "/tests/unittest_video_cover_extraction_dog_cat_detections.py:1-31", "hash": "015477424c76a20156d285d75a1373db", "title": "YOLOv5 Dog & Cat Detection and Image Processing"}, "2141": {"path": "/tests/unittest_video_cover_extraction_dog_cat_detections.py:32-67", "hash": "18dae088c883a8341cc93552e8ec8e77", "title": "Dog Detection via YOLOv5 Inference"}, "2142": {"path": "/tests/unittest_video_cover_extraction_dog_cat_detections.py:69-98", "hash": "0bf83e28408677dd1ece5422da629ebb", "title": "Filtering and Cropping Animal Detections"}, "2143": {"path": "/tests/unittest_video_cover_extraction_dog_cat_detections.py:99-122", "hash": "f7b8f7658c7a7ff4cf217fa7b8cd115a", "title": "Image Crop and Resize Algorithm"}, "2144": {"path": "/tests/unittest_video_cover_extraction_dog_cat_detections.py:123-141", "hash": "49fe503fc1bfa80f97201a045e252cba", "title": "Dog-Cat Detection Covers"}, "2145": {"path": "/tests/unittest_video_sampler.py", "hash": "5215410e9aa3345df78c9b2eab494758", "title": "Video Sampler Testing"}, "2146": {"path": "/tests/unittest_yolov5_dog_cat_filter_filesystemreviewer.py", "hash": "5c6d3333e8466c8c96838ecb1add6cde", "title": "YOLOv5 and PaddleResnet50 Animals Classifier Test Suite"}, "2147": {"path": "/tests/unittest_yolov5_dog_cat_filter_filesystemreviewer.py:1-26", "hash": "c8c130877ae9bfabb29aeb73d2a58a3f", "title": "Extracting YOLOv5 Detection Data"}, "2148": {"path": "/tests/unittest_yolov5_dog_cat_filter_filesystemreviewer.py:27-51", "hash": "2cc60228fba749f69989115c6d9e5346", "title": "YOLOv5 Frame Detection Data Processing"}, "2149": {"path": "/tests/unittest_yolov5_dog_cat_filter_filesystemreviewer.py:52-84", "hash": "149016ecf65218bf79549c6c308250d4", "title": "Max-Mean Detection Confidence Calculator"}, "2150": {"path": "/tests/unittest_yolov5_dog_cat_filter_filesystemreviewer.py:85-108", "hash": "b88c2463f862596184cfc2ffc78fbf8b", "title": "Dog-Cat Detection and Reporting Tool"}, "2151": {"path": "/tests/unittest_yolov5_dog_cat_filter_filesystemreviewer.py:109-138", "hash": "07a07e755c2aed2879877ca779d6a852", "title": "Confidence-Based Category Filtering"}, "2152": {"path": "/tests/unittest_yolov5_dog_cat_filter_filesystemreviewer.py:139-175", "hash": "6d5b68b5c0c8bc801b26545dd6321a93", "title": "Yolov5 Filter Logic Testing"}, "2153": {"path": "/tests/unittest_yolov5_dog_cat_filter_filesystemreviewer.py:176-207", "hash": "8d43eeab5ced6499df899463efb58115", "title": "FilesystemReviewer for YoloV5 Detection Data"}, "2154": {"path": "/tests/unittest_yolov5_dog_cat_filter_filesystemreviewer.py:208-242", "hash": "7fd0221c4a940cc8b0da59f152c74b14", "title": "Video Confidence Filter with PaddleHub's ResNet50 Animals Classifier"}, "2155": {"path": "/tests/unittest_yolov5_dog_cat_filter_filesystemreviewer.py:243-280", "hash": "188c3a1280e05710557a4d7bba177f44", "title": "Dog and Cat Video Filter"}, "2156": {"path": "/tests/unittest_yolov5_dog_cat_filter_filesystemreviewer.py:281-312", "hash": "8a3427aa785c36c258fc1acd20fc881f", "title": "Dog vs. Cat Name Recognizer"}, "2157": {"path": "/tests/unittest_yolov5_dog_cat_filter_filesystemreviewer.py:314-334", "hash": "eeba7c41e7cc612c8a3e5d6b1830bd8b", "title": "Dog and Cat Detection from Video Frames"}, "2158": {"path": "/tests/unittest_yolov5_dog_cat_filter_filesystemreviewer.py:335-356", "hash": "b8532edac2a8c0b867880e02d1ce0479", "title": "YOLOv5 Dog/Cat Filter Test"}, "2159": {"path": "/tests/unittest_yolov5_dog_cat_filter_filesystemreviewer.py:357-374", "hash": "7752088fcd3c8f811537e89e1cf65d11", "title": "Yolov5 Filter with Bezier and Resnet"}, "2160": {"path": "/tests/update_progressbar_network/client.py", "hash": "5b1c73359bd2abacff6634220517ed03", "title": "Network Progress Bar Client"}, "2161": {"path": "/tests/update_progressbar_network/load_session.sh", "hash": "d6603df772aec5f0d692492397e03178", "title": "Efficient Terminal Session Management with tmux"}, "2162": {"path": "/tests/update_progressbar_network/test.py", "hash": "22a3729f884ccd12ea6896f030142365", "title": "Network Progress Bar Updates with FastAPI"}, "2163": {"path": "/tests/update_progressbar_network/test.py:1-46", "hash": "871186be1dfe76cea1a19738acd6462c", "title": "FastAPI Progress Bar via Network Endpoints"}, "2164": {"path": "/tests/update_progressbar_network/test.py:47-56", "hash": "46b573f355737cac78ffcad289112c06", "title": "Closing Progressbar with GET Route"}, "2165": {"path": "/tests/update_progressbar_network/test.sh", "hash": "527a0f39d3be724b90588554a8776fde", "title": "Uvicorn Server Setup"}, "2166": {"path": "/tests/update_progressbar_network/test.yaml", "hash": "6b15f1ca9ff4e99293464a1ae131ccf7", "title": "Dual-Pane Tmux Testing Setup"}, "2167": {"path": "/tests/vapoursynth_linux_test/basic_test.py", "hash": "7f2c0644c68b6c68c1d875286209baad", "title": "VapourSynth Python Test: Video Transpose"}, "2168": {"path": "/tests/vapoursynth_linux_test/cloneBasicRepo.sh", "hash": "11422bf79d6012dee225d8ce73ae7807", "title": "Linux/macOS Software Components Cloning"}, "2169": {"path": "/tests/vapoursynth_linux_test/denoise_and_upscale_samoyed.py", "hash": "a16cbd90fe711a94ecb3d7ec88c00d97", "title": "Enhancing Samoyed Videos with OpenCV"}, "2170": {"path": "/tests/vapoursynth_linux_test/denoise_and_upscale_samoyed.py:1-36", "hash": "effa42977b6e4f24435e347def0be2a8", "title": "Improved GIF Quality with BM3D Denoising"}, "2171": {"path": "/tests/vapoursynth_linux_test/denoise_and_upscale_samoyed.py:38-68", "hash": "0312c695c3b83207e2cc880e28ea4f49", "title": "Denoise & Upscale Samoyed Video with VapourSynth"}, "2172": {"path": "/tests/vapoursynth_linux_test/denoise_and_upscale_samoyed.py:69-87", "hash": "bdef618f6ed85c17a5d5741219515ba7", "title": "Denoising and Upscaling Dog Videos"}, "2173": {"path": "/tests/vapoursynth_linux_test/ffmpeg_pip_examine.sh", "hash": "ad09d482f54bf9f18deb125f26e61ed9", "title": "FFmpeg Pip Screenshots"}, "2174": {"path": "/tests/vapoursynth_linux_test/improve_video_quality.sh", "hash": "3e013ca8f35fe1123d3af7a21e465872", "title": "Upscaling Videos with vspipe and ffmpeg"}, "2175": {"path": "/tests/vapoursynth_linux_test/make_vapoursynth_autoload.sh", "hash": "f8a5b7206052a5617e7e7f66b307c3b5", "title": "Preparing VapourSynth on Linux"}, "2176": {"path": "/tests/vapoursynth_linux_test/motion_estimation.sh", "hash": "4eb0feaadd3ecc3f9547bcb42260f93c", "title": "Motion Estimation with FFmpeg"}, "2177": {"path": "/tests/vapoursynth_linux_test/pip_examine.sh", "hash": "4f5f890513fec5d1b6d72e3ad87f26c7", "title": "Capture and Save Screenshots at Specific Timestamps"}, "2178": {"path": "/tests/vapoursynth_linux_test/pip_examine.sh:1-7", "hash": "506c37e57bd800e6a2f60cc6a532a9fa", "title": "FFmpeg Screenshot Capture Script"}, "2179": {"path": "/tests/vapoursynth_linux_test/pip_examine.sh:8-14", "hash": "7f3c471e2b4e89f0bdea815c16071cb5", "title": "Screenshot Video Timestamps"}, "2180": {"path": "/tests/vapoursynth_linux_test/pip_examine.sh:15-21", "hash": "7b53747002ec13b0e8d2d67efdbd87b6", "title": "Capture Screenshots with FFmpeg Script"}, "2181": {"path": "/tests/vapoursynth_linux_test/pip_examine.sh:22-28", "hash": "181b98938bf1eebc053bfd566e904671", "title": "FFmpeg Screenshot Capture Script"}, "2182": {"path": "/tests/vapoursynth_linux_test/pip_examine.sh:29-35", "hash": "7966d7a2d2e4e404f418452aa87cb13a", "title": "Capture Screenshots with FFmpeg"}, "2183": {"path": "/tests/vapoursynth_linux_test/pip_examine.sh:36-42", "hash": "91f6d88b2bd8e7602ec87918adda5038", "title": "Screenshot Video Timestamps"}, "2184": {"path": "/tests/vapoursynth_linux_test/pip_examine.sh:43-49", "hash": "fbfbe0080353fc80e73cc43aa7da093e", "title": "FFmpeg Screenshot Capture Script"}, "2185": {"path": "/tests/vapoursynth_linux_test/pip_examine.sh:50-56", "hash": "c889e67103680e6ac1695da3ef56b36a", "title": "Capture Screenshots with FFmpeg"}, "2186": {"path": "/tests/vapoursynth_linux_test/pip_examine.sh:57-63", "hash": "a00b1c729e6e5056558936f0702d2ba3", "title": "FFmpeg Screenshots from Video Timestamps"}, "2187": {"path": "/tests/vapoursynth_linux_test/pip_examine.sh:64-70", "hash": "6f53e4c71dd1e8bf7fd13acd5558d088", "title": "Screenshot Video with FFmpeg"}, "2188": {"path": "/tests/vapoursynth_linux_test/pip_examine.sh:71-77", "hash": "762cadc274e644477c4fc7c6f09f951d", "title": "Screenshot Video Intervals with FFmpeg"}, "2189": {"path": "/tests/vapoursynth_linux_test/pip_examine.sh:78-84", "hash": "5322d5f2dd85508b017b23a1d1a5af3e", "title": "Video Frame Cropper: Screenshot Extractor with FFmpeg"}, "2190": {"path": "/tests/vapoursynth_linux_test/pip_examine.sh:85-91", "hash": "96e422eeb6153d3763ec5efa9f04a8c2", "title": "Screenshot Video with FFmpeg"}, "2191": {"path": "/tests/vapoursynth_linux_test/pip_examine.sh:92-97", "hash": "4d2f3c6eb0b7a9685a1b26b540318a20", "title": "Video Screenshot Capture Script"}, "2192": {"path": "/tests/vapoursynth_linux_test/previewTestVideo.sh", "hash": "4defa202ec2187eaebc01cdf463b0943", "title": "Linux VapourSynth Preview Test"}, "2193": {"path": "/tests/vapoursynth_linux_test/pure_ffmpeg_interpolate_resolution_denoise.sh", "hash": "b2f233827fc22f75e8200943f81aecec", "title": "AI-Enhanced Video Processing with FFmpeg and TensorFlow"}, "2194": {"path": "/tests/vapoursynth_linux_test/pure_ffmpeg_interpolate_resolution_denoise.sh:1-13", "hash": "ced6a58b34cb7dc5907a942417a36726", "title": "GIF Super-Resolution with FFmpeg, TensorFlow"}, "2195": {"path": "/tests/vapoursynth_linux_test/pure_ffmpeg_interpolate_resolution_denoise.sh:13-27", "hash": "54160376ac2c48b03712b9e0a1f75d34", "title": "Super Resolution with FFmpeg"}, "2196": {"path": "/tests/vapoursynth_linux_test/scene_change_detection.sh", "hash": "906694038d121fb0aa5f101ef47d0ef4", "title": "Scene Change Detection via FFmpeg Script"}, "2197": {"path": "/tests/vapoursynth_linux_test/test.sh", "hash": "06d526da4acd7a2f32101de5bde37586", "title": "Vspipe Linux Test"}, "2198": {"path": "/tests/vapoursynth_linux_test/test_ffmpeg_docker.sh", "hash": "1686fa656ef7a96da20604adceaa33e0", "title": "Upscale Video with FFmpeg-Tensorflow Docker"}, "2199": {"path": "/tests/vapoursynth_linux_test/view_test.py", "hash": "7560f3d4cc43d8d4a43d4163f4b5d07e", "title": "VapourSynth Preview Issue on Linux"}, "2200": {"path": "/tests/vapoursynth_linux_test/view_test.py:1-23", "hash": "cc2b322f2485d354d61d68e95d5270da", "title": "VapourSynth Linux View Test"}, "2201": {"path": "/tests/vapoursynth_linux_test/view_test.py:24-28", "hash": "aaa790c582127f344d6582ef718adb2e", "title": "VapourSynth Preview Problem"}, "2202": {"path": "/tests/video_detector_tests/cocoNames.py", "hash": "e6229144794d866b9524d124e7bd209a", "title": "MS COCO Dictionaries for Image Classification"}, "2203": {"path": "/tests/video_detector_tests/cocoNames.py:1-64", "hash": "f89be6abc4029161e0b35bf88c385b7c", "title": "COCO Name Dictionary for Image Class"}, "2204": {"path": "/tests/video_detector_tests/cocoNames.py:65-83", "hash": "7169a5505fa94a07ec53c8b1d23b5e80", "title": "Mapping COCO Names to Indexes"}, "2205": {"path": "/tests/video_detector_tests/detectron2_model_zoo_url.py", "hash": "71ae02eacfccacdbfa9ec127c5390ac8", "title": "Detectron2 COCO Model Mapping and URLs"}, "2206": {"path": "/tests/video_detector_tests/detectron2_model_zoo_url.py:2-20", "hash": "879c8cef5aee19b7d4ed3f9e225095c9", "title": "Detectron2 Model URL Mapping"}, "2207": {"path": "/tests/video_detector_tests/detectron2_model_zoo_url.py:21-34", "hash": "45f5f3036095e2e0e626bcc7fb131b8a", "title": "Detectron2 Models: URLs and Mapping"}, "2208": {"path": "/tests/video_detector_tests/detectron2_model_zoo_url.py:35-45", "hash": "cdf2ce6e72cee83d9208a0d7d9b8e3a6", "title": "Detectron2 Model Mapping and Training Enhancements"}, "2209": {"path": "/tests/video_detector_tests/detectron2_model_zoo_url.py:46-56", "hash": "52c593f53fe7de992a598acd07277352", "title": "Detectron2 Model Mapping"}, "2210": {"path": "/tests/video_detector_tests/detectron2_model_zoo_url.py:57-67", "hash": "865a6f2303b85bbc6dec5be81d18bb7e", "title": "Detectron2 Model Checkpoints"}, "2211": {"path": "/tests/video_detector_tests/detectron2_model_zoo_url.py:68-81", "hash": "daa96276b5540152fa1745b992b1cf69", "title": "Detectron2 Model Configs and Checkpoints"}, "2212": {"path": "/tests/video_detector_tests/detectron2_model_zoo_url.py:82-107", "hash": "b3889748b7c4a14cad2f1ed79c65d82b", "title": "Detectron2 URL Mapping Function"}, "2213": {"path": "/tests/video_detector_tests/detectron2_model_zoo_url.py:108-122", "hash": "4c9422327a56472af06194a0611c94fc", "title": "Detectron2 Model URL Fetcher"}, "2214": {"path": "/tests/video_detector_tests/detectron2_norfair.py", "hash": "6262fd21e5988f935a2bf33f2ad4168d", "title": "Detectron2 Object Detection in Video"}, "2215": {"path": "/tests/video_detector_tests/detectron2_norfair.py:1-21", "hash": "503435573b694b32680299221bb99079", "title": "Detectron2 Object Detection Setup"}, "2216": {"path": "/tests/video_detector_tests/detectron2_norfair.py:23-48", "hash": "76fecc21c878064662c5c80355e9ad2a", "title": "Video Detector Test: Detectron2 Norfair"}, "2217": {"path": "/tests/video_detector_tests/detectron2_norfair.py:49-68", "hash": "348b21dec92c0c7df7874bb13c6b5255", "title": "Detecting Persons and Dogs with Detectron2"}, "2218": {"path": "/tests/video_detector_tests/detectron2_norfair.py:69-97", "hash": "a714c8e300a1a16da9db720d19328ac5", "title": "Bounding Boxes and Labels with OpenCV"}, "2219": {"path": "/tests/video_detector_tests/detectron2_norfair.py:98-106", "hash": "0dab5c74716139c02ff9b8c1f0c61070", "title": "OpenCV Video Display and Key Input"}, "2220": {"path": "/tests/video_detector_tests/frameDifference.py", "hash": "99eedfd66496ce5116eeee2f8a972042", "title": "Motion Detection in Video: FrameDifference"}, "2221": {"path": "/tests/video_detector_tests/frameDifference.py:1-30", "hash": "618a33232001a6d077f9c4080fdcaa1a", "title": "Video Motion Detection Algorithm"}, "2222": {"path": "/tests/video_detector_tests/frameDifference.py:32-46", "hash": "b74e38f69813ece3a16b4cf8909d2c76", "title": "Frame Difference Video Display"}, "2223": {"path": "/tests/video_detector_tests/mathlib.py", "hash": "35b4f00440b54eace86309195653e07c", "title": "Merging Intervals with Sympy"}, "2224": {"path": "/tests/video_detector_tests/mathlib.py:1-28", "hash": "e6fa63e82af14cc167386967664f8f13", "title": "Interval Operations and Merging with Sympy"}, "2225": {"path": "/tests/video_detector_tests/mathlib.py:29-55", "hash": "206039a0550568d5caced897318edd8e", "title": "Merge Overlapping Intervals in List"}, "2226": {"path": "/tests/video_detector_tests/mathlib.py:56-77", "hash": "b16c83988a46ff43f09bffcd76b7fd53", "title": "Unifying Boundaries and Mapping Markers"}, "2227": {"path": "/tests/video_detector_tests/mathlib.py:78-103", "hash": "75d8906775c31fb1c5fc5bac432971d2", "title": "Checking and Updating Marks"}, "2228": {"path": "/tests/video_detector_tests/mathlib.py:104-130", "hash": "21e6a45a349cf5717c787e192453c628", "title": "Merging Sets: Continual Mappings Algorithm"}, "2229": {"path": "/tests/video_detector_tests/mathlib.py:131-164", "hash": "85741e1a43ec44d85b237cf92245a8b8", "title": "Continuous Mapped Range Merging Function"}, "2230": {"path": "/tests/video_detector_tests/mathlib.py:165-188", "hash": "e9e13df5fe6cbc5df03d3c45f9654664", "title": "Merged Ranges to Sequential Conversion"}, "2231": {"path": "/tests/video_detector_tests/mathlib.py:189-190", "hash": "c70e28bbc6ac6c3ab259c986ff1a7990", "title": "Merged Ranges via Continuous Number Function"}, "2232": {"path": "/tests/video_detector_tests/motion_github.py", "hash": "6e6beba497aaa2d85a8d302d4b55b40e", "title": "Motion Detection Video Algorithm"}, "2233": {"path": "/tests/video_detector_tests/motion_github.py:1-29", "hash": "457dedf1fd4d30d550f6487f53ff5b53", "title": "Motion Detector Python Video Processing"}, "2234": {"path": "/tests/video_detector_tests/motion_github.py:30-62", "hash": "005dc2599a81c29afbf2553eca527a25", "title": "Real-Time Video Motion Detection Algorithm"}, "2235": {"path": "/tests/video_detector_tests/motion_gpl.sh", "hash": "5356ed4c5a04339dd9724c009e2c415e", "title": "Webcam Video Capture with FFmpeg"}, "2236": {"path": "/tests/video_detector_tests/pip_meanVariance_stablize.py", "hash": "79466009393bc09f60785abcc8d2daf6", "title": "Mean Variance Stabilization"}, "2237": {"path": "/tests/video_detector_tests/pip_meanVariance_stablize.py:1-33", "hash": "e8ba23e89104e66ec29f2b32728a59c2", "title": "Stable Pip Data Processing Functions"}, "2238": {"path": "/tests/video_detector_tests/pip_meanVariance_stablize.py:34-52", "hash": "60076c75c1795ec16fd51b664dbb98db", "title": "Exponential Moving Average Video Detector"}, "2239": {"path": "/tests/video_detector_tests/pip_meanVariance_stablize.py:53-77", "hash": "f58e633afe51dc90482623a55d19cbc8", "title": "Threshold-Based Command Adjustment"}, "2240": {"path": "/tests/video_detector_tests/pip_meanVariance_stablize.py:78-99", "hash": "9a66ace6c20c717a0c708eb26577d483", "title": "Checking and Updating Command Dictionary"}, "2241": {"path": "/tests/video_detector_tests/pip_meanVariance_stablize.py:100-129", "hash": "c2bcb67c2e2cb2a2281c7104adf89329", "title": "Parse and Crop Command Creation"}, "2242": {"path": "/tests/video_detector_tests/pip_meanVariance_stablize.py:131-155", "hash": "ece37f0fbe14b345c74b31ac9e646701", "title": "Kalman Filter for Time-Series Data"}, "2243": {"path": "/tests/video_detector_tests/pip_meanVariance_stablize.py:156-184", "hash": "880dfc04f50cc88def5bfe4b75964c2a", "title": "Span List Filtering and Derivative Signal Generation"}, "2244": {"path": "/tests/video_detector_tests/pip_meanVariance_stablize.py:185-210", "hash": "69018643526b9963da626bce7b31b3fe", "title": "Signal Filtering and Threshold Analysis"}, "2245": {"path": "/tests/video_detector_tests/pip_meanVariance_stablize.py:211-238", "hash": "db898ecd07ddf6dbbe104d12aed7e5de", "title": "Pip Mean Variance Stabilization"}, "2246": {"path": "/tests/video_detector_tests/pip_meanVariance_stablize.py:239-259", "hash": "dc647a4a3da79791c4fe59018290ecbc", "title": "Command Merging Algorithm"}, "2247": {"path": "/tests/video_detector_tests/pip_meanVariance_stablize.py:260-291", "hash": "aea7b1a3160f1ba33e2726c44674e5ba", "title": "PIP Image Stabilization and Detection"}, "2248": {"path": "/tests/video_detector_tests/pip_meanVariance_stablize.py:292-318", "hash": "4551e12f18dcd523d6a400e24ee2d331", "title": "Default Values and Dictionary Conversions"}, "2249": {"path": "/tests/video_detector_tests/pip_meanVariance_stablize.py:319-334", "hash": "23d12920a167b5d4d10e9044b30dc2d8", "title": "Sequence Continuity Maintenance"}, "2250": {"path": "/tests/video_detector_tests/pip_meanVariance_stablize.py:335-358", "hash": "562c0f14bb98ba55e1fc8e28bf8688eb", "title": "Command Dictionary Manipulation and Conversion"}, "2251": {"path": "/tests/video_detector_tests/pip_meanVariance_stablize.py:359-387", "hash": "8476c581bedd7e8ba11315bb58179515", "title": "Video Detector Test Data Processing"}, "2252": {"path": "/tests/video_detector_tests/pip_meanVariance_stablize.py:388-419", "hash": "005633ba6d8cfffa543be70baaec374b", "title": "PIP Region Exporter Script"}, "2253": {"path": "/tests/video_detector_tests/pip_meanVariance_stablize.py:421-427", "hash": "0628af1c03d7901942ca5e97d5a37426", "title": "Creating Rectangles with Matplotlib"}, "2254": {"path": "/tests/video_detector_tests/rect_active_rect_frame_difference.py", "hash": "0f718116b255ab55537e4998da4ffa09", "title": "Rect-Based Active Frame Difference Detection"}, "2255": {"path": "/tests/video_detector_tests/rect_corner_detect_fast.py", "hash": "992f0dad35072b89084adaad47e1ceed", "title": "Exploring Corner Detection Methods for Canny Edge Detector"}, "2256": {"path": "/tests/video_detector_tests/rect_detect.py", "hash": "0c5f2a4106708b1eb2e9b91db3dd8900", "title": "Rect-Based Video Object Detection"}, "2257": {"path": "/tests/video_detector_tests/rect_detect.py:1-20", "hash": "9d999e0be9df40a1cddd7cdce573e506", "title": "Rectangle Similarity Checker"}, "2258": {"path": "/tests/video_detector_tests/rect_detect.py:20-43", "hash": "b7f8ef8fbbd7ee0edd1b96228a53fba0", "title": "Rectangle Change Detection Algorithm"}, "2259": {"path": "/tests/video_detector_tests/rect_detect.py:44-65", "hash": "10fc4df321b27306e54d1f613319b7cb", "title": "Rectangle Merging Algorithm"}, "2260": {"path": "/tests/video_detector_tests/rect_detect.py:66-89", "hash": "1f2b445216d57889084e406e90c350ff", "title": "Rectangle Dictionary Updater"}, "2261": {"path": "/tests/video_detector_tests/rect_detect.py:90-117", "hash": "a4a677d5dc6e095974a240f2462e2dfe", "title": "Mean Difference Calculator for Rectangles"}, "2262": {"path": "/tests/video_detector_tests/rect_detect.py:118-152", "hash": "9141a8c8733e325634c7bd51f26eebc6", "title": "Rectangle Detection and Edge Processing in Video Detector"}, "2263": {"path": "/tests/video_detector_tests/rect_detect.py:154-176", "hash": "cc43da1e8094ce99f9616661a002c6ce", "title": "Filtering and Storing Lines in HoughLines"}, "2264": {"path": "/tests/video_detector_tests/rect_detect.py:177-204", "hash": "81566095b200553c40d1dcfc274c7fe7", "title": "Trigonometry-Based Line Drawing Algorithm"}, "2265": {"path": "/tests/video_detector_tests/rect_detect.py:205-226", "hash": "5537d9fa5dc4ff6894be34de0030c8fc", "title": "Rectangle Detection Algorithm"}, "2266": {"path": "/tests/video_detector_tests/rect_detect.py:227-245", "hash": "32c55fa40398179708358f5eed252de7", "title": "Rectangle Threshold Drawing"}, "2267": {"path": "/tests/video_detector_tests/rect_detect.py:246-264", "hash": "bd7a8381edfc68bce8c33bf1962bec63", "title": "Lines and Edges Detection in Images"}, "2268": {"path": "/tests/video_detector_tests/rect_detect.py:266-290", "hash": "680686d84e2ccc9492c049728ba17640", "title": "OpenCV Line Detection and Display"}, "2269": {"path": "/tests/video_detector_tests/rect_detect.py:291-298", "hash": "6889ee838def24ffb3a8736e09b0d846", "title": "Rect Detect: Mode 1 Output Results"}, "2270": {"path": "/tests/video_detector_tests/rectangle_framedifference.py", "hash": "9befb2157edfcf8b6e2b6f4ab10166d0", "title": "Motion-Based Object Detection"}, "2271": {"path": "/tests/video_detector_tests/rectangle_framedifference.py:1-33", "hash": "d13f599bf1ed97c0abed9132a53ac37b", "title": "Motion Detector with Frame Difference Algorithm"}, "2272": {"path": "/tests/video_detector_tests/rectangle_framedifference.py:34-70", "hash": "ac4097758c78275bdb4941d19872fba2", "title": "Video Object Tracking Algorithm"}, "2273": {"path": "/tests/video_detector_tests/rectangle_framedifference.py:71-95", "hash": "33193f2bfca0f1cb281033bd2ec4737d", "title": "Merging Contour Bounding Boxes"}, "2274": {"path": "/tests/video_detector_tests/rectangle_framedifference.py:96-119", "hash": "2de64025ab803c4e5147b230e2cc33a7", "title": "Average Threshold Check for Video Detector"}, "2275": {"path": "/tests/video_detector_tests/rectangle_framedifference.py:120-140", "hash": "dab9c41d972763f63ff1483f787de316", "title": "Frame Tracker in Video Detection"}, "2276": {"path": "/tests/video_detector_tests/rectangle_framedifference.py:141-169", "hash": "25f2bf8b466ed9ce5980d0a1fd0c579f", "title": "Video Frame Rectangle Detection"}, "2277": {"path": "/tests/video_detector_tests/rectangle_test.py", "hash": "7050482e61388b17699d8626e853bcff", "title": "Rectangle Test: Video Object Tracking"}, "2278": {"path": "/tests/video_detector_tests/rectangle_test.py:1-31", "hash": "efb4a5b2e15ddf2944ca9b0d42b39196", "title": "OpenCV Motion Detector Testing"}, "2279": {"path": "/tests/video_detector_tests/rectangle_test.py:32-66", "hash": "c779df02a51e70c42fc3a7cc614cab24", "title": "Video Frame Algorithm with Progress Bar"}, "2280": {"path": "/tests/video_detector_tests/rectangle_test.py:67-91", "hash": "ec7ca12eb97e41a21de85dd20a66ef8e", "title": "Bounding Box Detection Algorithm"}, "2281": {"path": "/tests/video_detector_tests/rectangle_test.py:92-116", "hash": "6f0ef9966c68b916ea66ac54436d7d95", "title": "Rectangle Test Frame Detection"}, "2282": {"path": "/tests/video_detector_tests/siamMask/demo.sh", "hash": "9f1a9693252c384161d30574a3e243eb", "title": "Run SiamMask Demo Script"}, "2283": {"path": "/tests/video_detector_tests/siamMask/setup.sh", "hash": "1b0d3ae65c7da1786aabfc292995787c", "title": "SiamMask Setup and Model Download"}, "2284": {"path": "/tests/video_detector_tests/singleTracker.py", "hash": "3f49707f9a521d7068d24f2e903477d1", "title": "Dog Detection and Tracking with YOLOv5"}, "2285": {"path": "/tests/video_detector_tests/singleTracker.py:1-31", "hash": "a036b4f81ac7ef79d6ed6b79be93adf8", "title": "Dog Detection using YOLOv5"}, "2286": {"path": "/tests/video_detector_tests/singleTracker.py:32-56", "hash": "9fa3bff303200a7d7d1e4cc0926d76a4", "title": "Deep Learning Dog Detector"}, "2287": {"path": "/tests/video_detector_tests/singleTracker.py:57-86", "hash": "a0a7e61d9c6beaadadef93f24276e089", "title": "Video Tracking Initialization Code"}, "2288": {"path": "/tests/video_detector_tests/singleTracker.py:87-114", "hash": "d1accceff4e5894f3b1e99ef9e228d2d", "title": "Dog Tracker in Video Frames"}, "2289": {"path": "/tests/video_detector_tests/singleTracker.py:115-115", "hash": "24f876141690b378cdccc3595c2a067a", "title": "Closing OpenCV Video Windows"}, "2290": {"path": "/tests/video_detector_tests/yolo.py", "hash": "10aa3538c2d9b1a2c6196c16f0485c6d", "title": "YOLOv5-Based Video Object Detection and Extraction"}, "2291": {"path": "/tests/video_detector_tests/yolo.py:1-37", "hash": "f13f15df8fd637aa9ffad7587de52cae", "title": "YOLOv5-Based Text Extraction from Video Frames"}, "2292": {"path": "/tests/video_detector_tests/yolo.py:37-41", "hash": "796f67c1e7fd77c71448cf42129004db", "title": "YOLO-based Object Detection and Display"}, "2293": {"path": "/tests/video_detector_tests/yolo_norfair.py", "hash": "fe0c0c70e8c46f221682313c893a8287", "title": "YOLO Video Object Detector"}, "2294": {"path": "/tests/video_detector_tests/yolo_norfair.py:1-22", "hash": "b2bf4086bdff87b9fc52017c037fca94", "title": "Detectron2 Instance Segmentation Setup"}, "2295": {"path": "/tests/video_detector_tests/yolo_norfair.py:24-48", "hash": "530b9617806ba6afb630f34c4f802f77", "title": "YOLO Object Detector Frame Analysis"}, "2296": {"path": "/tests/video_detector_tests/yolo_norfair.py:49-66", "hash": "008bcf21fad6842ae97252a49df76254", "title": "Updating Tracked Objects with Detections"}, "2297": {"path": "/tests/video_detector_tests/yolo_norfair.py:67-94", "hash": "224510c1d55287e72f32a30d5be24dc0", "title": "Tracking Objects and Drawing Circles"}, "2298": {"path": "/tests/video_detector_tests/yolo_norfair.py:95-103", "hash": "e0a5d67322d95e9cdcd54ef954a1dc16", "title": "Key-Triggered Video Frame and Save Control"}, "2299": {"path": "/tests/video_phash_deduplication/README.md", "hash": "4e742777c40f8d9559c42aba5ff4ed82", "title": "Video File Deduplication with Phash"}, "2300": {"path": "/tests/video_phash_deduplication/config_milvus.sh", "hash": "3cd598f7b7464ff33f3ea0250832395f", "title": "Setting Up Milvus Database"}, "2301": {"path": "/tests/video_phash_deduplication/test_image_hash.py", "hash": "c6d9695c9e0ae2ce2ef5a9e0d8cc8646", "title": "Image Color Hash Comparison with PIL and Imagehash"}, "2302": {"path": "/tests/video_phash_deduplication/test_image_hash_milvus_database_search.py", "hash": "302fd6091b1fef214f17e4ac4eb0ec30", "title": "Milvus Image Phash Search"}, "2303": {"path": "/tests/video_phash_deduplication/test_milvus.py", "hash": "97abed1ccd75beeec18498acdf7e13b1", "title": "Debugging Milvus Video Collection"}, "2304": {"path": "/tests/video_phash_deduplication/test_milvus.py:1-39", "hash": "90efe045ec76b06afe2a0bc2bb2d42ef", "title": "Milvus Database Connection and Collection Management"}, "2305": {"path": "/tests/video_phash_deduplication/test_milvus.py:40-76", "hash": "a43e2f09db2ac70861a6af46ccdc26cc", "title": "Milvus Schema and Deduplication Test"}, "2306": {"path": "/tests/video_phash_deduplication/test_milvus.py:77-102", "hash": "e06a5d710307fe8e4c4335acc21a34ab", "title": "Milvus Collection Data Insertion and Querying"}, "2307": {"path": "/tests/video_phash_deduplication/test_milvus.py:103-139", "hash": "67ff611ab44e47299f7a1f3e956a388a", "title": "Video Phash Deduplication Test"}, "2308": {"path": "/tests/video_phash_deduplication/test_milvus.py:140-141", "hash": "9b4d8878f258c896b79b5f6d76d0874d", "title": "Debugging Milvus Document Retrieval"}, "2309": {"path": "/tests/video_phash_deduplication/test_milvus_library.py", "hash": "8c4f163997a6bb56cf04a2fe0927307c", "title": "Milvus Library for Video Deduplication"}, "2310": {"path": "/tests/video_phash_deduplication/test_milvus_library.py:1-35", "hash": "609a67847c7a9b2a392d629a19cca7ee", "title": "Milvus Collection Management Function"}, "2311": {"path": "/tests/video_phash_deduplication/test_milvus_library.py:36-65", "hash": "39e9e5ea3d8129e501ee7f3672763858", "title": "Milvus Video Phash Collection Schema"}, "2312": {"path": "/tests/video_phash_deduplication/test_milvus_library.py:68-103", "hash": "88deb3049d0d5327face513eec4baa89", "title": "Video Phash Indexing with Milvus"}, "2313": {"path": "/tests/video_phash_deduplication/test_milvus_library.py:104-136", "hash": "8d67554bc4e03521418c65180aa2acc5", "title": "Milvus Video Duplicate Search"}, "2314": {"path": "/tests/video_phash_deduplication/test_milvus_library.py:137-164", "hash": "1eeb496a14c4264c04db0256a37d5eee", "title": "Milvus Video Duration Filter"}, "2315": {"path": "/tests/video_phash_deduplication/test_milvus_library.py:165-200", "hash": "a585f4c77826118b59381957e0b4c0a2", "title": "Duplicated Video Indexing with Milvus"}, "2316": {"path": "/tests/video_phash_deduplication/test_milvus_library.py:201-226", "hash": "cec58588509f9230c39b0574406d7b7f", "title": "Milvus Video Deduplication Check"}, "2317": {"path": "/tests/video_phash_deduplication/test_milvus_library.py:226-234", "hash": "307f2a268979e8d4d1e0df528fe3d2c9", "title": "Video Phash Deduplication and Comparison"}, "2318": {"path": "/tests/video_phash_deduplication/test_video_hash.py", "hash": "f75476e22774d27354d9b2ebffc7cb80", "title": "Video Phash Deduplication Test"}, "2319": {"path": "/tests/video_phash_deduplication/test_video_hash.py:1-32", "hash": "16748b7d8deb3652b48cb7d480379cf2", "title": "Video Phash Calculation with `videohashes`"}, "2320": {"path": "/tests/video_phash_deduplication/test_video_hash.py:33-65", "hash": "74943cd02ed392544b1ad678a76b7958", "title": "Video Hashing Deduplication Test"}, "2321": {"path": "/tests/video_script_generation_reconstruction/README.md", "hash": "f2be54b2fc6b2a71452548c0434f3ae8", "title": "AI Toolkit Scripting for PaddleVideo"}, "2322": {"path": "/tests/video_script_generation_reconstruction/lstm_trial.py", "hash": "e9939131aab7d08f6753d4c0f2238920", "title": "LSTM Layer Output Shapes"}, "2323": {"path": "/tests/video_script_generation_reconstruction/raw_data_cut.py", "hash": "626bc581848f0ccff73ed96e20a4b5bd", "title": "Neural Network Data Preprocessing"}, "2324": {"path": "/tests/video_script_generation_reconstruction/raw_data_cut.py:1-33", "hash": "33bd73efd7097f5209d57438c3b8c754", "title": "Random Shape Cut Generator for Video Data"}, "2325": {"path": "/tests/video_script_generation_reconstruction/raw_data_cut.py:34-67", "hash": "6d111d3d28fa6a558977d2e9f4f170a8", "title": "Conv-Pool-Act Activation and RNN Processing"}, "2326": {"path": "/tests/video_script_generation_reconstruction/raw_data_cut.py:69-81", "hash": "e0096254dd8db8b15f2c12817781f08d", "title": "RNN Layer for Character Extraction"}, "2327": {"path": "/tests/video_script_generation_reconstruction/raw_data_understanding.py", "hash": "40d5016e674b6fe2a767fa7e4337ec09", "title": "Random Video and Audio Data Generation"}, "2328": {"path": "/tests/video_script_generation_reconstruction/spp_any_video.py", "hash": "3b3a5beafbbb0a84f8165f689242462f", "title": "Spatial Pyramid Pooling for Video Reconstruction"}, "2329": {"path": "/tests/video_script_generation_reconstruction/spp_any_video.py:1-30", "hash": "39fab74e326eff9e1c51443030f6020c", "title": "Video and Audio Shape Creation for Inputs"}, "2330": {"path": "/tests/video_script_generation_reconstruction/spp_any_video.py:31-63", "hash": "6b4bcbcc424974b52022afd604361d13", "title": "Random Data Arrays Initialization"}, "2331": {"path": "/tests/video_script_generation_reconstruction/spp_any_video.py:65-91", "hash": "48c9e53f4a3fc3c2a1b593edf59273cc", "title": "LSTM Neural Network for Video-Audio Data Processing"}, "2332": {"path": "/tests/video_script_generation_reconstruction/spp_any_video.py:92-123", "hash": "06432792243bf4b06ba20c000cc14cfa", "title": "SPP LSTM Video Feature Extraction"}, "2333": {"path": "/tests/video_script_generation_reconstruction/spp_any_video.py:124-153", "hash": "563089a2e3415340d5d1b5b8bd6a7ff9", "title": "Merged Audio-Video LSTM Processing with ReLU"}, "2334": {"path": "/tests/video_script_generation_reconstruction/spp_any_video.py:154-186", "hash": "6ebadaf5fefaac610c8428e0dc1cbe6b", "title": "Video CutNet Model Training Loop"}, "2335": {"path": "/tests/video_script_generation_reconstruction/spp_any_video.py:188-209", "hash": "687e7abcff27f39028e7455c2e0ee948", "title": "Gradient Descent on Audio-Video Data"}, "2336": {"path": "/tests/video_script_generation_reconstruction/spp_any_video.py:210-211", "hash": "2345c9427d82e5c548ae01716095a035", "title": "Unspecified Batch Size in Recurrent Network"}, "2337": {"path": "/tests/video_script_generation_reconstruction/spp_module.py", "hash": "8e43ec6b8b3bef4b42b7a8e2f909ec81", "title": "Spatial Pyramid Pooling Module"}, "2338": {"path": "/tests/video_script_generation_reconstruction/spp_module.py:1-22", "hash": "0166b84b2495fb8d4c73b5f7bdcc16c8", "title": "Spatial Pyramid Pooling Function"}, "2339": {"path": "/tests/video_script_generation_reconstruction/spp_module.py:23-49", "hash": "1d7cebcdd1756e17358ede1641936d3b", "title": "Spatial Pyramid Pooling Function"}, "2340": {"path": "/tests/video_script_generation_reconstruction/spp_module.py:50-67", "hash": "a10b86ea9b8cf16d670d28f04d21bcc8", "title": "1D Conv-LSTM Processing Sequences"}, "2341": {"path": "/tests/viral_video_experiments/init.sh", "hash": "34e25bd12ba144427cfba1b63bf00427", "title": "Viral Video Data Analysis Setup"}, "2342": {"path": "/tests/voice_detect_extract_split/paddlespeech/test.sh", "hash": "3ea6fad3279ec26783df23ef95db993d", "title": "PaddleSpeech ASR Test Script"}, "2343": {"path": "/tests/voice_detect_extract_split/spleeter/README.md", "hash": "bcd6cb5792159f1a77be7f436f9bdff9", "title": "Spleeter Paraphrasing with HF and WNNL"}, "2344": {"path": "/tests/voice_detect_extract_split/spleeter/download_models.sh", "hash": "93e6a334591efcbd1e51cffb21669fa8", "title": "Spleeter Model Download"}, "2345": {"path": "/tests/voice_detect_extract_split/spleeter/spleeter_init.sh", "hash": "0df05536ca56ed656d86375b14297772", "title": "Spleeter Version 2.1.0 Installation and Imports"}, "2346": {"path": "/tests/voice_detect_extract_split/spleeter/test.sh", "hash": "33c11f4bba37b4decadab332b36bd845", "title": "Spleeter Audio Separation Issues"}, "2347": {"path": "/tests/voice_detect_extract_split/spleeter/test2.sh", "hash": "8d5d8748388ea09b2ddb772cd823b480", "title": "Audio Separation Issue with Spleeter's 2-Stems Model"}, "2348": {"path": "/tests/youtube_shorts_heuristic_search/README.md", "hash": "80a579610cdaf1a978857af0384e72b4", "title": "YouTube Shorts Search: Python Library and API"}, "2349": {"path": "/tests/youtube_shorts_heuristic_search/heuristic_model.py", "hash": "dde19ea0566826969250cd8c10fadb77", "title": "Heuristic-Based Video Search"}}}