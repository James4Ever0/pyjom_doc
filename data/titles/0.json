{
    "/README.en.md": "pyjom: Python Content Production Toolkit",
    "/README.en.md:1-17": "pyjom: Content Production with Python",
    "/README.en.md:19-49": "Star History Visualization Guide",
    "/README.md": "pyjom README: Automated Media Content Generation Tool",
    "/README.md:1-35": "Introducing Pyjom: Automated Media Content Generation",
    "/README.md:37-81": "Python Project README: Install, Use, Contribute, Donate",
    "/externals/bgslib-init.sh": "Bgslib Init: Script for Setting Up bgslibrary",
    "/externals/detectron2_prebuilt_linux_init.sh": "Installing Detectron2 with pip on Linux",
    "/externals/dgl_init.sh": "DGL Init Script for Python",
    "/externals/ffmpeg_libspeex_tensorflow_support.sh": "Custom FFmpeg Build with Libraries and Modules",
    "/externals/ffmpeg_libspeex_tensorflow_support.sh:1-5": "Custom FFmpeg Build with TensorFlow Support",
    "/externals/ffmpeg_libspeex_tensorflow_support.sh:5-8": "Enabling TensorFlow Support in FFmpeg",
    "/externals/get_the_heck_ffmpeg.py": "Automate FFmpeg Dependencies Installation",
    "/externals/get_the_heck_ffmpeg.py:1-3": "Splitting FFmpeg Libraries from Strings",
    "/externals/get_the_heck_ffmpeg.py:5-20": "Automated FFmpeg Installation",
    "/externals/init_darknet.sh": "Initialize Darknet Environment",
    "/externals/init_ffmpeg.sh": "Init FFmpeg Libraries with Options",
    "/externals/init_ffmpeg.sh:1-21": "FFmpeg Library Setup Script",
    "/externals/init_ffmpeg.sh:105-105": "Initiating FFmpeg Libraries",
    "/externals/init_ffmpeg.sh:22-52": "Automatic Library Installation Script",
    "/externals/init_ffmpeg.sh:53-85": "Preparing FFmpeg Environment: Libraries and Codecs",
    "/externals/init_ffmpeg.sh:85-93": "Configuring FFmpeg Options and Toolchain",
    "/externals/init_ffmpeg.sh:93-96": "Configure FFmpeg Libraries with Externals",
    "/externals/init_ffmpeg.sh:96-104": "Configure & Compile FFmpeg with Enabled Components",
    "/externals/init_ffmpeg.sh:96-96": "Enabling FFmpeg Libraries and Options",
    "/externals/init_opentoolz.sh": "Setup OpenToonz Environment",
    "/externals/netease_api_download.sh": "NetEase API Download: Setup Script",
    "/externals/opencv_init.sh": "Automatic OpenCV Setup",
    "/externals/opencv_py_reset.sh": "Opencv Python Reset Script",
    "/externals/opencv_py_reset.sh:1-24": "Reset Opencv-Python Environment",
    "/externals/opencv_py_reset.sh:25-39": "OpenCV Installation Directories",
    "/externals/opencv_py_reset.sh:40-54": "Optimizing Python Package Installation",
    "/externals/opencv_py_reset.sh:55-60": "Installation Options for OpenCV Python Reset Script",
    "/externals/opencv_rebuild.sh": "Rebuilding OpenCV with CUDA Support",
    "/externals/opencv_rebuild.sh:1-27": "Rebuilding OpenCV with CUDA Support",
    "/externals/opencv_rebuild.sh:28-32": "OpenCV Rebuild Script Control",
    "/externals/pybgs_init.sh": "Pybgs Installation Script",
    "/externals/test_import_opencv_site.py": "Automating OpenCV Library Import in Python",
    "/externals/three_init.sh": "Updating Three.js with Latest Commit",
    "/externals/torchrec_init.sh": "TorchRec Init Script",
    "/pyjom/README.md": "Censored Internet Automation Challenges",
    "/pyjom/audiotoolbox.py": "Audio Duration & Volume Tool",
    "/pyjom/audiotoolbox.py:1-32": "Audio Duration and Volume Average Tool",
    "/pyjom/audiotoolbox.py:123-132": "Normalize Audio with Error Handling",
    "/pyjom/audiotoolbox.py:33-61": "Audio Volume Detection Tool",
    "/pyjom/audiotoolbox.py:62-97": "Adjust Volume of Media Files",
    "/pyjom/audiotoolbox.py:98-122": "Volume Normalization and Container Correction",
    "/pyjom/commons.py": "Multipurpose Media Processing Python Library",
    "/pyjom/commons.py:1-58": "Pyjom: Database Connections and Redis Cache",
    "/pyjom/commons.py:136-169": "Redis Data Storage and Retrieval",
    "/pyjom/commons.py:170-210": "Interacting with Redis Cached Sets",
    "/pyjom/commons.py:211-255": "Redis-based Data Cache and Media Bitrate Retrieval",
    "/pyjom/commons.py:256-290": "JSON Parsing and Caching in Pyjom Commons",
    "/pyjom/commons.py:291-323": "File Extension Handler Code Snippet",
    "/pyjom/commons.py:324-353": "Extending Media Mapping with Caching",
    "/pyjom/commons.py:356-392": "Corrupt Media Filter Scanner",
    "/pyjom/commons.py:393-423": "Redis LRU Cache with Frame Size Filter",
    "/pyjom/commons.py:424-457": "OpenCV Library Check and Server Wait Function",
    "/pyjom/commons.py:458-490": "Message Length Verification and Error Handling",
    "/pyjom/commons.py:491-526": "Rectangle Overlap Checker and Clamper",
    "/pyjom/commons.py:529-565": "Shuffling and Range Functions in pyjom.commons",
    "/pyjom/commons.py:566-600": "Multi-Function Data Processor",
    "/pyjom/commons.py:59-96": "Redis Key Deletion and Safe Evaluation",
    "/pyjom/commons.py:601-634": "Media Information Retrieval via ffprobe and mediainfo",
    "/pyjom/commons.py:635-676": "JSON and Dictionary Functions",
    "/pyjom/commons.py:677-727": "Image OCR and List Functions",
    "/pyjom/commons.py:728-764": "Retrieving YOLOv5 Model Config",
    "/pyjom/commons.py:765-795": "Pyjom Template Functions",
    "/pyjom/commons.py:796-833": "Pyjom Commons Functionality",
    "/pyjom/commons.py:834-874": "File Type and Extension Retrieval Functions",
    "/pyjom/commons.py:877-917": "Multifunctional Commons Decorator Tool",
    "/pyjom/commons.py:918-919": "File Write and Logging",
    "/pyjom/commons.py:97-135": "Redis Data Type Handling Functions",
    "/pyjom/config/__init__.py": "Importing Sina and MediaLang Configurations",
    "/pyjom/config/medialang/__init__.py": "Importing Media Language Protocols",
    "/pyjom/config/medialang/protocols.py": "Medialang Protocols Dictionary",
    "/pyjom/config/shared.py": "Initializing Config for Image Detection Components",
    "/pyjom/config/sina/__init__.py": "SinaWeibo Module",
    "/pyjom/config/sina/sinaWeibo.py": "Sina Weibo API Interactions in Pyjom",
    "/pyjom/imagetoolbox.py": "Animal Image Processing Toolbox",
    "/pyjom/imagetoolbox.py:1-35": "Diagonal Rectangle Image Cropping and Bounding Box Drawing",
    "/pyjom/imagetoolbox.py:1032-1062": "Image Cropper Algorithm",
    "/pyjom/imagetoolbox.py:1063-1083": "Crop Area Determiner Algorithm",
    "/pyjom/imagetoolbox.py:1084-1112": "Cover Cropper: Detect, Resize, and Display",
    "/pyjom/imagetoolbox.py:1113-1145": "Dog-Cat Image Detection Algorithm",
    "/pyjom/imagetoolbox.py:1146-1173": "Dog/Cat Detection with Inpainting",
    "/pyjom/imagetoolbox.py:1174-1198": "Image Toolbox: Threshold-based Frame Processing and Animal Detection",
    "/pyjom/imagetoolbox.py:1199-1212": "Area and Detection Threshold",
    "/pyjom/imagetoolbox.py:131-165": "Text Detection and Image Processing with EasyOCR",
    "/pyjom/imagetoolbox.py:166-191": "Image Inpainting and Blurring Tool",
    "/pyjom/imagetoolbox.py:194-225": "Text Area Ratio Calculator",
    "/pyjom/imagetoolbox.py:226-267": "Image Processing Functions",
    "/pyjom/imagetoolbox.py:268-307": "Random Image Sampling and Reshaping",
    "/pyjom/imagetoolbox.py:308-340": "KMeans Clustering with Error Handling",
    "/pyjom/imagetoolbox.py:341-369": "K-Means Clustering Image Analysis",
    "/pyjom/imagetoolbox.py:36-67": "Max Box Detection",
    "/pyjom/imagetoolbox.py:370-403": "K-Means Image Centrality Scanner",
    "/pyjom/imagetoolbox.py:404-428": "Resizable Image Scanner",
    "/pyjom/imagetoolbox.py:429-460": "Crop Image to Target Width",
    "/pyjom/imagetoolbox.py:461-487": "Resizable Image with Aspect Ratio",
    "/pyjom/imagetoolbox.py:488-522": "PaddlePaddle ResNet50 Dog/Cat Detector",
    "/pyjom/imagetoolbox.py:523-552": "Bezier PaddleHub Resnet50 Image DogCat Detector Server Checker",
    "/pyjom/imagetoolbox.py:552-583": "Classify Cats and Dogs with PaddleHub",
    "/pyjom/imagetoolbox.py:584-625": "Dog or Cat Detector: Image Label Reader",
    "/pyjom/imagetoolbox.py:626-652": "Cat and Animal Detection Script",
    "/pyjom/imagetoolbox.py:653-676": "Dog/Cat Detection with Multi-Parameter Exponential Network",
    "/pyjom/imagetoolbox.py:677-712": "Bezier Paddle Hub ResNet50 Dog/Cat Detector",
    "/pyjom/imagetoolbox.py:68-97": "Universal Image Loader with Resizing",
    "/pyjom/imagetoolbox.py:713-740": "FastAPI Image Classifier App",
    "/pyjom/imagetoolbox.py:741-766": "Redis-Locked Image Processing with URL Parsing",
    "/pyjom/imagetoolbox.py:768-786": "OpenCV Image/Video Reader",
    "/pyjom/imagetoolbox.py:787-814": "Image Load and Processing Tool",
    "/pyjom/imagetoolbox.py:815-850": "Cropping Images with FastAPI and FFMPEG",
    "/pyjom/imagetoolbox.py:851-878": "Crop Extractor Algorithm",
    "/pyjom/imagetoolbox.py:879-900": "Detecting and Cropping Common Crop Areas",
    "/pyjom/imagetoolbox.py:901-932": "Diagonal Rectangle Crop and Blur Detection",
    "/pyjom/imagetoolbox.py:933-958": "Blur Detection and Contour Bounding",
    "/pyjom/imagetoolbox.py:959-996": "Dog and Cat Detection Toolbox",
    "/pyjom/imagetoolbox.py:98-130": "Get Image Corners and Text Recognition",
    "/pyjom/imagetoolbox.py:997-1031": "Object Detection and Filtering in Images",
    "/pyjom/languagetoolbox.py": "Multi-Threaded Text Extraction and Paraphrasing",
    "/pyjom/languagetoolbox.py:1-41": "Pygame Headless Text Rendering",
    "/pyjom/languagetoolbox.py:108-136": "Topics Retriever: Sort, Filter, Store",
    "/pyjom/languagetoolbox.py:137-162": "Topic Model Word Frequency Counts",
    "/pyjom/languagetoolbox.py:163-194": "English Sentence Preprocessing Function",
    "/pyjom/languagetoolbox.py:195-230": "Python Language Toolbox: NLP Functions",
    "/pyjom/languagetoolbox.py:232-269": "Text Data Processing with CountVectorizer and LDA",
    "/pyjom/languagetoolbox.py:270-306": "Stop Words and Chinese Topic Modeling",
    "/pyjom/languagetoolbox.py:307-343": "Text Preprocessing and Topic Modeling in Python",
    "/pyjom/languagetoolbox.py:346-385": "Paraphrasing API Integration in Python",
    "/pyjom/languagetoolbox.py:386-423": "ClueAI API Paraphraser Function",
    "/pyjom/languagetoolbox.py:426-466": "Baidu Translation and Detection Toolbox",
    "/pyjom/languagetoolbox.py:43-74": "Title: \"Pygame Font with Tesseract OCR\"",
    "/pyjom/languagetoolbox.py:467-505": "Parallel Paraphrasing with Baidu Translate Model",
    "/pyjom/languagetoolbox.py:507-533": "Multi-Level Paraphrase Generator",
    "/pyjom/languagetoolbox.py:534-559": "Paraphraser Function: Language Toolbox",
    "/pyjom/languagetoolbox.py:560-581": "Paraphrase Checking and Exception Handling",
    "/pyjom/languagetoolbox.py:75-107": "Filter Non-Chinese, English, or Japanese Characters",
    "/pyjom/lyrictoolbox.py": "Automated Lyric Editing and Preview Tool",
    "/pyjom/lyrictoolbox.py:1-47": "Pyjom: Lyric Toolbox - Punctuation & Duration",
    "/pyjom/lyrictoolbox.py:1028-1056": "Clean LRC Subtitles Function",
    "/pyjom/lyrictoolbox.py:1057-1091": "Continuous Lyrics Parser",
    "/pyjom/lyrictoolbox.py:1093-1113": "Filter and Extract Lyrics from LRC File",
    "/pyjom/lyrictoolbox.py:1114-1141": "Lyric Toolbox LRC Formatting",
    "/pyjom/lyrictoolbox.py:1142-1169": "Lyric Cut Span Calculator",
    "/pyjom/lyrictoolbox.py:1170-1191": "Span Subdivision and Merging Algorithm",
    "/pyjom/lyrictoolbox.py:1192-1201": "Merging and Appending New Spans",
    "/pyjom/lyrictoolbox.py:120-150": "Lyric Splitter and Language Detector",
    "/pyjom/lyrictoolbox.py:151-182": "Bilingual Lyrics Checker",
    "/pyjom/lyrictoolbox.py:183-207": "Detect Language with Libraries",
    "/pyjom/lyrictoolbox.py:208-233": "Bilingual Lyrics Classifier",
    "/pyjom/lyrictoolbox.py:234-266": "Translate Text with Optional Backend",
    "/pyjom/lyrictoolbox.py:267-298": "Server Health Check Function",
    "/pyjom/lyrictoolbox.py:299-334": "Lyric Translation and Censorship Tool",
    "/pyjom/lyrictoolbox.py:335-362": "Translate and Compare Lyric Array Function",
    "/pyjom/lyrictoolbox.py:363-395": "Default Style Configurations for Subtitles",
    "/pyjom/lyrictoolbox.py:396-420": "Ass Template Configuration",
    "/pyjom/lyrictoolbox.py:421-447": "Leadin and Leadout Effects for Lyrics",
    "/pyjom/lyrictoolbox.py:448-480": "Lyric Animation Code: Syllable Timing and Color Effects",
    "/pyjom/lyrictoolbox.py:48-88": "LRC Lyrics Extraction and Timing",
    "/pyjom/lyrictoolbox.py:481-512": "Rotation and Animation Effects in Lyric Toolbox",
    "/pyjom/lyrictoolbox.py:513-538": "Sinusoidal Syllable Overlays Calculator",
    "/pyjom/lyrictoolbox.py:539-567": "Fade-out Lyric Renderer",
    "/pyjom/lyrictoolbox.py:568-595": "Leadout Effect Lyric Adjuster",
    "/pyjom/lyrictoolbox.py:596-624": "Lead-In Lyric Animation Tool",
    "/pyjom/lyrictoolbox.py:625-658": "Lyric Line Effect Generator",
    "/pyjom/lyrictoolbox.py:659-690": "Dynamic Lyric Rendering Tool",
    "/pyjom/lyrictoolbox.py:691-724": "Lyric Timing and Formatting Tool",
    "/pyjom/lyrictoolbox.py:725-762": "Randomized Text Clipping and Colorization",
    "/pyjom/lyrictoolbox.py:763-790": "Line Alignment Check and Modification",
    "/pyjom/lyrictoolbox.py:791-811": "Lyric Preprocessing Filter",
    "/pyjom/lyrictoolbox.py:812-839": "Pyjom: Lyric Toolbox Word Processing",
    "/pyjom/lyrictoolbox.py:840-863": "Absolute Center Shift Calculator",
    "/pyjom/lyrictoolbox.py:864-883": "Lyric Syllable Analyzer",
    "/pyjom/lyrictoolbox.py:884-902": "Lyric Center Point Calculator",
    "/pyjom/lyrictoolbox.py:89-119": "Lyric Duration Calculator & Updater",
    "/pyjom/lyrictoolbox.py:904-929": "Syllable-Aware Lyric Translation Code",
    "/pyjom/lyrictoolbox.py:930-955": "ASS Lyrics Translation and Formatting Tool",
    "/pyjom/lyrictoolbox.py:958-988": "ASS Script Preview and Conversion Tool",
    "/pyjom/lyrictoolbox.py:989-1027": "Lyric Processing for LRC Files",
    "/pyjom/main.py": "Dynamic Content Processing with Pyjom",
    "/pyjom/main.py:1-31": "Multi-Purpose Content Producer Class",
    "/pyjom/main.py:118-140": "Optimized Content Fetcher",
    "/pyjom/main.py:141-165": "Logging and Parsing Review Data",
    "/pyjom/main.py:32-62": "Dynamic Method Processing and Content Production",
    "/pyjom/main.py:63-88": "Feedback Collection and Optimization Code",
    "/pyjom/main.py:89-117": "ContentReviewer Class: Fetch, Review, Optimize",
    "/pyjom/mathlib.py": "Advanced Time Series Smoothing Library",
    "/pyjom/mathlib.py:1-40": "Utility Functions for Numerical Operations",
    "/pyjom/mathlib.py:115-136": "Unifying and Sorting Boundaries",
    "/pyjom/mathlib.py:137-163": "Interval Categorization Algorithm",
    "/pyjom/mathlib.py:164-190": "Merging Overlapping Ranges: Efficiently Combining Intervals",
    "/pyjom/mathlib.py:191-219": "Merge and Filter Overlapping Ranges",
    "/pyjom/mathlib.py:220-244": "Merging and Sorting Ranges in Commands",
    "/pyjom/mathlib.py:245-274": "Bezier Curve Evaluator",
    "/pyjom/mathlib.py:275-303": "Multi-Input Exponential Network Averaging",
    "/pyjom/mathlib.py:304-322": "Moving Average Peak Detector",
    "/pyjom/mathlib.py:41-66": "Smooth Time Series with KalmanFilter",
    "/pyjom/mathlib.py:68-94": "Merging and Converting Intervals in Python",
    "/pyjom/mathlib.py:95-113": "Boundary Marker Dictionaries",
    "/pyjom/medialang/__init__.py": "Media Language Processing Imports",
    "/pyjom/medialang/__main__.py": "Medialang File Parsing and Prettification",
    "/pyjom/medialang/commons.py": "Medialang Commons: Serialization and Error Handling",
    "/pyjom/medialang/core.py": "Medialang Core Classes and Functionalities",
    "/pyjom/medialang/core.py:1-39": "Pyjom: Media Language Item Storage and Manipulation",
    "/pyjom/medialang/core.py:111-138": "Ensures Valid Script or Path",
    "/pyjom/medialang/core.py:139-164": "Line-Limiting Data Formatter",
    "/pyjom/medialang/core.py:165-189": "Nested List Formatter",
    "/pyjom/medialang/core.py:190-215": "Code Formatter and Syntactic Fixes",
    "/pyjom/medialang/core.py:216-242": "Max Indent Level Finder and Formatter",
    "/pyjom/medialang/core.py:243-271": "String Replacements for Proper Syntax",
    "/pyjom/medialang/core.py:272-303": "Regular Expression Item Parser",
    "/pyjom/medialang/core.py:304-328": "Line-by-line String to Dictionary Converter",
    "/pyjom/medialang/core.py:329-355": "Parsing Code in Medialang Core",
    "/pyjom/medialang/core.py:356-381": "Error Handling in Script Parser",
    "/pyjom/medialang/core.py:382-411": "Utility Functions in Medialang Module",
    "/pyjom/medialang/core.py:41-75": "Classes with Representation and Appending in Python",
    "/pyjom/medialang/core.py:412-435": "Script Execution Function",
    "/pyjom/medialang/core.py:436-452": "Media Processing Data Arrays",
    "/pyjom/medialang/core.py:453-474": "Script Execution Function",
    "/pyjom/medialang/core.py:475-487": "Resource Parsing and Error Handling in Medialang",
    "/pyjom/medialang/core.py:76-110": "Medialang Object Initialization",
    "/pyjom/medialang/functions/__init__.py": "Medialang Functions Dictionary",
    "/pyjom/medialang/functions/detectors/__init__.py": "Medialang Detector Imports",
    "/pyjom/medialang/functions/detectors/__init__.py:1-36": "Detector Dictionary Initialization",
    "/pyjom/medialang/functions/detectors/__init__.py:37-46": "Media Language Detector Initialization and Processing",
    "/pyjom/medialang/functions/detectors/blackoutDetector.py": "Blackout Detector: OpenCV Media Analysis",
    "/pyjom/medialang/functions/detectors/blackoutDetector.py:1-30": "Blackout Score Calculator & Detector",
    "/pyjom/medialang/functions/detectors/blackoutDetector.py:31-54": "Blackout Detector: Media Iteration and Detection",
    "/pyjom/medialang/functions/detectors/blackoutDetector.py:55-57": "Update Metadata in Result Dictionary",
    "/pyjom/medialang/functions/detectors/entityDetector.py": "Entity Detector with Levenshtein's Algorithm",
    "/pyjom/medialang/functions/detectors/entityDetector.py:1-29": "Text Splitting and Entity Detection Functions",
    "/pyjom/medialang/functions/detectors/entityDetector.py:105-128": "Entity Detector: Overlapping Location Check",
    "/pyjom/medialang/functions/detectors/entityDetector.py:129-142": "Entity Detection Logic Review",
    "/pyjom/medialang/functions/detectors/entityDetector.py:143-161": "Video Entity and Movement Detector",
    "/pyjom/medialang/functions/detectors/entityDetector.py:162-183": "Entity Text Change Detector",
    "/pyjom/medialang/functions/detectors/entityDetector.py:184-200": "Duplicate Entity Detection Algorithm",
    "/pyjom/medialang/functions/detectors/entityDetector.py:201-221": "Block Variable Initialization",
    "/pyjom/medialang/functions/detectors/entityDetector.py:222-237": "Dynamic Text Detection Block Initialization",
    "/pyjom/medialang/functions/detectors/entityDetector.py:238-254": "Entity Detector Function",
    "/pyjom/medialang/functions/detectors/entityDetector.py:255-283": "Static OCR Combining: WordNinja Integration",
    "/pyjom/medialang/functions/detectors/entityDetector.py:284-301": "Dynamic Text Detection Merging",
    "/pyjom/medialang/functions/detectors/entityDetector.py:30-70": "Multifunctional Text Processing: EntityDetector",
    "/pyjom/medialang/functions/detectors/entityDetector.py:302-309": "Checking and Updating Entity Detector",
    "/pyjom/medialang/functions/detectors/entityDetector.py:71-104": "Textual Change Detection Functions",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py": "Frame Border Detector Algorithm",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:1-26": "Gaussian Blur and Edge Detection for Square Objects",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:107-122": "Rectangle Merging Function",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:123-146": "Frame Border Detector",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:147-164": "Rectangle Detection and Processing Function",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:164-182": "Reversed Rectangle Sorter",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:183-209": "Rectangle Iteration and Filtering",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:210-228": "Update Rectangle and Compute Differences",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:229-252": "Frame Border Detector Algorithm",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:253-281": "Frame Border Detection with OCR and Polygon Testing",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:27-54": "Frame Border Detector Algorithm",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:282-308": "Polygon and OCR Rectangle Intersection Detection",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:309-336": "Rectangle Removal for OCR in Frame Border Detection",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:337-362": "Edge Detection and Line Identification",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:363-391": "Theta-Filtered Line Detection",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:392-417": "Line Coordinate Calculator and Detector",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:418-439": "Filtering Vertical and Horizontal Line Data",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:440-460": "Updating Line Data and Visualization",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:461-481": "Rectangle Formation from Line Pairs",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:482-500": "Rectangle Life Threshold Detection",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:501-529": "Frame Border Detection Algorithm",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:530-559": "Frame Border Detection via Video Processing",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:55-83": "Trigonometric Line Calculator",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:560-588": "Video Frame Processing with EMA",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:589-612": "Continuous Frame Analysis and Contour Detection",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:613-634": "Bounding Box Threshold Calculation",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:635-655": "Frame Boundary Detection and Update",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:656-674": "Frame Border Detection",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:675-699": "Frame Border Detection Algorithm",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:700-725": "Frame Border Detector Function",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:726-744": "Frame Border Detection",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:745-755": "Selects Detector Model Based on Input",
    "/pyjom/medialang/functions/detectors/frameborder_Detector.py:84-105": "Rectangle Detector Function",
    "/pyjom/medialang/functions/detectors/mediaDetector.py": "Video Frame Iterator: Media Detector Function",
    "/pyjom/medialang/functions/detectors/mediaDetector.py:1-31": "Video Frame Iterator with Timestep",
    "/pyjom/medialang/functions/detectors/mediaDetector.py:32-60": "Video Frame Processor with PaddleOCR",
    "/pyjom/medialang/functions/detectors/mediaDetector.py:61-61": "Code Returns mdata and Metadata Variables",
    "/pyjom/medialang/functions/detectors/subtitleDetector.py": "Subtitle Detection with PaddleOCR",
    "/pyjom/medialang/functions/detectors/subtitleDetector.py:1-34": "Subtitle Detection with PaddleOCR",
    "/pyjom/medialang/functions/detectors/subtitleDetector.py:35-58": "Media Subtitle Detection Algorithm",
    "/pyjom/medialang/functions/detectors/subtitleDetector.py:59-70": "StablePaddleOCR-Based Subtitle Detection",
    "/pyjom/medialang/functions/detectors/videoDiffDetector.py": "Video Difference Detector",
    "/pyjom/medialang/functions/detectors/videoDiffDetector.py:1-24": "Video Difference Detector Function",
    "/pyjom/medialang/functions/detectors/videoDiffDetector.py:25-49": "Video Diff Detector: Calculate Pixel Differences",
    "/pyjom/medialang/functions/detectors/videoDiffDetector.py:50-62": "Video Frame Differential Detector",
    "/pyjom/medialang/functions/detectors/yolov5_Detector.py": "YOLOv5 Object Detection Functions",
    "/pyjom/medialang/functions/detectors/yolov5_Detector.py:1-31": "YOLOv5 Object Detection and Identification",
    "/pyjom/medialang/functions/detectors/yolov5_Detector.py:31-50": "Yolov5 Detection in Media Paths",
    "/pyjom/medialang/functions/detectors/yolov5_Detector.py:51-59": "YOLOv5 Data Structure Builder",
    "/pyjom/medialang/processors/__init__.py": "Dot and Media Processors",
    "/pyjom/medialang/processors/dotProcessor/__init__.py": "Dot Processor Mapping",
    "/pyjom/medialang/processors/dotProcessor/jsonProcessor.py": "Json Processor Function in Medialang",
    "/pyjom/medialang/processors/dotProcessor/videoProcessor.py": "Video Filtering and Editing Processor",
    "/pyjom/medialang/processors/dotProcessor/videoProcessor.py:1-34": "Video Processing Python Script",
    "/pyjom/medialang/processors/dotProcessor/videoProcessor.py:118-151": "Video Stream Filters with ffmpeg Functions"
}