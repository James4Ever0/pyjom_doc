{
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/basic.py:304-327": "Time-Travel Debugging with Patch Prefix",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/basic.py:329-348": "Code Cloning and Object Creation",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/basic.py:33-54": "Time Travel Debugging",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/basic.py:349-370": "Time Travel Debugging with Error Resumption",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/basic.py:55-76": "Stack Depth Management Code",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/basic.py:77-97": "Stack Depth Adjustment for Execution",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/basic.py:98-130": "Interpreter for Depth Management and Exception Handling",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/codemod_redbaron/create_decnode.py": "RedBaron-Powered Decorator Generator",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/codemod_redbaron/pasta_test.py": "Time-Travel Code Debugging",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/codemod_redbaron/pasta_test.py:1-28": "Preserve LRU Cache, Discard Reloading Decorators",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/codemod_redbaron/pasta_test.py:29-41": "Time Travel Debugging Code Mod",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/codemod_redbaron/recover_source.py": "Recover Source with Red Baron Code",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/codemod_redbaron/redbaron_test.py": "RedBaron Test: Code Analysis & Decorator Appending",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/codemod_redbaron/test2.py": "Unprofessional Profanity-Filled Code: Test2.py",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/hook_error_handler_to_see_if_context_preserved.py": "Exception Handling with Progress Bar and User Input",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/hook_error_handler_to_see_if_context_preserved.py:1-38": "Exception Handling Testing: Context Preservation and Resurrection Time Travel Debugging",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/hook_error_handler_to_see_if_context_preserved.py:39-63": "Error-Handling File Integrity Check",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/hook_error_handler_to_see_if_context_preserved.py:64-104": "Error Handling and Function Execution Preservation Test",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/minterpreter.py": "Exception-Aware Code Debugger",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/minterpreter.py:1-23": "Resurrection Time Travel Debugging",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/minterpreter.py:24-29": "Indentation and Function Definition Checker",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/return_inside_function.py": "Resurrect Functions from Exceptions",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/standardFunction.py": "Error Resurrection Debugger",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test.py": "Function Returns 0 Despite Errors",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_builtin_exception_with_debugpy/test.py": "Missing Exception Handling in Os.path.join Call",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_code/bowler_test.py": "Bowler Test: Function Identification",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_code/new_test.py": "Reloading Decorator with Undefined Variable",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_code/new_test2.py": "Asynchronous Python Reloading Functions",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_code/pyjom_recover_and_rewrite.py": "Pyjom: Automatic Code Recovery and Rewrite",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_code/pyjom_recover_and_rewrite.py:1-30": "Rewriting Files with Resurrection Functions",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_code/pyjom_recover_and_rewrite.py:32-42": "Batch Py File Modification with Progress Bar",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_code/recover.py": "Reload-Free Code Recovery with Comby",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_code/recover_and_rewrite.py": "Recover and Rewrite Source Code",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_code/rewrite.py": "Time-Travel Debugging: Rewriting Python Code with Comby",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_code/test.py": "Skipping Exception, Resurrection Time Travel Debugging",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_code/test.sh": "Dynamic Code Reloading for Debugging",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_code/test2.py": "Confusing Functions and Decorators",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_method_in_class/test.py": "Async Tasks and Exception Improvement",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_method_in_class/test.py:1-35": "Incomplete Exception Handling in Class mClass",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_method_in_class/test.py:36-68": "Asynchronous Function Testing",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_method_in_class/test.sh": "Skip Exception, Continue Resurrection Time Travel Debugging",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_semgrep/subdir/test2.py": "Function 'foo' Called with Argument 0",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_semgrep/test.py": "Function 'foo' Argument 1 Called",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_semgrep/test.sh": "Demonstrating Semgrep's Dry Run and Replacement",
    "/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_semgrep/test2.py": "Semgrep Test Case 2: Mysterious 'foo' Call with Argument 0",
    "/tests/soundhound_houndify_midomi_sound_recognize_music/mixed_to_simplified_chinese.py": "Simplified to Traditional Chinese Conversion with OpenCC",
    "/tests/soundhound_houndify_midomi_sound_recognize_music/shazamio_recognize_music.py": "ShazamIO Music Recognizer",
    "/tests/soundhound_houndify_midomi_sound_recognize_music/test.py": "Sound Recognition with Shazam & Houndify APIs",
    "/tests/soundhound_houndify_midomi_sound_recognize_music/test_shazamio_recognize_music.sh": "ShazamIO Music Recognition Test",
    "/tests/soundhound_houndify_midomi_sound_recognize_music/test_songrec_rust.sh": "Song Recognition Tool: Matching Limitations",
    "/tests/spatial_temporal_slice_pip/test.py": "OpenCV VideoFrame Reader",
    "/tests/split_long_image_into_video/cleanup.sh": "Post-Process Cleanup",
    "/tests/split_long_image_into_video/generate_video.py": "Video Generation from Long Image Slices",
    "/tests/split_long_image_into_video/generate_video.py:1-36": "Resizing Image for Video Cover",
    "/tests/split_long_image_into_video/generate_video.py:37-89": "Video Generator from Long Image",
    "/tests/split_long_image_into_video/generate_video.py:90-97": "Temporary Execute and Cleanup",
    "/tests/split_long_image_into_video/init.sh": "Download BGM and Image with Curl",
    "/tests/still_watermark_auto_removal/EAST-Detector-for-text-detection-using-OpenCV-master/README.md": "Real-time Accurate Text Detection with EAST Detector",
    "/tests/still_watermark_auto_removal/EAST-Detector-for-text-detection-using-OpenCV-master/README.md:1-13": "EAST Detector: Real-Time Text Detection",
    "/tests/still_watermark_auto_removal/EAST-Detector-for-text-detection-using-OpenCV-master/README.md:15-24": "Natural Scene Text Detection: Challenges and OpenCV",
    "/tests/still_watermark_auto_removal/EAST-Detector-for-text-detection-using-OpenCV-master/README.md:24-35": "EAST Detector for Complex Text Detection",
    "/tests/still_watermark_auto_removal/EAST-Detector-for-text-detection-using-OpenCV-master/opencv_text_detection_image.py": "OpenCV-EAST Text Detection Script",
    "/tests/still_watermark_auto_removal/EAST-Detector-for-text-detection-using-OpenCV-master/opencv_text_detection_image.py:1-26": "OpenCV Image Text Detection",
    "/tests/still_watermark_auto_removal/EAST-Detector-for-text-detection-using-OpenCV-master/opencv_text_detection_image.py:116-133": "OpenCV Bounding Box Detector",
    "/tests/still_watermark_auto_removal/EAST-Detector-for-text-detection-using-OpenCV-master/opencv_text_detection_image.py:27-55": "EAST Text Detection in OpenCV",
    "/tests/still_watermark_auto_removal/EAST-Detector-for-text-detection-using-OpenCV-master/opencv_text_detection_image.py:56-86": "EAST Detector for OpenCV Text Detection",
    "/tests/still_watermark_auto_removal/EAST-Detector-for-text-detection-using-OpenCV-master/opencv_text_detection_image.py:88-115": "OpenCV Text Detection and Suppression",
    "/tests/still_watermark_auto_removal/automatic-watermark-detection/video_watermark_detection.py": "Automatic Video Watermark Detection and Removal",
    "/tests/still_watermark_auto_removal/automatic-watermark-detection/video_watermark_detection.py:1-25": "Video Watermark Detection Setup",
    "/tests/still_watermark_auto_removal/automatic-watermark-detection/video_watermark_detection.py:120-144": "Watermark Detection Bounding Boxes",
    "/tests/still_watermark_auto_removal/automatic-watermark-detection/video_watermark_detection.py:146-181": "Video Watermark Detection Algorithm",
    "/tests/still_watermark_auto_removal/automatic-watermark-detection/video_watermark_detection.py:183-206": "Adaptive Thresholding for Video Watermark Detection",
    "/tests/still_watermark_auto_removal/automatic-watermark-detection/video_watermark_detection.py:207-239": "Video Watermark Detection and Removal",
    "/tests/still_watermark_auto_removal/automatic-watermark-detection/video_watermark_detection.py:27-62": "Automatic Video Watermark Detection and Analysis",
    "/tests/still_watermark_auto_removal/automatic-watermark-detection/video_watermark_detection.py:64-91": "AI-Based Watermark Removal",
    "/tests/still_watermark_auto_removal/automatic-watermark-detection/video_watermark_detection.py:92-119": "Deep Learning Watermark Detection",
    "/tests/still_watermark_auto_removal/maxRectangleSolver.py": "Optimizing Rectangles in MaxRectangleSolver.py",
    "/tests/still_watermark_auto_removal/maxRectangleSolver.py:1-43": "Max Rectangle Solver for JSON Canvas",
    "/tests/still_watermark_auto_removal/maxRectangleSolver.py:121-151": "Max Rectangle Finder",
    "/tests/still_watermark_auto_removal/maxRectangleSolver.py:153-161": "Optimal Rectangle Generator",
    "/tests/still_watermark_auto_removal/maxRectangleSolver.py:44-85": "Checking Rectangle Overlaps",
    "/tests/still_watermark_auto_removal/maxRectangleSolver.py:86-120": "Max Rectangle Solver Algorithm",
    "/tests/still_watermark_auto_removal/test_auto_video_watermark_detection.sh": "Auto Video Watermark Detection",
    "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/README.md": "Taobao Guangguang Crawler: TikTok DouYin Test",
    "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/decodeTaobaoQuery.py": "Decoding Taobao Query Strings",
    "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/decodeTaobaoQuery.py:1-3": "Decoding Taobao Query Strings",
    "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/decodeTaobaoQuery.py:3-3": "Decoding Taobao Query Parameters",
    "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/decodeTaobaoQuery.py:3-8": "URL-Encoded String Decoding and JSON Printing",
    "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/disable_ssl.js": "Frida SSL Bypass",
    "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/frida_globalswitch_apk.js": "Frida-Driven Taobao Global Switch APK Debugging",
    "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/frida_globalswitch_apk.js:2-27": "Disabling SSL-SPDY with Frida JavaScript",
    "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/frida_globalswitch_apk.js:28-59": "Frida APK Class Printing with Callbacks",
    "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/frida_globalswitch_apk.js:60-87": "Java Class Manipulation for Tracking",
    "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/frida_globalswitch_apk.js:88-112": "Frida-Based SPDY Disable in APK",
    "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/get_frida_codeshare_source.sh": "Frida CodeShare Downloader with Security Warning",
    "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/get_url.py": "Fetch Data with Cookies",
    "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/guangguang_update.sh": "Taobao API Fetch and Post Script",
    "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/guangguang_update.sh:1-1": "Taobao API GET Request for Content Recommendations",
    "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/guangguang_update.sh:1-7": "Taobao API HTTP GET Request",
    "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/guangguang_update.sh:23-39": "Taobao Video API Request",
    "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/guangguang_update.sh:39-47": "Deciphering Taobao API Call",
    "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/guangguang_update.sh:47-47": "Sending POST Request to API with JSON Parameters and Authentication",
    "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/guangguang_update.sh:7-22": "Taobao API GET Request with JavaScript",
    "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/run_gg.sh": "Socks5 Mitmproxy Setup for Taobao Test",
    "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/run_weishi.sh": "Weishi Socks5 Mitmproxy",
    "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/taobao_query.sh": "TMALL_MARKET_O2O JSON Data Explained",
    "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/taobao_query.sh:1-11": "Checking Login and H5API Usage",
    "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/taobao_query.sh:11-11": "JSON Data: Taobao Market O2O Stores",
    "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/view_weishi_capture_data.sh": "Weishi Capture Data Script",
    "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/wtf_is_this_shit.sh": "Download and Unzip Main JSON",
    "/tests/tencent_video_recommendation_extraction/dump_page.py": "Automate QQ Video Page Dump",
    "/tests/tencent_video_recommendation_extraction/loop_all_tags.py": "Extract and Print HTML Attributes",
    "/tests/tencent_video_recommendation_extraction/phantomjs_test.js": "PhantomJS-Based URL Checker",
    "/tests/tencent_video_recommendation_extraction/playwright_with_elinks.sh": "Automated Extraction of Tencent Video Recommendations",
    "/tests/tencent_video_recommendation_extraction/requests_html_test.py": "QQ Video Link Scraper",
    "/tests/test_auto_dog_video_giphy_online_producer.py": "Automated Giphy Online Video Producer Testing",
    "/tests/test_auto_dog_video_giphy_online_producer.py:1-37": "Default Timeout for Requests Library",
    "/tests/test_auto_dog_video_giphy_online_producer.py:122-148": "Auto-Download Music using Redis and NeteaseAPI",
    "/tests/test_auto_dog_video_giphy_online_producer.py:149-170": "Music and Lyric File Previewer",
    "/tests/test_auto_dog_video_giphy_online_producer.py:171-183": "Giphy Video Subtitle Generator",
    "/tests/test_auto_dog_video_giphy_online_producer.py:184-215": "Giphy Online Auto Producer Test",
    "/tests/test_auto_dog_video_giphy_online_producer.py:216-248": "Test Medialang Render Function",
    "/tests/test_auto_dog_video_giphy_online_producer.py:249-275": "Temporary Directory Test Cleanup",
    "/tests/test_auto_dog_video_giphy_online_producer.py:276-295": "Auto Dog Video: PMRT_0 Function Implementation",
    "/tests/test_auto_dog_video_giphy_online_producer.py:38-65": "Preconfiguring Dog or Cat",
    "/tests/test_auto_dog_video_giphy_online_producer.py:66-90": "Paraphrasing Bilibili Metadata Generator",
    "/tests/test_auto_dog_video_giphy_online_producer.py:91-121": "Dog and Cat Metadata Handling",
    "/tests/test_auto_dog_video_giphy_online_producer.sh": "Automating Video Testing Script",
    "/tests/test_auto_dog_video_giphy_online_producer.yaml": "Tmux Test Session Setup",
    "/tests/test_auto_local_producer.py": "Local Producer OCR Test Suite",
    "/tests/test_auto_local_producer.py:1-27": "OCR Testing with CUDA and Pip Modifications",
    "/tests/test_auto_local_producer.py:124-147": "Temporary Directory Cleanup in Auto Local Producer",
    "/tests/test_auto_local_producer.py:149-154": "Debugging Save Path with Breakpoints",
    "/tests/test_auto_local_producer.py:28-56": "Local Producer Setup Code",
    "/tests/test_auto_local_producer.py:57-87": "Video Processing Configuration and Testing",
    "/tests/test_auto_local_producer.py:88-123": "Temporary Directory Context Manager and Test Function",
    "/tests/test_auto_local_producer.sh": "Customizing LD_LIBRARY_PATH for Local Producer Test",
    "/tests/test_auto_local_reviewer.py": "Initializing WB Rev Object",
    "/tests/test_auto_local_reviewer.py:1-24": "Setting Up Auto Arguments and Test Templates",
    "/tests/test_auto_local_reviewer.py:25-32": "Initializing Main Object and Calling main() Method",
    "/tests/test_bilibili_register_video.py": "Bilibili Video Registration Test",
    "/tests/test_bilibili_resolve_tid.py": "Testing Bilibili TID Resolution",
    "/tests/test_commons.py": "Modifying Test Path and Proxy Variables",
    "/tests/test_dummy.py": "Testing Content Producer and Reviewer Functionality",
    "/tests/test_dummy.sh": "Running Test Dummy Python Script",
    "/tests/test_iterator_generator_wrapper_lazero_utils.py": "Lazero IteratorWrapper Testing",
    "/tests/test_local_reviewer.py": "Directory Content Reviewer Test",
    "/tests/test_manual_censor.py": "Manual Censoring Test Suite",
    "/tests/test_manual_censorInterface.py": "Content Censorship with Tags Testing",
    "/tests/test_medialang.py": "Testing Medialang with Prettified Scripts",
    "/tests/test_ocr_entity_detector.py": "Optical Character Recognition and Spatial Analysis",
    "/tests/test_ocr_entity_detector.py:1-30": "Subtitle Detection with JSON and PaddleOCR",
    "/tests/test_ocr_entity_detector.py:31-43": "Forced OCR Combination and Result Printing",
    "/tests/test_remerge_demanded_cut_spans.py": "Testing Consistent Span Reordering",
    "/tests/test_remerge_demanded_cut_spans.py:1-2": "Testing Demanded Cut Spans Merge",
    "/tests/test_remerge_demanded_cut_spans.py:2-7": "Testing Cut Spans Validation",
    "/tests/test_remerge_demanded_cut_spans.py:8-35": "Consistent Span Order and Duration Checker",
    "/tests/test_talib_stream_ema.py": "Comparing Talib SMA Execution Speeds: Function vs. Streaming",
    "/tests/test_weibo_pets.py": "Automated Weibo Pets Data Review",
    "/tests/test_weibo_pets.sh": "Automated Weibo Pets Testing",
    "/tests/title_cover_generator/commons.py": "Efficient Text Data Processing in Commons.py",
    "/tests/title_cover_generator/commons.py:1-17": "Load Train Data Core: Pickle File Imports",
    "/tests/title_cover_generator/commons.py:18-44": "Pickle Data Processing and Shuffling",
    "/tests/title_cover_generator/commons.py:45-67": "Text Chunks Iteration and String Formatting",
    "/tests/title_cover_generator/commons.py:68-87": "Function `import_word`: Load, Analyze, Print Word Data",
    "/tests/title_cover_generator/gpt2_title_data_prep.py": "Train-Test Data Preparation",
    "/tests/title_cover_generator/gpt2_train.sh": "Train GPT-2 for News Titles",
    "/tests/title_cover_generator/paddlenlp_word_label.py": "PaddleNLP Taskflow Data Processing",
    "/tests/title_cover_generator/pegasus_trainer.py": "PEGASUS MT Model Training and Performance Evaluation",
    "/tests/title_cover_generator/pegasus_trainer.py:2-27": "Training PEGASUS Model for Specific Tasks",
    "/tests/title_cover_generator/pegasus_trainer.py:28-49": "Pegasus Trainer: RMSprop, Batch Size 2, Unlimited Sentence Length",
    "/tests/title_cover_generator/pegasus_trainer.py:52-77": "Pegasus Translation Model Loss Calculation",
    "/tests/title_cover_generator/pegasus_trainer.py:78-94": "Frustrated ML Trainer: Kaggle Woes",
    "/tests/title_cover_generator/pyltp_server.py": "PyLTP Server: NLP Tasks & Relationship Extraction",
    "/tests/title_cover_generator/pyltp_server.py:1-35": "Initialize LTP Models for NLP Tasks",
    "/tests/title_cover_generator/pyltp_server.py:114-151": "Named Entity Categorizer",
    "/tests/title_cover_generator/pyltp_server.py:152-175": "Named Entity Recognition for Segmentation",
    "/tests/title_cover_generator/pyltp_server.py:176-198": "Named Entity Recognition and Extraction Function",
    "/tests/title_cover_generator/pyltp_server.py:199-229": "Syntax Parser Tree Generation",
    "/tests/title_cover_generator/pyltp_server.py:230-258": "Triplet Extraction Function",
    "/tests/title_cover_generator/pyltp_server.py:260-284": "Extracting SPO Triples from NL Sentences using PyLTP",
    "/tests/title_cover_generator/pyltp_server.py:285-306": "Relationship Checker and Appender",
    "/tests/title_cover_generator/pyltp_server.py:307-331": "Named Entity Extraction Code",
    "/tests/title_cover_generator/pyltp_server.py:332-354": "Parsing Sentence Dependency in PyLTp Server",
    "/tests/title_cover_generator/pyltp_server.py:355-383": "Arc Dictionary Organization Function",
    "/tests/title_cover_generator/pyltp_server.py:36-61": "Load and Utilize NLP Models in PyLTp Server",
    "/tests/title_cover_generator/pyltp_server.py:384-414": "Named Entity Recognizer in Chinese Language Processing Model",
    "/tests/title_cover_generator/pyltp_server.py:415-426": "Triple Extraction and Release",
    "/tests/title_cover_generator/pyltp_server.py:62-90": "Named Entity Recognition Functions",
    "/tests/title_cover_generator/pyltp_server.py:91-113": "Named Entity Recognition Code Snippet",
    "/tests/title_cover_generator/spacy_word_swapper.py": "Spacy-Jieba Tokenizer for English and Non-English Text",
    "/tests/title_cover_generator/spacy_word_swapper.py:1-30": "Spacy Chinese Text Search Function",
    "/tests/title_cover_generator/spacy_word_swapper.py:31-56": "Spacy Word Swapper: POS and Dependency Tags",
    "/tests/title_cover_generator/tokenizer.py": "T5PegasusTokenizer: Custom Bert Extender",
    "/tests/title_rewrite_paraphrase/test.py": "Paraphrasing Titles with ClueAI and OpenAI",
    "/tests/title_rewrite_paraphrase/test.py:1-46": "OpenAI Paraphraser with ClueAI and LRU Cache",
    "/tests/title_rewrite_paraphrase/test.py:47-67": "Paraphrase Prediction Generator",
    "/tests/title_rewrite_paraphrase/test_api.py": "API-Based Chinese Text Paraphrasing Test",
    "/tests/title_rewrite_paraphrase/test_baidu_paraphrase.py": "Baidu Paraphraser: Language Translation and Detection",
    "/tests/title_rewrite_paraphrase/test_baidu_paraphrase.py:1-41": "Baidu Language Detection and Translation Toolkit",
    "/tests/title_rewrite_paraphrase/test_baidu_paraphrase.py:110-124": "Baidu Paraphraser Testing",
    "/tests/title_rewrite_paraphrase/test_baidu_paraphrase.py:42-81": "Baidu Paraphrase via Translation",
    "/tests/title_rewrite_paraphrase/test_baidu_paraphrase.py:83-109": "Paraphrasing through Multiple Languages",
    "/tests/title_rewrite_paraphrase/test_local.py": "Paraphrasing Function Performance Testing",
    "/tests/title_rewrite_paraphrase/test_local.py:1-33": "Local Tokenizer and Model Loading with Preprocessing",
    "/tests/title_rewrite_paraphrase/test_local.py:34-75": "Time-efficient Paraphrasing Model",
    "/tests/title_rewrite_paraphrase/test_local.py:76-77": "Acceptable Time Range",
    "/tests/tkinter_tag_toggle_button/toggle_button.py": "Tkinter Tag Toggle Button",
    "/tests/tkinter_tag_toggle_button/toggle_button.py:1-46": "Tkinter Toggle Buttons",
    "/tests/tkinter_tag_toggle_button/toggle_button.py:47-67": "Tkinter Tag Toggle Buttons for Video Editing",
    "/tests/topic_modeling/english_test.py": "Multi-Library Text Processing for Topic Modeling",
    "/tests/topic_modeling/english_test.py:1-30": "Text Preprocessing with NLTK and Spacy",
    "/tests/topic_modeling/english_test.py:31-56": "Lemmatizing with TextBlob: Redundant and Unclear",
    "/tests/topic_modeling/english_test.py:57-66": "Lemmatization in NLP Task",
    "/tests/topic_modeling/english_test.py:66-74": "Tokenizing and Storing Lemmas",
    "/tests/topic_modeling/poc_english_preprocessing.py": "English Text Preprocessing with spaCy",
    "/tests/topic_modeling/poc_english_preprocessing.py:1-27": "English Preprocessing in Topic Modeling",
    "/tests/topic_modeling/poc_english_preprocessing.py:28-42": "Stemming and Stop Words Removal",
    "/tests/topic_modeling/poc_english_topic_modeling.py": "Topic Modeling with Python: Analyzing English Documents",
    "/tests/topic_modeling/poc_english_topic_modeling.py:1-27": "NLP Model Initialization and Preprocessing",
    "/tests/topic_modeling/poc_english_topic_modeling.py:100-106": "Topic Distribution Analysis via LDA",
    "/tests/topic_modeling/poc_english_topic_modeling.py:28-71": "Preprocessing and Vectorizing Text",
    "/tests/topic_modeling/poc_english_topic_modeling.py:72-99": "Topic Modeling with CountVectorizer and LatentDirichletAllocation",
    "/tests/unittest_aegisub_ass_configure.py": "Aegisub Ass Configure Test",
    "/tests/unittest_async_function_type.py": "Testing Async Function Types",
    "/tests/unittest_bezier_evaluate.py": "Testing Bezier Curve Evaluation",
    "/tests/unittest_bezier_evaluate.py:1-43": "Bezier Curve Evaluator",
    "/tests/unittest_bezier_evaluate.py:44-44": "Printing Raw 'axis' Value",
    "/tests/unittest_bezier_fitting_bias_skew_baidu_resnet_animals_detection_hyperopt.py": "Bezier-Based Animal Detection with Hyperopt Optimization",
    "/tests/unittest_bezier_fitting_bias_skew_baidu_resnet_animals_detection_hyperopt.py:1-33": "Bezier Curve Function and Evaluation",
    "/tests/unittest_bezier_fitting_bias_skew_baidu_resnet_animals_detection_hyperopt.py:110-133": "Neural Network Fitting with Bezier Curve and Hyperopt",
    "/tests/unittest_bezier_fitting_bias_skew_baidu_resnet_animals_detection_hyperopt.py:134-167": "Optimizing Skew and Bias for Model Performance",
    "/tests/unittest_bezier_fitting_bias_skew_baidu_resnet_animals_detection_hyperopt.py:168-172": "Evaluating Best Hyperparameters and Loss",
    "/tests/unittest_bezier_fitting_bias_skew_baidu_resnet_animals_detection_hyperopt.py:34-61": "Exponential Network Model for Inputs",
    "/tests/unittest_bezier_fitting_bias_skew_baidu_resnet_animals_detection_hyperopt.py:62-88": "Animal Detection Probabilities Testing",
    "/tests/unittest_bezier_fitting_bias_skew_baidu_resnet_animals_detection_hyperopt.py:89-109": "Hyperopt Tuning Input Bias and Skew",
    "/tests/unittest_bilibili_login.py": "Bilibili Login Unit Test",
    "/tests/unittest_bilibili_recommendation_server.py": "Bilibili Recommendation Server Tester",
    "/tests/unittest_bilibili_recommendation_server.py:1-33": "Bilibili Recommendation Server Testing",
    "/tests/unittest_bilibili_recommendation_server.py:34-50": "Bilibili Server Function Parameters",
    "/tests/unittest_bilibili_video_upload.py": "Bilibili Video Upload with FFmpeg",
    "/tests/unittest_bilibili_video_upload.py:1-29": "Bilibili Video Uploader with FFmpeg",
    "/tests/unittest_bilibili_video_upload.py:30-34": "Testing Bilibili Video Upload with Credentials",
    "/tests/unittest_caer_fps_kitty_9.5.py": "Reading FPS with OpenCV and caer",
    "/tests/unittest_caer_get_gif_width_height.py": "Get GIF Width and Height from caer.video",
    "/tests/unittest_chain.py": "Unnecessary 'Chain' Module?",
    "/tests/unittest_check_video_corrput.py": "Check Video Corruption with FFmpeg",
    "/tests/unittest_cirular_import.py": "Circular Import Testing",
    "/tests/unittest_clean_lrc.py": "LRC Lyrics Format Cleaner",
    "/tests/unittest_clean_lrc.py:1-10": "Time-Stamped LRC Creation Test",
    "/tests/unittest_clean_lrc.py:12-46": "LRC Lyrics Validator",
    "/tests/unittest_clean_lrc.py:47-78": "Parse LRC and Validate Times",
    "/tests/unittest_clean_lrc.py:79-98": "LRC Format Generator",
    "/tests/unittest_convolution_bilibili_translate_text_detect.py": "Image Processing Pipeline",
    "/tests/unittest_convolution_bilibili_translate_text_detect.py:1-41": "Retrieving Video Dimensions from JSON",
    "/tests/unittest_convolution_bilibili_translate_text_detect.py:112-142": "Bounding Box Detection Algorithm",
    "/tests/unittest_convolution_bilibili_translate_text_detect.py:143-156": "Bounding Box Visualization & Image Display",
    "/tests/unittest_convolution_bilibili_translate_text_detect.py:44-86": "Blurred Image Averaging for Convolution",
    "/tests/unittest_convolution_bilibili_translate_text_detect.py:87-111": "Bounding Box Processing and NMS",
    "/tests/unittest_cv2_rectangle.py": "Draw Rectangle on Black Image",
    "/tests/unittest_extract_cat_cover_from_video.py": "Automated Bilibili Pet Video Cover Extractor",
    "/tests/unittest_extract_cat_cover_from_video.py:1-42": "Download Bilibili Video with yt_dlp",
    "/tests/unittest_extract_cat_cover_from_video.py:43-74": "Video Cover Extractor: Efficiency Enhancement",
    "/tests/unittest_extract_cat_cover_from_video.py:75-88": "Video Clear Frame Detection",
    "/tests/unittest_extract_tags_tfidf.py": "Chinese Text Tag Extraction using Jieba and NLTK",
    "/tests/unittest_ffmpegVideoPreProductionFilter.py": "Video Pre-Production Filter Testing",
    "/tests/unittest_ffmpegVideoPreProductionFilter.py:1-34": "Initializing FFmpeg Video Filter Unit Tests",
    "/tests/unittest_ffmpegVideoPreProductionFilter.py:35-64": "Temporary Directory and Unique Cache File Generation",
    "/tests/unittest_ffmpegVideoPreProductionFilter.py:65-97": "Text Detection Test with FFmpeg Filters",
    "/tests/unittest_ffmpegVideoPreProductionFilter.py:98-117": "Iterative Video Filter Testing",
    "/tests/unittest_ffmpeg_args.py": "FFmpeg Video Processing with Python",
    "/tests/unittest_ffmpeg_args.py:1-23": "Split, Filter, and Scale Video with FFmpeg",
    "/tests/unittest_ffmpeg_args.py:23-48": "FFmpeg Video Concatenation Commands",
    "/tests/unittest_ffmpeg_args.py:49-84": "Video Processing with FFmpeg Commands",
    "/tests/unittest_ffmpeg_args.py:85-98": "Video Processing with FFmpeg Filters and Concatenation",
    "/tests/unittest_ffmpeg_args.py:99-107": "Subprocess Running FFmpeg Command",
    "/tests/unittest_ffmpeg_cropdetect_from_image_parse_log.py": "Threshold-Based Image Cropping with FFmpeg and OpenCV",
    "/tests/unittest_ffmpeg_cropdetect_from_image_parse_log.py:1-40": "Extracting Crops from Image with FFmpeg",
    "/tests/unittest_ffmpeg_cropdetect_from_image_parse_log.py:40-62": "Crop Log Parser and Dimension Extractor",
    "/tests/unittest_ffmpeg_cropdetect_from_image_parse_log.py:63-78": "Image Crop Ratio Threshold Detector",
    "/tests/unittest_ffmpeg_delogo_parser.py": "Delogo Parser: Parsing & Filtering Video Streams",
    "/tests/unittest_ffmpeg_delogo_parser.py:1-20": "Delogo Parser and Filter for FFmpeg",
    "/tests/unittest_ffmpeg_delogo_parser.py:21-64": "FFmpeg Delogo Filter Parser Test",
    "/tests/unittest_ffmpeg_delogo_parser.py:65-83": "Delogo Filter: Extracting and Removing Logos",
    "/tests/unittest_ffmpeg_overlay_boxblur.py": "FFmpeg Overlay Boxblur Testing",
    "/tests/unittest_ffmpeg_overlay_boxblur.py:1-40": "Gaussian Blur and Overlay with FFmpeg",
    "/tests/unittest_ffmpeg_overlay_boxblur.py:42-54": "Temporary FFmpeg Output in Python",
    "/tests/unittest_full_text_search_peewee_sqlite.py": "Peewee SQLite Full-Text Search Demo",
    "/tests/unittest_full_text_search_peewee_sqlite.py:1-42": "Peewee SQLite Full-Text Search Setup",
    "/tests/unittest_full_text_search_peewee_sqlite.py:43-68": "Full-Text Search Test with Python and Bilibili",
    "/tests/unittest_get_subtid_name_and_majortid_name.py": "Getting Major and Minor Topic IDs for TID 1",
    "/tests/unittest_get_subtid_name_and_majortid_name.py:1-26": "Retrieve Major/Minor Topics from Dictionary",
    "/tests/unittest_get_subtid_name_and_majortid_name.py:27-49": "Retrieve and Format Topic Tags",
    "/tests/unittest_houghline_dog_blur_detection.py": "Hough Line Detection for Edge Lines in Images",
    "/tests/unittest_houghline_dog_blur_detection.py:1-28": "Blur Detection and Edge Detection Algorithm",
    "/tests/unittest_houghline_dog_blur_detection.py:29-43": "Line Detection with Hough Transform",
    "/tests/unittest_lazero_external_downloader.py": "File Downloader and Deleter",
    "/tests/unittest_mathlib_ranges_continual.py": "Mathlib Ranges Continual Merging",
    "/tests/unittest_music_recognition.py": "Unit Test: Music Recognition Backends",
    "/tests/unittest_musictoolbox_netease_music_lyric.py": "NeteaseMusic API Lyrics Test"
}