{
    "/pyjom/requirements.txt": "Python Nude Detection Dependencies",
    "/pyjom/templates/medialang/autoCensor/blackout_detector.mdl.j2": "Blackout Detector Template",
    "/pyjom/templates/medialang/autoCensor/file_format_detector.mdl.j2": "JSON File Format Detector Code Snippet",
    "/pyjom/templates/medialang/autoCensor/frameborder_detector.mdl.j2": "Frame Border Detector Template",
    "/pyjom/templates/medialang/autoCensor/framediff_detector.mdl.j2": "Framediff Detector Template",
    "/pyjom/templates/medialang/autoCensor/subtitle_detector.mdl.j2": "Subtitle Detector Template",
    "/pyjom/templates/medialang/autoCensor/yolov5_detector.mdl.j2": "AutoCensor JSON Configuration",
    "/pyjom/touch_init_files.sh": "Create Python Packages with Single Command",
    "/samples/image/qrcode_test/init.sh": "QR Code Image Conversion Script",
    "/samples/medialang/dog_cat_test.mdl": "Media Project Configuration Tool",
    "/samples/medialang/dog_cat_test.mdl:1-31": "Media Project Code",
    "/samples/medialang/dog_cat_test.mdl:117-146": "Video File Configurations",
    "/samples/medialang/dog_cat_test.mdl:147-176": "Video Processing Parameters",
    "/samples/medialang/dog_cat_test.mdl:177-206": "Video Playback Parameters",
    "/samples/medialang/dog_cat_test.mdl:207-236": "Video Properties List",
    "/samples/medialang/dog_cat_test.mdl:237-266": "Video File Series with Cut Ranges",
    "/samples/medialang/dog_cat_test.mdl:267-296": "Silent Video Speed Adjustments",
    "/samples/medialang/dog_cat_test.mdl:297-319": "Silent Video Files: Speed & Cut Duration",
    "/samples/medialang/dog_cat_test.mdl:31-57": "Video File List and Properties",
    "/samples/medialang/dog_cat_test.mdl:58-86": "Video Properties and Cut Duration",
    "/samples/medialang/dog_cat_test.mdl:87-116": "Video Attributes List",
    "/samples/medialang/dog_cat_test_nofast.mdl": "Multimedia Properties and Cuts Management",
    "/samples/medialang/dog_cat_test_nofast.mdl:1-31": "Multi-Video Source Properties & Speed Control",
    "/samples/medialang/dog_cat_test_nofast.mdl:117-146": "Video Clip Data Format",
    "/samples/medialang/dog_cat_test_nofast.mdl:147-176": "Video Properties and Time Intervals in Media Language Script",
    "/samples/medialang/dog_cat_test_nofast.mdl:177-206": "Video Processing Parameters List",
    "/samples/medialang/dog_cat_test_nofast.mdl:207-236": "Media File Properties for Medialang Project",
    "/samples/medialang/dog_cat_test_nofast.mdl:237-266": "Video Sequencing Code and Properties",
    "/samples/medialang/dog_cat_test_nofast.mdl:267-296": "Timed Video Sequencing Code",
    "/samples/medialang/dog_cat_test_nofast.mdl:297-319": "Similar Video Clips",
    "/samples/medialang/dog_cat_test_nofast.mdl:31-57": "Video File Series with Speed Controls",
    "/samples/medialang/dog_cat_test_nofast.mdl:58-86": "Video File Properties List",
    "/samples/medialang/dog_cat_test_nofast.mdl:87-116": "Media Language Model Video Parameters",
    "/samples/medialang/target/larger_play.sh": "Full Screen Subtitle Playback Script",
    "/samples/medialang/target/larger_render.py": "Larger Render Python Script",
    "/symlinks/README.md": "Symlink Resource Hub",
    "/tasks/README.md": "Adequate Actions for Project Success",
    "/tasks/qq/login_opq_arm64.sh": "ARM64 Linux Firefox QR Code Login",
    "/tasks/qq/login_opq_arm64_another_account.sh": "ARM64 Firefox Login Script",
    "/tasks/qq/qq_red_packet_collect/README.md": "Relogin & Group Chat Log Clear",
    "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py": "Bilibili Ad Template Generation",
    "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:1-46": "Ad Template Initialization",
    "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:118-139": "Bilibili API Link Generator",
    "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:140-178": "Bilibili Short Link Generator",
    "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:179-219": "Generate QR Code for Bilbili Video Ad",
    "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:220-244": "Video Ad Generator Function",
    "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:245-274": "Night Mode Image Generator",
    "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:275-302": "Gradient Paint Customization",
    "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:303-334": "Gradient Mask and Overlay Application",
    "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:336-361": "Bilibili Ad Image Resizing",
    "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:362-390": "Dynamic Ad Template with Play Button, Stats, and QR Code",
    "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:391-425": "Dynamic QR Mask Generator",
    "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:426-450": "QR Image Generator with Text Overlay",
    "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:451-485": "Remove QR Codes from Images using Pyzbar",
    "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:486-513": "QR Code Polygon Coordinates Extractor",
    "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:49-89": "Python Ad Template Functions",
    "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:514-540": "QR Code Inpainting Function",
    "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:541-568": "Polygon Area Calculator",
    "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:569-594": "QR Positioning Algorithm",
    "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:595-617": "QR Code Preprocessing Algorithm",
    "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:618-633": "Rotating and Combining Images with OpenCV",
    "/tasks/qq/qq_red_packet_collect/ad_template_2_functional.py:90-116": "Shorten Video Link with Xiaojuzi API",
    "/tasks/qq/qq_red_packet_collect/adtools.py": "Multi-AI Ad Generator Tool",
    "/tasks/qq/qq_red_packet_collect/adtools.py:1-39": "QQ Cat/Dog Lover Detector",
    "/tasks/qq/qq_red_packet_collect/adtools.py:111-148": "Check Animal from String",
    "/tasks/qq/qq_red_packet_collect/adtools.py:149-182": "Neo4j Driver and Connection Creation Function",
    "/tasks/qq/qq_red_packet_collect/adtools.py:183-208": "Bilibili Group Check and Node Creation",
    "/tasks/qq/qq_red_packet_collect/adtools.py:210-240": "Get Cat or Dog Ad Function",
    "/tasks/qq/qq_red_packet_collect/adtools.py:241-267": "Data Fetching and Filtering Script",
    "/tasks/qq/qq_red_packet_collect/adtools.py:268-305": "Generate Ads from Video Info",
    "/tasks/qq/qq_red_packet_collect/adtools.py:306-339": "Base64 Encoding File Content",
    "/tasks/qq/qq_red_packet_collect/adtools.py:340-370": "Ad Style Generator and Censoring",
    "/tasks/qq/qq_red_packet_collect/adtools.py:372-388": "Code Censors and Sends Video Links",
    "/tasks/qq/qq_red_packet_collect/adtools.py:40-77": "Cat or Dog Image Classification with Rate Limiting",
    "/tasks/qq/qq_red_packet_collect/adtools.py:78-110": "API Request with Requests Library",
    "/tasks/qq/qq_red_packet_collect/base_opq.py": "QQ Red Packet Collect Base Operations",
    "/tasks/qq/qq_red_packet_collect/base_opq.py:1-46": "QQ Red Packet Collection Script",
    "/tasks/qq/qq_red_packet_collect/base_opq.py:110-146": "QQ Search and Friend Add Functions",
    "/tasks/qq/qq_red_packet_collect/base_opq.py:147-179": "Random Sleep and Keyword Filtering in Red Bag Function",
    "/tasks/qq/qq_red_packet_collect/base_opq.py:180-202": "Red Bag Collection with Retry and Backoff",
    "/tasks/qq/qq_red_packet_collect/base_opq.py:203-210": "Async Thread Decorator",
    "/tasks/qq/qq_red_packet_collect/base_opq.py:47-73": "QQ Botoy Instance Setup",
    "/tasks/qq/qq_red_packet_collect/base_opq.py:74-109": "Group Handling Functions in qq_red_packet_collect",
    "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py": "Async Red Packet Collection in opqbot",
    "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:1-45": "Arm64 Opqbot: Disabling 复读机, Managing Functions",
    "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:110-132": "Filtering and Storing Group Chat Replies",
    "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:133-152": "Censoring Bot: Checks Messages and Delays Sending",
    "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:153-172": "Group Message Sender and Ban System",
    "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:173-209": "Four Functions for Sending Group Chat Messages",
    "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:210-240": "Weighted Random Reply Yielder for Group Chat Bot",
    "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:243-274": "Cat or Dog Image Detection and Advertisement",
    "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:275-301": "Group Chat Ad Counter Manager",
    "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:302-329": "Media Message Handler with Error Logging and Delay Initialization",
    "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:331-352": "Chat Cursor Data Writer",
    "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:353-373": "QQ Bot: Chat Logger and GPT Trainer",
    "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:374-394": "Botoy Red Packet Message Processor",
    "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:395-421": "Red Packet Collection Bot for QQ Groups",
    "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:46-80": "Async QQ Group Message Sender",
    "/tasks/qq/qq_red_packet_collect/botoy_redpacket_collect.py:81-109": "Group Message Construction and Retry",
    "/tasks/qq/qq_red_packet_collect/censorApis.py": "Censoring Replies: Sentiment Analysis Functions",
    "/tasks/qq/qq_red_packet_collect/censorApis.py:1-33": "Censoring Replies with Sentiment Analysis",
    "/tasks/qq/qq_red_packet_collect/censorApis.py:34-47": "Censor Reply with Sentiment Check",
    "/tasks/qq/qq_red_packet_collect/chatApis.py": "ChatAPI Client and Utilities",
    "/tasks/qq/qq_red_packet_collect/chatApis.py:1-39": "Chat APIs for Atri and GPT-2 Integration",
    "/tasks/qq/qq_red_packet_collect/chatApis.py:112-139": "Retryable Chat API Response Fetcher",
    "/tasks/qq/qq_red_packet_collect/chatApis.py:40-76": "QingKeYun API Chat Processing Function",
    "/tasks/qq/qq_red_packet_collect/chatApis.py:77-111": "Chat APIs for ownthink and XiaoIce",
    "/tasks/qq/qq_red_packet_collect/chat_local.py": "Jiagu-Based Sentiment Analysis and Chat Management",
    "/tasks/qq/qq_red_packet_collect/chat_local.py:1-41": "Stack and Sentiment Analysis Functions",
    "/tasks/qq/qq_red_packet_collect/chat_local.py:111-150": "Chat Local Message Sampler",
    "/tasks/qq/qq_red_packet_collect/chat_local.py:151-176": "Chat Sampling and Sentiment Analysis",
    "/tasks/qq/qq_red_packet_collect/chat_local.py:177-194": "Immutable Replies: Removal Issue",
    "/tasks/qq/qq_red_packet_collect/chat_local.py:44-84": "Chat Stack Processing Functions",
    "/tasks/qq/qq_red_packet_collect/chat_local.py:85-110": "Populate Group Messages List",
    "/tasks/qq/qq_red_packet_collect/commons.py": "Text Manipulation and Randomization Functions",
    "/tasks/qq/qq_red_packet_collect/commons.py:1-38": "Replace Duplicate Characters in Sentences",
    "/tasks/qq/qq_red_packet_collect/commons.py:39-66": "Duplicate Word Removal and Incomplete Sentence Cutting",
    "/tasks/qq/qq_red_packet_collect/commons.py:67-93": "Weighted Random Yield and Text Manipulation Functions",
    "/tasks/qq/qq_red_packet_collect/commons.py:94-110": "Weighted Random Elements Generator",
    "/tasks/qq/qq_red_packet_collect/deprecated_botoy_redpacket_collect_account_2.py": "Arm64 Opqbot Red Packet Collector",
    "/tasks/qq/qq_red_packet_collect/fill_mask_model/init.sh": "Git LFS, Python Script, Chinese-Macbert Model Installation",
    "/tasks/qq/qq_red_packet_collect/fill_mask_model/test.py": "Masked Language Modeling for Red Packet Collection",
    "/tasks/qq/qq_red_packet_collect/fill_mask_model/test.py:1-27": "Masked Language Modeling with Chinese-MacBERT",
    "/tasks/qq/qq_red_packet_collect/fill_mask_model/test.py:28-35": "Mask Token Prediction and Decoding",
    "/tasks/qq/qq_red_packet_collect/fill_mask_model/test_macbert.sh": "MacBERT Model Inference Test",
    "/tasks/qq/qq_red_packet_collect/launch.sh": "Restart QQ Red Packet Session",
    "/tasks/qq/qq_red_packet_collect/paddletts/test.sh": "PaddleSpeech TTS Test Script",
    "/tasks/qq/qq_red_packet_collect/red_packet.yaml": "Bilibili Video Recommendation Tool",
    "/tasks/qq/qq_red_packet_collect/red_packet.yaml:1-20": "Window with Tiled Layout and Script Execution",
    "/tasks/qq/qq_red_packet_collect/red_packet.yaml:21-39": "Multi-Service Chatbot Setup: Red Packet Collection",
    "/tasks/qq/qq_red_packet_collect/red_packet.yaml:40-50": "Shell Commands for Server Testing and Bilibili Recommendations",
    "/tasks/qq/qq_red_packet_collect/test_ad_generator.py": "Bilibili Ad Generator",
    "/tasks/qq/qq_red_packet_collect/test_adtools.sh": "CD and Test Dog-Cat Connection",
    "/tasks/qq/qq_red_packet_collect/test_cat_dog_info_get.py": "Cat and Dog Video Testing",
    "/tasks/qq/qq_red_packet_collect/test_check_dog_cat.py": "Detecting Cat or Dog: Test Code",
    "/tasks/qq/qq_red_packet_collect/test_download_qq_image.sh": "QQ Image Download and Processing with OpenCV",
    "/tasks/qq/qq_red_packet_collect/test_get_all_my_videos.py": "POST Request for Latest Video Data",
    "/tasks/qq/qq_red_packet_collect/test_make_dog_cat_connection.py": "Testing Cat-Dog Ad Connections",
    "/tasks/qq/qq_red_packet_collect/test_neo4j_creds.py": "Test Neo4j Credentials",
    "/tasks/qq/qq_red_packet_collect/test_qrcode_insert_replace.py": "QR Code Insert/Replace Tester",
    "/tasks/qq/qq_red_packet_collect/textfilter/filter_py3_fastapi.py": "Py3 FastAPI Text Filter",
    "/tasks/qq/qq_red_packet_collect/textfilter/filter_py3_fastapi.py:1-48": "Fast Python Keyword Filtering Algorithms",
    "/tasks/qq/qq_red_packet_collect/textfilter/filter_py3_fastapi.py:114-143": "FastAPI Text Filter Algorithm",
    "/tasks/qq/qq_red_packet_collect/textfilter/filter_py3_fastapi.py:144-186": "DFA-Based Text Filter",
    "/tasks/qq/qq_red_packet_collect/textfilter/filter_py3_fastapi.py:187-213": "Pinyin Text Filter API",
    "/tasks/qq/qq_red_packet_collect/textfilter/filter_py3_fastapi.py:214-225": "FastAPI GFW Filter and Moderation",
    "/tasks/qq/qq_red_packet_collect/textfilter/filter_py3_fastapi.py:49-77": "FastAPI Keyword Filter",
    "/tasks/qq/qq_red_packet_collect/textfilter/filter_py3_fastapi.py:78-113": "DFA-Based Keyword Filter",
    "/tasks/qq/qq_red_packet_collect/textfilter/launch.sh": "Launch FastAPI with uvicorn and --reload",
    "/tests/README.md": "Integrated Recommendation System for LLM and Scrapers",
    "/tests/adb_phone_control_termux_network_broadcast_scrcpy_appium_airtest/README.md": "Automate Termux via ADB and Scrcpy",
    "/tests/adb_phone_control_termux_network_broadcast_scrcpy_appium_airtest/README.md:1-30": "Termux-Based Android Phone Control via Network Broadcast",
    "/tests/adb_phone_control_termux_network_broadcast_scrcpy_appium_airtest/README.md:32-68": "Cross-Platform Focused Window Title Retrieval",
    "/tests/adb_phone_control_termux_network_broadcast_scrcpy_appium_airtest/README.md:69-70": "X Server Input Test",
    "/tests/adb_phone_control_termux_network_broadcast_scrcpy_appium_airtest/get_modifier.sh": "Establishing ADB Network Connection",
    "/tests/adb_phone_control_termux_network_broadcast_scrcpy_appium_airtest/get_modifier_with_masscan_scapy.py": "Masscan-Powered Network Device Control",
    "/tests/adb_phone_control_termux_network_broadcast_scrcpy_appium_airtest/get_modifier_with_masscan_scapy.py:1-42": "Adb Phone Control Network Scan with Masscan",
    "/tests/adb_phone_control_termux_network_broadcast_scrcpy_appium_airtest/get_modifier_with_masscan_scapy.py:43-64": "Masscan-Powered ADB Connections",
    "/tests/adb_phone_control_termux_network_broadcast_scrcpy_appium_airtest/pkl_nowriting.py": "Keystroke Logger Python Script",
    "/tests/adb_phone_control_termux_network_broadcast_scrcpy_appium_airtest/pkl_nowriting.py:1-38": "Keylogger Educational Tool",
    "/tests/adb_phone_control_termux_network_broadcast_scrcpy_appium_airtest/pkl_nowriting.py:39-74": "Global Event Monitor and Logger",
    "/tests/adb_phone_control_termux_network_broadcast_scrcpy_appium_airtest/pkl_nowriting.py:75-83": "Clean Termination of Event Loops",
    "/tests/adb_phone_control_termux_network_broadcast_scrcpy_appium_airtest/unlock_phone_on_given_ip.py": "Network Broadcast IP Control",
    "/tests/aiohttp_python_clash_delay_proxy_set_proxy/download_from_multiple_websites_at_once.py": "Concurrent HTTP GET Requests",
    "/tests/aiohttp_python_clash_delay_proxy_set_proxy/test.py": "Delay Proxy Test with Clash",
    "/tests/aiohttp_python_clash_delay_proxy_set_proxy/test.py:1-34": "Clash Proxy Test and Setup for AioHTTP",
    "/tests/aiohttp_python_clash_delay_proxy_set_proxy/test.py:35-40": "Proxy GET Request and Response Display",
    "/tests/anime1_me_video_download/README.md": "Video API Integration for Anime Download",
    "/tests/anime1_me_video_download/api_curl.sh": "Anime1.me Video Download Curl Script",
    "/tests/anime1_me_video_download/api_curl.sh:1-24": "Anime1.me API cURL Request",
    "/tests/anime1_me_video_download/api_curl.sh:25-43": "Anime1.me API Curl Request",
    "/tests/anime1_me_video_download/api_curl.sh:44-44": "Compressed Downloads for Faster, Smarter Storage",
    "/tests/anime1_me_video_download/get_best_edm.sh": "Split EDM Audio Using FFmpeg",
    "/tests/anime1_me_video_download/get_cookie_sample.py": "Efficient Real-Time Anime Video Download with Cookies",
    "/tests/anime1_me_video_download/get_cookie_sample.py:1-28": "API Request Setup and Data Formatting",
    "/tests/anime1_me_video_download/get_cookie_sample.py:29-60": "Anime1.me Video Downloader",
    "/tests/anime1_me_video_download/get_cookie_sample.py:61-72": "Real-Time File Download with Chunked Data and Cookie Support",
    "/tests/anime1_me_video_download/parse_static.py": "Anime Video Downloader: Parse and Extract",
    "/tests/anime1_me_video_download/test_download.sh": "Crossdressing MP4 Download Script",
    "/tests/anime1_me_video_download/test_download.sh:1-6": "Cracking Anime1.me Download Cookies",
    "/tests/anime1_me_video_download/test_download.sh:6-6": "Anime Video Download Parameters",
    "/tests/anime_highlight_cuts/bittorrent_downloader/download_given_file_to_given_name.sh": "Bittorrent Script for Anime Cuts Download",
    "/tests/anime_highlight_cuts/bittorrent_downloader/dynamic_import.mjs": "Dynamic Import and Modules Integration",
    "/tests/anime_highlight_cuts/bittorrent_downloader/kill_aria2c.sh": "Kill Aria2c for Specific Anime Ep",
    "/tests/anime_highlight_cuts/bittorrent_downloader/make_node_symlink.sh": "Create Node Symlink for Bittorrent Downloader",
    "/tests/anime_highlight_cuts/bittorrent_downloader/name_fuzzy.py": "Bangumi Name Initializer",
    "/tests/anime_highlight_cuts/bittorrent_downloader/name_resolution_parsing_chapter_recognition.py": "Anime Episode Index Identifier",
    "/tests/anime_highlight_cuts/bittorrent_downloader/name_resolution_parsing_chapter_recognition.py:1-46": "Anime Subtitle Extractor",
    "/tests/anime_highlight_cuts/bittorrent_downloader/name_resolution_parsing_chapter_recognition.py:47-71": "JSON Filename Processing and Chapter Recognition",
    "/tests/anime_highlight_cuts/bittorrent_downloader/name_resolution_parsing_chapter_recognition.py:72-73": "Episode Index Checker",
    "/tests/anime_highlight_cuts/bittorrent_downloader/nyaa_api_connector.py": "Nyaa Anime Seeder Scraper",
    "/tests/anime_highlight_cuts/bittorrent_downloader/nyaa_api_connector.py:1-48": "Nyaa API Connector: Python Torrent Scraper",
    "/tests/anime_highlight_cuts/bittorrent_downloader/nyaa_api_connector.py:50-77": "Nyaa API Connector: Banner Parser",
    "/tests/anime_highlight_cuts/bittorrent_downloader/nyaa_torrent_file_list.py": "Nyaa Torrent File List Fetcher",
    "/tests/anime_highlight_cuts/bittorrent_downloader/subtitle_extractor.py": "Multi-Tool Subtitle Extraction",
    "/tests/anime_highlight_cuts/bittorrent_downloader/torrent_analyzer.py": "Torrent Analyzer: Parser, Formats, JSON",
    "/tests/anime_highlight_cuts/bittorrent_downloader/torrent_analyzer.py:1-41": "Torrent Analyzer: Parsing and Downloading Files",
    "/tests/anime_highlight_cuts/bittorrent_downloader/torrent_analyzer.py:42-49": "Torrent File Metadata Extractor",
    "/tests/anime_highlight_cuts/bittorrent_downloader/webtorrent_streaming_test_cut_partial_download.mjs": "Webtorrent Streaming Test Cut Partial Download",
    "/tests/anime_highlight_cuts/bittorrent_downloader/webtorrent_streaming_test_cut_partial_download.mjs:131-158": "FFmpeg Streaming with Webtorrent",
    "/tests/anime_highlight_cuts/bittorrent_downloader/webtorrent_streaming_test_cut_partial_download.mjs:158-176": "Seek, Download, and Stream Video Segment",
    "/tests/anime_highlight_cuts/bittorrent_downloader/webtorrent_streaming_test_cut_partial_download.mjs:177-188": "Torrent Download Completion: FFmpeg Close & Logging",
    "/tests/anime_highlight_cuts/bittorrent_downloader/webtorrent_streaming_test_cut_partial_download.mjs:19-41": "Webtorrent Streaming Test Issues",
    "/tests/anime_highlight_cuts/bittorrent_downloader/webtorrent_streaming_test_cut_partial_download.mjs:2-18": "WebTorrent Streaming Test Cut Download",
    "/tests/anime_highlight_cuts/bittorrent_downloader/webtorrent_streaming_test_cut_partial_download.mjs:42-72": "WebTorrent Streaming Test Cut Partial Download",
    "/tests/anime_highlight_cuts/bittorrent_downloader/webtorrent_streaming_test_cut_partial_download.mjs:73-95": "Webtorrent Streaming Test Cut Partial Download",
    "/tests/anime_highlight_cuts/bittorrent_downloader/webtorrent_streaming_test_cut_partial_download.mjs:96-130": "Unused Functions in Partial Download Test",
    "/tests/anime_highlight_cuts/theme_collector/anidb_anime_parse.py": "AniDB Anime Parser",
    "/tests/anime_highlight_cuts/theme_collector/anidb_anime_parse.py:1-43": "AniDB Anime Data Scraping",
    "/tests/anime_highlight_cuts/theme_collector/anidb_anime_parse.py:45-67": "AniDB Anime Parser with BeautifulSoup",
    "/tests/anime_highlight_cuts/theme_collector/anidb_search_parse.py": "AniDB Anime Search Parser",
    "/tests/anime_highlight_cuts/theme_collector/anidb_search_parse.py:1-38": "AniDB Anime Search and Parse",
    "/tests/anime_highlight_cuts/theme_collector/anidb_search_parse.py:39-57": "AniDB Search and Parse",
    "/tests/anime_highlight_cuts/theme_collector/anilist_to_anidb.py": "Anilist to Anidb Anime Matching",
    "/tests/anime_highlight_cuts/theme_collector/anime_compilation_video_metadata.py": "Bilibili Video Metadata Scraper",
    "/tests/anime_highlight_cuts/theme_collector/anime_compilation_video_metadata.py:1-31": "Bilibili Video Metadata Scraper",
    "/tests/anime_highlight_cuts/theme_collector/anime_compilation_video_metadata.py:136-160": "Anime Video Metadata Collector",
    "/tests/anime_highlight_cuts/theme_collector/anime_compilation_video_metadata.py:161-163": "Missing Video Tag: Dimension Check and Error Handling",
    "/tests/anime_highlight_cuts/theme_collector/anime_compilation_video_metadata.py:32-66": "Bilibili Video Metadata Collection and Download",
    "/tests/anime_highlight_cuts/theme_collector/anime_compilation_video_metadata.py:68-97": "Bilibili Video Metadata Retriever",
    "/tests/anime_highlight_cuts/theme_collector/anime_compilation_video_metadata.py:98-135": "Anime Video Metadata Parser",
    "/tests/anime_highlight_cuts/theme_collector/anime_video_downloader.py": "Bilibili Downloader with Error Handling",
    "/tests/anime_highlight_cuts/theme_collector/anime_video_downloader.py:1-26": "Anime Video Downloader: Yt-dlp Integration",
    "/tests/anime_highlight_cuts/theme_collector/anime_video_downloader.py:27-59": "Anime Video Downloader Script",
    "/tests/anime_highlight_cuts/theme_collector/anime_video_downloader.py:60-65": "Find Target File with Prefix",
    "/tests/anime_highlight_cuts/theme_collector/anime_video_frame_cropper_labeller.py": "Anime Frame Cropper and Labeler",
    "/tests/anime_highlight_cuts/theme_collector/anime_video_frame_cropper_labeller.py:1-48": "Video Format Checker and Keyboard Controller",
    "/tests/anime_highlight_cuts/theme_collector/anime_video_frame_cropper_labeller.py:50-77": "Video ROI Extractor and Labeller",
    "/tests/anime_highlight_cuts/theme_collector/anime_video_frame_cropper_labeller.py:78-89": "Anime Frame Cropper and Labeler",
    "/tests/anime_highlight_cuts/theme_collector/bilibili_anime_compilation_finder.py": "Bilibili Anime Compilation Tag Dictionary",
    "/tests/anime_highlight_cuts/theme_collector/bv2av.py": "BV/AV ID Converter",
    "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset.py": "Create COCO-PIP Dataset: Anime Highlight Cuts",
    "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset.py:1-34": "Create COCO-PIP Dataset for Anime Highlights",
    "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset.py:120-139": "Striped Background Generator",
    "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset.py:140-164": "Theme Collector: Coco-Pip Dataset",
    "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset.py:165-189": "OpenCV Text Overlay Generator",
    "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset.py:190-221": "Creating Image Canvas for Specific Formats",
    "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset.py:222-254": "Resizing, Boxing, and Drawing Rectangles",
    "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset.py:255-281": "Resize and Color Rectangle Images",
    "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset.py:282-308": "Creating Rounded Rectangles and Blending Images",
    "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset.py:309-329": "Image Manipulation and Labeling Script",
    "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset.py:36-68": "Randomizer Code Bug: Missing Random Selections",
    "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset.py:71-95": "Gradient Image Generator",
    "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset.py:96-118": "Main Background Color Detector",
    "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset_standalone.py": "Create COCO PIP Dataset Standalone",
    "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset_standalone.py:1-37": "Create COCO PIP Dataset Standalone",
    "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset_standalone.py:105-130": "COCO PIP Dataset Generation",
    "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset_standalone.py:131-156": "Furthest Color Background Generator",
    "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset_standalone.py:157-176": "Striped Background Generator",
    "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset_standalone.py:177-201": "Generate Background Themes",
    "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset_standalone.py:202-232": "Random Text Overlays with OpenCV",
    "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset_standalone.py:234-263": "Mask Image Creation and Resizing",
    "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset_standalone.py:264-296": "Ellipse Mask Creation and Compositing",
    "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset_standalone.py:297-321": "Resizing and Overlaying Images with Rectangle or Rounded Rectangle",
    "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset_standalone.py:322-349": "Overlay Effect with Masking and Labels",
    "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset_standalone.py:350-374": "Create COCO-style Pip Dataset",
    "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset_standalone.py:38-73": "Initialize COCO PIP Dataset Variables",
    "/tests/anime_highlight_cuts/theme_collector/create_coco_pip_dataset_standalone.py:74-104": "Random Color COCO Dataset Generator",
    "/tests/anime_highlight_cuts/theme_collector/create_dataset.py": "Create Dataset from Anime Frames",
    "/tests/anime_highlight_cuts/theme_collector/create_dataset.py:1-39": "Creates Dataset from Train/Test Directories",
    "/tests/anime_highlight_cuts/theme_collector/create_dataset.py:111-152": "Video Frame Labeler",
    "/tests/anime_highlight_cuts/theme_collector/create_dataset.py:153-166": "Create Dataset from Anime Clips",
    "/tests/anime_highlight_cuts/theme_collector/create_dataset.py:40-73": "Create YAML Dataset from CSV",
    "/tests/anime_highlight_cuts/theme_collector/create_dataset.py:74-110": "Frame-by-Frame Dataset Creation",
    "/tests/anime_highlight_cuts/theme_collector/create_rounded_rectangle.py": "Create Rounded Rectangle Image",
    "/tests/anime_highlight_cuts/theme_collector/keyboard_listener.py": "Keyboard Event Listener",
    "/tests/anime_highlight_cuts/theme_collector/make_picture_in_picture_challange.py": "Create PIP Anime Highlights",
    "/tests/anime_highlight_cuts/theme_collector/pack_source_dataset.sh": "Pack Source Dataset",
    "/tests/anime_highlight_cuts/theme_collector/screenshot_saucenao.py": "Anime Image Identifier and Data Extractor",
    "/tests/anime_highlight_cuts/theme_collector/screenshot_saucenao.py:1-25": "Screenshot SauceNao Identifier",
    "/tests/anime_highlight_cuts/theme_collector/screenshot_saucenao.py:26-37": "Anime Cut Data Collector",
    "/tests/anime_highlight_cuts/theme_collector/screenshot_tracemoe.py": "Trace.moe API Anime Character Recognition",
    "/tests/anime_highlight_cuts/theme_collector/strip_optimizer_from_trained_best_model.py": "Stripping Optimizers from Trained Model",
    "/tests/anime_highlight_cuts/theme_collector/test_video_overlay.sh": "Video Overlay Script",
    "/tests/anime_highlight_cuts/theme_collector/view_boundingbox.py": "Bounding Box Rectangle Drawal in OpenCV",
    "/tests/anime_highlight_cuts/theme_collector/yolov8_test.py": "YOLO-based Anime Frame Detection",
    "/tests/anime_highlight_cuts/theme_collector/yolov8_test.py:1-43": "YOLO Image Processing Pipeline",
    "/tests/anime_highlight_cuts/theme_collector/yolov8_test.py:44-69": "Frame Filtering Algorithm",
    "/tests/anime_highlight_cuts/theme_collector/yolov8_test.py:71-89": "PIP Frame Detection and Display",
    "/tests/anime_highlight_cuts/theme_collector/yolov8_train_save_test.py": "YOLO Object Detection Training and Export",
    "/tests/apple_prores_encoding_play/test.sh": "Efficient Prores Encoding with FFmpeg",
    "/tests/audio_volume_meter/test_volume_meter.py": "KMeans-Based Audio Segment Labeling",
    "/tests/audio_volume_meter/test_volume_meter.py:1-37": "Padding Moving Average Calculation",
    "/tests/audio_volume_meter/test_volume_meter.py:124-157": "Vocal Segment Clustering with KMeans",
    "/tests/audio_volume_meter/test_volume_meter.py:38-67": "Standard Deviation, Max, Abs Avg for Audio",
    "/tests/audio_volume_meter/test_volume_meter.py:68-92": "Moving Average-Based Vocal Slicing Algorithm",
    "/tests/audio_volume_meter/test_volume_meter.py:93-123": "Vocal Segment Classification and Timing",
    "/tests/basic_pitch_multi_midi_conversion/test.sh": "Multi-MIDI Conversion via Basic Pitch",
    "/tests/bezier_paddlehub_dogcat_detector_serving/client.py": "PaddleHub Dog/Cat Image Detection",
    "/tests/bezier_paddlehub_dogcat_detector_serving/server.py": "Bezier PaddleHub DogCat Detector Server Import",
    "/tests/bilibili_login_get_credential_view_data/dump_favourite_list.py": "Bilibili API Credentials Processor",
    "/tests/bilibili_login_get_credential_view_data/dump_favourite_list.py:1-34": "Bilibili API Credential Loader",
    "/tests/bilibili_login_get_credential_view_data/dump_favourite_list.py:35-66": "Bilibili Favorite List Parser",
    "/tests/bilibili_login_get_credential_view_data/dump_favourite_list.py:67-78": "Upsert Bilibili Favorite List Data",
    "/tests/bilibili_login_get_credential_view_data/dump_view_history.py": "Bilibili Video History Processor",
    "/tests/bilibili_login_get_credential_view_data/dump_view_history.py:1-36": "Bilibili Credential Update and History Tracker",
    "/tests/bilibili_login_get_credential_view_data/dump_view_history.py:37-59": "Video History Fetch and Store Script",
    "/tests/bilibili_login_get_credential_view_data/test.py": "Bilibil Login: Password or SMS",
    "/tests/bilibili_login_get_credential_view_data/test.py:1-46": "SMS/Password Login with Geetest Validation",
    "/tests/bilibili_login_get_credential_view_data/test.py:47-82": "Atomic SMS Login and Database Update"
}