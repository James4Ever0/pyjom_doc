{
    "4000": {
        "file_id": 492,
        "content": "// //         'mtopsdk.mtop.protocol.converter.impl.AbstractNetworkConverter'\n// //     );\n// //     AbstractNetworkConverter.buildBaseUrl.overload(\n// //         'mtopsdk.framework.domain.MtopContext',\n// //         'java.lang.String',\n// //         'java.lang.String'\n// //     ).implementation = function() {\n// //         console.log(\"buildBaseUrl \"+arguments[1]+' '+arguments[2])\n// //         var ret = this.buildBaseUrl.apply(this, arguments);\n// //         //url\n// //         console.log(\"buildBaseUrl \"+ret)\n// //         return ret;\n// //     };\n// //     // 禁用spdy协议\n// //     var SwitchConfig = Java.use('mtopsdk.mtop.global.SwitchConfig');\n// //     SwitchConfig.setGlobalSpdySslSwitchOpen.overload().implementation = function() {\n// //         var ret = this.isGlobalSpdySwitchOpen.apply(this, arguments);\n// //         console.log('isGlobalSpdySwitchOpenl ' + ret)\n// //         return false;\n// //     };\n// // });",
        "type": "code",
        "location": "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/frida_globalswitch_apk.js:88-112"
    },
    "4001": {
        "file_id": 492,
        "content": "This code is using Frida to instrument the 'mtopsdk.mtop.global.SwitchConfig' class in an APK. It overrides the 'setGlobalSpdySslSwitchOpen' method to always return false, disabling SPDY protocol. Additionally, it modifies the 'AbstractNetworkConverter.buildBaseUrl' method to log the arguments and base URL.",
        "type": "comment"
    },
    "4002": {
        "file_id": 493,
        "content": "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/disable_ssl.js",
        "type": "filepath"
    },
    "4003": {
        "file_id": 493,
        "content": "Bypasses Universal Android SSL Pinning using frida, replacing checkTrustedRecursive implementation to enable SSL communication.",
        "type": "summary"
    },
    "4004": {
        "file_id": 493,
        "content": "// script name: sowdust/universal-android-ssl-pinning-bypass-2\n/* \n   Universal Android SSL Pinning Bypass\n   by Mattia Vinci and Maurizio Agazzini \n   $ frida -U -f org.package.name -l universal-ssl-check-bypass.js --no-pause\n    https://techblog.mediaservice.net/2018/11/universal-android-ssl-check-bypass-2/\n*/\nJava.perform(function() {\n    var array_list = Java.use(\"java.util.ArrayList\");\n    var ApiClient = Java.use('com.android.org.conscrypt.TrustManagerImpl');\n    ApiClient.checkTrustedRecursive.implementation = function(a1, a2, a3, a4, a5, a6) {\n        // console.log('Bypassing SSL Pinning');\n        var k = array_list.$new();\n        return k;\n    }\n}, 0);",
        "type": "code",
        "location": "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/disable_ssl.js:1-22"
    },
    "4005": {
        "file_id": 493,
        "content": "Bypasses Universal Android SSL Pinning using frida, replacing checkTrustedRecursive implementation to enable SSL communication.",
        "type": "comment"
    },
    "4006": {
        "file_id": 494,
        "content": "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/decodeTaobaoQuery.py",
        "type": "filepath"
    },
    "4007": {
        "file_id": 494,
        "content": "The code decodes a Taobao query string, parses the URL-encoded data into JSON format with various parameters, and prints it using pprint for readability.",
        "type": "summary"
    },
    "4008": {
        "file_id": 494,
        "content": "import urllib.parse\nimport json\na = \"\"\"%7B%22LBS%22%3A%22%7B%5C%22TB%5C%22%3A%5C%22%7B%5C%5C%5C%22stores%5C%5C%5C%22%3A%5B%7B%5C%5C%5C%22code%5C%5C%5C%22%3A%5C%5C%5C%22236736190%5C%5C%5C%22%2C%5C%5C%5C%22bizType%5C%5C%5C%22%3A%5C%5C%5C%222%5C%5C%5C%22%2C%5C%5C%5C%22type%5C%5C%5C%22%3A%5C%5C%5C%2224%5C%5C%5C%22%7D%5D%7D%5C%22%2C%5C%22TMALL_MARKET_B2C%5C%22%3A%5C%22%7B%5C%5C%5C%22stores%5C%5C%5C%22%3A%5B%7B%5C%5C%5C%22code%5C%5C%5C%22%3A%5C%5C%5C%22107%5C%5C%5C%22%2C%5C%5C%5C%22bizType%5C%5C%5C%22%3A%5C%5C%5C%22REGION_TYPE_REGION%5C%5C%5C%22%2C%5C%5C%5C%22addrId%5C%5C%5C%22%3A%5C%5C%5C%229056332332%5C%5C%5C%22%2C%5C%5C%5C%22type%5C%5C%5C%22%3A%5C%5C%5C%22CHOOSE_ADDR%5C%5C%5C%22%7D%5D%7D%5C%22%2C%5C%22TMALL_MARKET_O2O%5C%22%3A%5C%22%7B%5C%5C%5C%22stores%5C%5C%5C%22%3A%5B%7B%5C%5C%5C%22code%5C%5C%5C%22%3A%5C%5C%5C%22235565019%5C%5C%5C%22%2C%5C%5C%5C%22bizType%5C%5C%5C%22%3A%5C%5C%5C%22DELIVERY_TIME_HALF_DAY%5C%5C%5C%22%2C%5C%5C%5C%22addrId%5C%5C%5C%22%3A%5C%5C%5C%229056332332%5C%5C%5C%22%2C%",
        "type": "code",
        "location": "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/decodeTaobaoQuery.py:1-3"
    },
    "4009": {
        "file_id": 494,
        "content": "This code is decoding a Taobao query string containing information about various stores and their types, likely used for filtering or search purposes.",
        "type": "comment"
    },
    "4010": {
        "file_id": 494,
        "content": "5C%5C%5C%22type%5C%5C%5C%22%3A%5C%5C%5C%22CHOOSE_ADDR%5C%5C%5C%22%7D%5D%7D%5C%22%7D%22%2C%22URL_REFERER_ORIGIN%22%3A%22%2F%2Fs.m.taobao.com%2Fh5entry%3Fg_channelSrp%3Dvideointeract%26g_tab%3Dtbexperience%26g_pfilter%3Ddaren%26g_closeModues%3Dtab%26closeExpSubTab%3Dtrue%26g_csearchdoor_spm%3Da310p.14955560%26spm%3Da310p.13800399%26launchMode%3Dandroid_new_task%26g_closeExpSubTab%3Dtrue%22%2C%22ad_type%22%3A%221.0%22%2C%22apptimestamp%22%3A%221665607023%22%2C%22areaCode%22%3A%22CN%22%2C%22brand%22%3A%22Xiaomi%22%2C%22canP4pVideoPlay%22%3A%22true%22%2C%22channelSrp%22%3A%22videointeract%22%2C%22cityCode%22%3A%22320100%22%2C%22closeExpSubTab%22%3A%22true%22%2C%22closeModues%22%3A%22tab%22%2C%22countryNum%22%3A%22156%22%2C%22csearchdoor_spm%22%3A%22a310p.14955560%22%2C%22device%22%3A%22Mi+MIX+2%22%2C%22editionCode%22%3A%22CN%22%2C%22from%22%3A%22input%22%2C%22globalLbs%22%3A%22%7B%5C%22biz_common%5C%22%3A%7B%5C%22recommendedAddress%5C%22%3A%7B%5C%22addressId%5C%22%3A%5C%229056332332%5C%22%2",
        "type": "code",
        "location": "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/decodeTaobaoQuery.py:3-3"
    },
    "4011": {
        "file_id": 494,
        "content": "This code contains a complex JSON object with various parameters like type, URL_REFERER_ORIGIN, ad_type, areaCode, brand, canP4pVideoPlay, channelSrp, cityCode, closeExpSubTab, closeModues, countryNum, csearchdoor\\_spm, device, editionCode, from, and globalLbs. These parameters are used to describe the source of the request, user's location, device information, and other relevant data for an API call.",
        "type": "comment"
    },
    "4012": {
        "file_id": 494,
        "content": "C%5C%22area%5C%22%3A%5C%22%E6%A0%96%E9%9C%9E%E5%8C%BA%5C%22%2C%5C%22areaDivisionCode%5C%22%3A%5C%22320113%5C%22%2C%5C%22city%5C%22%3A%5C%22%E5%8D%97%E4%BA%AC%E5%B8%82%5C%22%2C%5C%22cityDivisionCode%5C%22%3A%5C%22320100%5C%22%2C%5C%22detailText%5C%22%3A%5C%22%E6%96%87%E8%8B%91%E8%B7%AF9%E5%8F%B7%E5%8D%97%E4%BA%AC%E9%82%AE%E7%94%B5%E5%A4%A7%E5%AD%A6%E5%9C%86%E9%80%9A%E5%BF%AB%E9%80%92%5C%22%2C%5C%22lat%5C%22%3A%5C%2232.11078%5C%22%2C%5C%22lng%5C%22%3A%5C%22118.932821%5C%22%2C%5C%22province%5C%22%3A%5C%22%E6%B1%9F%E8%8B%8F%E7%9C%81%5C%22%2C%5C%22provinceDivisionCode%5C%22%3A%5C%22320000%5C%22%2C%5C%22town%5C%22%3A%5C%22%E4%BB%99%E6%9E%97%E8%A1%97%E9%81%93%5C%22%2C%5C%22townDivisionCode%5C%22%3A%5C%22320113007%5C%22%2C%5C%22type%5C%22%3A%5C%22deliver%5C%22%7D%7D%2C%5C%22eleme%5C%22%3A%7B%5C%22storeInfos%5C%22%3A%5B%7B%5C%22storeId%5C%22%3A%5C%22999%5C%22%7D%5D%7D%2C%5C%22meeting_place%5C%22%3A%7B%7D%2C%5C%22on_time_promise%5C%22%3A%7B%5C%22storeInfos%5C%22%3A%5B%7B%5C%22storeId%5C%22%3A%5C",
        "type": "code",
        "location": "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/decodeTaobaoQuery.py:3-3"
    },
    "4013": {
        "file_id": 494,
        "content": "This code block represents a JSON object containing information about the location, delivery details, and stores related to an order. The location data includes area, city, province, town, and latitude/longitude coordinates. There are also delivery-related details such as type (deliver), and store information with store IDs.",
        "type": "comment"
    },
    "4014": {
        "file_id": 494,
        "content": "%22353585008%5C%22%7D%2C%7B%5C%22storeId%5C%22%3A%5C%22353612036%5C%22%7D%2C%7B%5C%22storeId%5C%22%3A%5C%22525826023%5C%22%7D%5D%7D%2C%5C%22same_city_buy%5C%22%3A%7B%7D%2C%5C%22tmall_market_o2o%5C%22%3A%7B%5C%22storeInfos%5C%22%3A%5B%7B%5C%22storeId%5C%22%3A%5C%22235565019%5C%22%7D%5D%7D%2C%5C%22txd%5C%22%3A%7B%5C%22storeInfos%5C%22%3A%5B%7B%5C%22storeId%5C%22%3A%5C%22707447478%5C%22%7D%5D%7D%7D%22%2C%22gpsEnabled%22%3A%22false%22%2C%\"\"\"\nb =urllib.parse.unquote(a)\n# c=json.loads(b)\nimport pprint\n# pprint.pprint(c)\npprint.pprint(b)",
        "type": "code",
        "location": "/tests/taobao_guangguang_download_哇哦视频_淘宝逛逛_tiktok_douyin/decodeTaobaoQuery.py:3-8"
    },
    "4015": {
        "file_id": 494,
        "content": "This code is parsing a URL-encoded string and loading its content into a JSON format. It then prints the parsed JSON data using the pprint module for better readability.",
        "type": "comment"
    },
    "4016": {
        "file_id": 495,
        "content": "/tests/qq_share_autojs/unlock_and_run_autox.sh",
        "type": "filepath"
    },
    "4017": {
        "file_id": 495,
        "content": "The script checks if the device is locked, runs Auto.js script, monitors the flag file for changes and loops until it completes or encounters an error.",
        "type": "summary"
    },
    "4018": {
        "file_id": 495,
        "content": "bash adb_check_lock.sh \nfunction autox_run {\n  adb -s 192.168.10.3:5555 shell touch /storage/emulated/0/flag\n  bash adb_autox_launch.sh\n  while true\n  do\n    adb -s 192.168.10.3:5555 shell cat /storage/emulated/0/flag\n    if [[ $? -eq 1 ]]\n    then\n      echo \"script complete\"\n      exit\n    else\n      echo \"script running\"\n      sleep 1\n    fi\n  done\n}\nwhile true\ndo\n  autox_run\n  # you need to ensure the script run as expected.\ndone",
        "type": "code",
        "location": "/tests/qq_share_autojs/unlock_and_run_autox.sh:1-24"
    },
    "4019": {
        "file_id": 495,
        "content": "The script checks if the device is locked, runs Auto.js script, monitors the flag file for changes and loops until it completes or encounters an error.",
        "type": "comment"
    },
    "4020": {
        "file_id": 496,
        "content": "/tests/qq_share_autojs/test_qq_share.sh",
        "type": "filepath"
    },
    "4021": {
        "file_id": 496,
        "content": "This code launches the JumpActivity in the Tencent MobileQQ app, passing a complex URI with various data such as file type, file data, title, description, and URL to share. The shared content is related to Bilibili video recommendation server. It specifies the app name and package name (tv.danmaku.bili).",
        "type": "summary"
    },
    "4022": {
        "file_id": 496,
        "content": "am start -n com.tencent.mobileqq/com.tencent.mobileqq.activity.JumpActivity -a android.intent.action.VIEW -d 'mqqapi://share/to_fri?src_type=app&version=1&file_type=news&file_data=L3N0b3JhZ2UvZW11bGF0ZWQvMC9QaWN0dXJlcy9zaGFyZS8xMjcyMDY0MzU0&file_uri=Y29udGVudDovL3R2LmRhbm1ha3UuYmlsaS5maWxlcHJvdmlkZXIvb3BlbnNka19leHRlcm5hbC9zaGFyZTJxcV90ZW1wNDIwOTU0OTNhYjhlZGRhZmYzMWQ1Y2ZjYWYzZjE3MDQuanBn&title=5ZOU5ZOp5ZOU5ZOp&description=5aSn5Z6L5pS/6K6654mH772c5paw5pe25Luj562U5Y23&share_id=100951776&url=aHR0cHM6Ly9iMjMudHYvdGRKZGd6WT9zaGFyZV9tZWRpdW09YW5kcm9pZCZzaGFyZV9zb3VyY2U9cXEmYmJpZD1YWTFCQjcyMUIxRjk3MzQ4REJERTQyOTdGRTFCNEFCRTI2QkFBJnRzPTE2NjcyNzU0ODI4MTY=&app_name=5ZOU5ZOp5ZOU5ZOp&req_type=Nw==&mini_program_appid=MTEwOTkzNzU1Nw==&mini_program_path=cGFnZXMvdmlkZW8vdmlkZW8/YnZpZD1CVjFuZTQxMUw3aHkmc2hhcmVfc291cmNlPXFxX3VnYyZ1bmlxdWVfaz10ZEpkZ3pZ&mini_program_type=Mw==&cflag=MA==&third_sd=dHJ1ZQ==' -e pkg_name tv.danmaku.bili",
        "type": "code",
        "location": "/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/test_launch_share.sh:1-1"
    },
    "4023": {
        "file_id": 496,
        "content": "This code launches the JumpActivity in the Tencent MobileQQ app, passing a complex URI with various data such as file type, file data, title, description, and URL to share. The shared content is related to Bilibili video recommendation server. It specifies the app name and package name (tv.danmaku.bili).",
        "type": "comment"
    },
    "4024": {
        "file_id": 497,
        "content": "/tests/qq_share_autojs/parse_qq_url.py",
        "type": "filepath"
    },
    "4025": {
        "file_id": 497,
        "content": "The code parses a QQ share URL, handles base64 encoding and decoding, stores values in a new dictionary for sharing, encodes URL parameters, prints them, opens the link using os.system().",
        "type": "summary"
    },
    "4026": {
        "file_id": 497,
        "content": "url = \"mqqapi://share/to_fri?src_type=app&version=1&file_type=news&file_data=L3N0b3JhZ2UvZW11bGF0ZWQvMC9QaWN0dXJlcy9zaGFyZS8xMjcyMDY0MzU0&file_uri=Y29udGVudDovL3R2LmRhbm1ha3UuYmlsaS5maWxlcHJvdmlkZXIvb3BlbnNka19leHRlcm5hbC9zaGFyZTJxcV90ZW1wNDIwOTU0OTNhYjhlZGRhZmYzMWQ1Y2ZjYWYzZjE3MDQuanBn&title=5ZOU5ZOp5ZOU5ZOp&description=5aSn5Z6L5pS/6K6654mH772c5paw5pe25Luj562U5Y23&share_id=100951776&url=aHR0cHM6Ly9iMjMudHYvdGRKZGd6WT9zaGFyZV9tZWRpdW09YW5kcm9pZCZzaGFyZV9zb3VyY2U9cXEmYmJpZD1YWTFCQjcyMUIxRjk3MzQ4REJERTQyOTdGRTFCNEFCRTI2QkFBJnRzPTE2NjcyNzU0ODI4MTY=&app_name=5ZOU5ZOp5ZOU5ZOp&req_type=Nw==&mini_program_appid=MTEwOTkzNzU1Nw==&mini_program_path=cGFnZXMvdmlkZW8vdmlkZW8/YnZpZD1CVjFuZTQxMUw3aHkmc2hhcmVfc291cmNlPXFxX3VnYyZ1bmlxdWVfaz10ZEpkZ3pZ&mini_program_type=Mw==&cflag=MA==&third_sd=dHJ1ZQ==\"\nfrom urllib.parse import urlparse, parse_qs\nparse_result=urlparse(url)\n#print(parse_result)\n#breakpoint()\n#\n#params=['count', 'encode', 'fragment', 'geturl', 'hostname', 'index', 'netloc', 'params', 'password', 'path', 'port', 'query', 'scheme', 'username']",
        "type": "code",
        "location": "/tests/qq_share_autojs/parse_qq_url.py:1-9"
    },
    "4027": {
        "file_id": 497,
        "content": "This code is parsing a URL using urllib.parse, extracting its components and possibly preparing for further processing. The URL appears to be related to QQ share and contains various parameters including app name, file data, description, etc.",
        "type": "comment"
    },
    "4028": {
        "file_id": 497,
        "content": "#for k in params:\n#    print(\"key:\",k,\"value:\",eval(\"parse_result.{}\".format(k)))\n#[scheme]://[netloc/hostname]/[path]?[query]\ndict_result=parse_qs(parse_result.query)\nnon_b64vals=[\"share_id\",\"src_type\",\"version\",\"file_type\"]\nimport base64\ndef dec_b64(v):\n    if type(v) == str:\n        v = v.encode()\n    v=base64.b64decode(v)\n    v=v.decode()\n    return v\ndef enc_b64(v):\n    if type(v) == str:\n        v = v.encode()\n    v=base64.b64encode(v)\n    v=v.decode()\n    return v\nnew_q={}\nmypic=\"/storage/emulated/0/Pictures/share/cat.gif\"\nmyuri='file://{}'.format(mypic)\nshortlink=\"uHML5mi\"\nbvid=\"BV1zd4y117WF\"\nfor k,v in dict_result.items():\n    v=v[0]\n    if k == \"file_data\":\n        v=enc_b64(mypic)\n    elif k == \"file_uri\":\n        v=enc_b64(myuri)\n    elif k == \"share_id\":\n        v=100951776\n    elif k == \"url\":\n        v=\"https://b23.tv/\"+shortlink\n        v=enc_b64(v)\n    elif k == \"mini_program_path\":\n        v=enc_b64(\"pages/video/video?bvid=\"+bvid)\n    elif k == \"description\":\n        v=enc_b64(\"喵喵喵\")\n    new_q.update({k:v})",
        "type": "code",
        "location": "/tests/qq_share_autojs/parse_qq_url.py:10-55"
    },
    "4029": {
        "file_id": 497,
        "content": "The code is parsing a QQ share URL, decoding and encoding specific values using base64, and storing them in a new dictionary. It also includes hardcoded values such as file path, shortlink, and bvid. The purpose seems to be related to sharing files or links within the QQ platform.",
        "type": "comment"
    },
    "4030": {
        "file_id": 497,
        "content": "    #for printing purpose\n    if k not in non_b64vals:\n        v=dec_b64(v)\n    print(k,\":\",v)\nfrom urllib.parse import urlencode\nnew_qs=urlencode(new_q)\nprint()\ntemplate=\"am start -n com.tencent.mobileqq/com.tencent.mobileqq.activity.JumpActivity -a android.intent.action.VIEW -d 'mqqapi://share/to_fri?{}' -e pkg_name tv.danmaku.bili\"\ncmd=template.format(new_qs)\nprint(cmd)\nimport os\nos.system(cmd)",
        "type": "code",
        "location": "/tests/qq_share_autojs/parse_qq_url.py:56-67"
    },
    "4031": {
        "file_id": 497,
        "content": "The code encodes URL parameters, prints them, and then executes a command to open a QQ share link in the mobile app. It converts base64 values if needed for printing, formats the command with URL parameters, and uses os.system() to execute the command.",
        "type": "comment"
    },
    "4032": {
        "file_id": 498,
        "content": "/tests/qq_share_autojs/launch_autojs.sh",
        "type": "filepath"
    },
    "4033": {
        "file_id": 498,
        "content": "This code uses the am start command to launch the ShortcutActivity in AutoJS, passing the path of a JavaScript file (\"/storage/emulated/0/脚本/show_toast.js\") as an argument. This could be used for executing a specific AutoJS script on the device.",
        "type": "summary"
    },
    "4034": {
        "file_id": 498,
        "content": "am start -n org.autojs.autoxjs.v6/org.autojs.autojs.external.shortcut.ShortcutActivity -a android.intent.action.MAIN -e path \"/storage/emulated/0/脚本/show_toast.js\"\n#am start -n org.autojs.autoxjs.v6/org.autojs.autojs.external.shortcut.ShortcutActivity -a android.intent.action.MAIN -e path \"/storage/emulated/0/脚本/qq_share_auto.js\"",
        "type": "code",
        "location": "/tests/qq_share_autojs/launch_autojs.sh:1-2"
    },
    "4035": {
        "file_id": 498,
        "content": "This code uses the am start command to launch the ShortcutActivity in AutoJS, passing the path of a JavaScript file (\"/storage/emulated/0/脚本/show_toast.js\") as an argument. This could be used for executing a specific AutoJS script on the device.",
        "type": "comment"
    },
    "4036": {
        "file_id": 499,
        "content": "/tests/qq_share_autojs/appium_unlock_phone.py",
        "type": "filepath"
    },
    "4037": {
        "file_id": 499,
        "content": "The code sets up an Appium test for unlocking an Android phone without requiring the device password. It initializes capabilities, connects to the appium server, checks if the screen is locked, and uses a bash script to unlock it.",
        "type": "summary"
    },
    "4038": {
        "file_id": 499,
        "content": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\nfrom appium import webdriver\nfrom appium.webdriver.common.appiumby import AppiumBy\ncapabilities = dict(\n    platformName='Android',\n    automationName='uiautomator2',\n    deviceName='Android',\n    appPackage='com.android.settings',\n    appActivity='.Settings',\n    language='en',\n    locale='US',\n    noSign=True,\n    skipUnlock=True\n    # it tries to clear my password.\n)\nappium_server_url = 'http://localhost:4723'\ndriver = webdriver.Remote(appium_server_url, capabilities)\nprint('is screen ready?')\nwhile True:\n    try:\n        locked = driver.is_locked()\n        print('locked?', locked)\n        if not locked:\n            break\n        import os\n        if locked:\n            os.system(\"bash adb_unlock.sh\")\n            print(\"UNLOCKED\")\n    except:\n        pass\n# unlocking the phone will disconnect adb sessions\nif driver:\n    driver.quit()",
        "type": "code",
        "location": "/tests/qq_share_autojs/appium_unlock_phone.py:1-42"
    },
    "4039": {
        "file_id": 499,
        "content": "The code sets up an Appium test for unlocking an Android phone without requiring the device password. It initializes capabilities, connects to the appium server, checks if the screen is locked, and uses a bash script to unlock it.",
        "type": "comment"
    },
    "4040": {
        "file_id": 500,
        "content": "/tests/qq_share_autojs/appium_test.py",
        "type": "filepath"
    },
    "4041": {
        "file_id": 500,
        "content": "Code sets up Appium test for Android device using the uiautomator2 automation, launches com.android.settings app, searches for \"Battery\" and clicks it, then quits the driver if open.",
        "type": "summary"
    },
    "4042": {
        "file_id": 500,
        "content": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\nfrom appium import webdriver\nfrom appium.webdriver.common.appiumby import AppiumBy\ncapabilities = dict(\n    platformName='Android',\n    automationName='uiautomator2',\n    deviceName='Android',\n    appPackage='com.android.settings',\n    appActivity='.Settings',\n    language='en',\n    locale='US',\n    noSign=True\n)\nappium_server_url = 'http://localhost:4723'\ndriver = webdriver.Remote(appium_server_url, capabilities)\nel = driver.find_element(by=AppiumBy.XPATH, value='//*[@text=\"Battery\"]')\nel.click()\nif driver:\n    driver.quit()",
        "type": "code",
        "location": "/tests/qq_share_autojs/appium_test.py:1-27"
    },
    "4043": {
        "file_id": 500,
        "content": "Code sets up Appium test for Android device using the uiautomator2 automation, launches com.android.settings app, searches for \"Battery\" and clicks it, then quits the driver if open.",
        "type": "comment"
    },
    "4044": {
        "file_id": 501,
        "content": "/tests/qq_share_autojs/adb_unlock.sh",
        "type": "filepath"
    },
    "4045": {
        "file_id": 501,
        "content": "This code uses ADB to simulate touch events on an Android device. It performs a power button press, a swipe gesture, enters text, and presses the back key.",
        "type": "summary"
    },
    "4046": {
        "file_id": 501,
        "content": "adb -s 192.168.10.3:5555 shell input keyevent 26\nadb -s 192.168.10.3:5555 shell input swipe 500 500 500 0\nadb -s 192.168.10.3:5555 shell input text \"Bumper\\&Mountains\"\nadb -s 192.168.10.3:5555 shell input keyevent 66",
        "type": "code",
        "location": "/tests/qq_share_autojs/adb_unlock.sh:1-4"
    },
    "4047": {
        "file_id": 501,
        "content": "This code uses ADB to simulate touch events on an Android device. It performs a power button press, a swipe gesture, enters text, and presses the back key.",
        "type": "comment"
    },
    "4048": {
        "file_id": 502,
        "content": "/tests/qq_share_autojs/adb_check_lock.sh",
        "type": "filepath"
    },
    "4049": {
        "file_id": 502,
        "content": "This script checks if the phone is locked or unlocked by running \"adb -s 192.168.10.3:5555 shell dumpsys window | grep mDreamingLockscreen=false\" and then executes \"bash adb_unlock.sh\" if locked, otherwise exits. The check is performed in an infinite loop using a \"while true\" statement.",
        "type": "summary"
    },
    "4050": {
        "file_id": 502,
        "content": "function checkScreen {\n  adb -s 192.168.10.3:5555 shell dumpsys window | grep mDreamingLockscreen=false\n  if [[ $? -eq 1 ]]; then\n    echo \"phone locked\"\n    bash adb_unlock.sh\n    sleep 2\n  else\n    echo \"phone unlocked\"\n    exit\n  fi\n}\nwhile true\ndo\n  checkScreen\ndone",
        "type": "code",
        "location": "/tests/qq_share_autojs/adb_check_lock.sh:1-16"
    },
    "4051": {
        "file_id": 502,
        "content": "This script checks if the phone is locked or unlocked by running \"adb -s 192.168.10.3:5555 shell dumpsys window | grep mDreamingLockscreen=false\" and then executes \"bash adb_unlock.sh\" if locked, otherwise exits. The check is performed in an infinite loop using a \"while true\" statement.",
        "type": "comment"
    },
    "4052": {
        "file_id": 503,
        "content": "/tests/qq_share_autojs/adb_autox_launch.sh",
        "type": "filepath"
    },
    "4053": {
        "file_id": 503,
        "content": "This code is using the 'adb' command to launch the 'ShortcutActivity' in AutoJS v6 on a specific device (192.168.10.3:5555). It starts an activity and passes an intent action with the path to the 'qq_share_auto.js' script as an extra parameter.",
        "type": "summary"
    },
    "4054": {
        "file_id": 503,
        "content": "adb -s 192.168.10.3:5555 shell am start -n org.autojs.autoxjs.v6/org.autojs.autojs.external.shortcut.ShortcutActivity -a android.intent.action.MAIN -e path \"/storage/emulated/0/脚本/qq_share_auto.js\"",
        "type": "code",
        "location": "/tests/qq_share_autojs/adb_autox_launch.sh:1-1"
    },
    "4055": {
        "file_id": 503,
        "content": "This code is using the 'adb' command to launch the 'ShortcutActivity' in AutoJS v6 on a specific device (192.168.10.3:5555). It starts an activity and passes an intent action with the path to the 'qq_share_auto.js' script as an extra parameter.",
        "type": "comment"
    },
    "4056": {
        "file_id": 504,
        "content": "/tests/qq_share_autojs/account_management.sh",
        "type": "filepath"
    },
    "4057": {
        "file_id": 504,
        "content": "The code is starting the \"com.tencent.mobileqq.activity.AccountManageActivity\" activity, which likely pertains to account management in a mobile application named MobileQQ.",
        "type": "summary"
    },
    "4058": {
        "file_id": 504,
        "content": "am start  com.tencent.mobileqq.activity.AccountManageActivity",
        "type": "code",
        "location": "/tests/qq_share_autojs/account_management.sh:1-1"
    },
    "4059": {
        "file_id": 504,
        "content": "The code is starting the \"com.tencent.mobileqq.activity.AccountManageActivity\" activity, which likely pertains to account management in a mobile application named MobileQQ.",
        "type": "comment"
    },
    "4060": {
        "file_id": 505,
        "content": "/tests/qq_share_autojs/autojs_scripts/wesee_search.js",
        "type": "filepath"
    },
    "4061": {
        "file_id": 505,
        "content": "This code initiates the WeSee app, starts the GlobalSearchActivity, and inputs the search term \"猫猫\" before triggering a search with KEYCODE_ENTER.",
        "type": "summary"
    },
    "4062": {
        "file_id": 505,
        "content": "pkg=\"com.tencent.weishi\"\nact=\"com.tencent.oscar.module.discovery.ui.GlobalSearchActivity\"\napp.startActivity({root:true,\npackageName:pkg,className:act,\naction:\"View\"})\nwaitForActivity(act)\nsetText(\"猫猫\")\nKeyCode(\"KEYCODE_ENTER\")",
        "type": "code",
        "location": "/tests/qq_share_autojs/autojs_scripts/wesee_search.js:1-12"
    },
    "4063": {
        "file_id": 505,
        "content": "This code initiates the WeSee app, starts the GlobalSearchActivity, and inputs the search term \"猫猫\" before triggering a search with KEYCODE_ENTER.",
        "type": "comment"
    },
    "4064": {
        "file_id": 506,
        "content": "/tests/qq_share_autojs/autojs_scripts/taobao_gg_search.js",
        "type": "filepath"
    },
    "4065": {
        "file_id": 506,
        "content": "This code reduces music volume, opens Taobao app with custom URL, handles session ID and video player settings using item ID, GG search request, and referer origin, while waiting for prompts and handling expired ones by polling, clicking \"I know\" button, setting specific text, searching for \"猫猫\", and managing volume settings.",
        "type": "summary"
    },
    "4066": {
        "file_id": 506,
        "content": "package=\"com.taobao.taobao\";\nactivity=\"com.taobao.search.searchdoor.SearchDoorActivity\";\n//activity=\"com.taobao.search.searchdoor.MultipleSearchDoorActivity\";\nvar vol=device.getMusicVolume()\ndevice.setMusicVolume(0)\n// mute the thing please?\napp.startActivity({action:\"View\",\npackageName:package,className:activity,\nroot:true,\n//category:[\"com.taobao.intent.category.search.MULTI_SEARCHDOOR\"],\ndata:\"http://s.m.taobao.com/...\",})\n // not launching 淘宝逛逛\n /*\n 2221:2022-11-02 13:02:20.328 | startActivity { calling=com.taobao.taobao:-1--1, rc=10159-1987, iTS=false, requestCode=-1, startFlags=0, target=com.taobao.taobao/com.taobao.search.searchdoor.SearchDoorActivity<true>, intent=Intent { act=android.intent.action.VIEW dat=http://s.m.taobao.com/... pkg=com.taobao.taobao cmp=com.taobao.taobao/com.taobao.search.searchdoor.SearchDoorActivity (has extras) }, extras={ NAV_START_ACTIVITY_TIME:(java.lang.Long)1667365340316, ad_type:(java.lang.String)1.0, NAV_TO_URL_START_TIME:(java.lang.Long)1667365340268, referr",
        "type": "code",
        "location": "/tests/qq_share_autojs/autojs_scripts/taobao_gg_search.js:1-19"
    },
    "4067": {
        "file_id": 506,
        "content": "The code sets the music volume to 0 and then launches the Taobao app's search function by starting the specified activity with a specific URL. The intent action is VIEW, and it targets com.taobao.taobao/com.taobao.search.searchdoor.SearchDoorActivity.",
        "type": "comment"
    },
    "4068": {
        "file_id": 506,
        "content": "er:(java.lang.String)http://market.m.taobao.com/app/tb-source-app/video-fullpage/pages/index2?wh_weex=false&wx_navbar_transparent=true&wx_navbar_hidden=true&id=380201806724&bizParameters=%7B%22itemIds%22%3A%22681366994883%22%2C%22contentId%22%3A%22380201806724%22%2C%22videoId%22%3A%22380201806724%22%7D&videoUrl=http%3A%2F%2Fcloud.video.taobao.com%2Fplay%2Fu%2F2208882892036%2Fp%2F1%2Fe%2F6%2Ft%2F1%2F380201806724.mp4&type=cainixihuansy&source=cainixihuansy&business_spm=a211r6.cjvideo&hideAccountInfo=false&extParams=%7B%2288_bucket%22%3A%220%22%7D&scm=1007.10088.311498.0&spm=a2141.1.guessitemtab_1.5&pvid=b9ca1499-6a25-4913-9b4a-a2c703576f45&utparam=%7B%22x_sid%22%3A%2252aa36213ede47006361f9b21dbc602d%22%2C%22card_subtype%22%3A%22xgc%22%2C%22up_pvid%22%3A%22f88bbfa6-c859-44a5-94bb-e0599c889e5a%22%2C%22x_sid_cpm%22%3A%22be353521ca7fc7006361f9b20c542845%22%2C%22x_object_type%22%3A%22VIDEO_916%22%2C%22x_ad_bucketid_cpm%22%3A%2212676854%2C17296858%22%2C%22hybrid_score%22%3A0.303358%2C%22x_biz%",
        "type": "code",
        "location": "/tests/qq_share_autojs/autojs_scripts/taobao_gg_search.js:19-19"
    },
    "4069": {
        "file_id": 506,
        "content": "This code appears to be a URL for a Taobao video page, containing various parameters and identifiers for tracking and customization purposes.",
        "type": "comment"
    },
    "4070": {
        "file_id": 506,
        "content": "22%3A%22VIDEO_916%22%2C%22sessionid%22%3A%22b9ca1499-6a25-4913-9b4a-a2c703576f45%22%2C%22tpp_buckets%22%3A%22%7E9%7EU2wG6g9N1IaCq1M7J1Ia11K6A2Tg4x4I02E6nIfMi-u9KM9NveH1FhPjhxK7AniKCnO3mIO8Kj2dCQ6NhoMCwioGO1X6ddGN2W5qOUcWe41W2PePv31PMlSe11O2XcVr31EA5_s41zO2NubdRr-Z851Q1I7Li2dFU4S93dGSkxl5dU2TcFf7dBN8Cf8d_2ImFqbdY2A1JvbdM1U1P3cdX1y4IlcdZ1L6w9ddyCN9ddBN9AeedJL7Htgd_2Qpx2jdCW2QgjdzC4w2kdDJ8B6ldF%7EwpwFaf9z%7EZb7wWs29B%7EJhwQ4f9-B22y65-1Gp2BfmB2%7EGdwGfh9O1K52Nj5GSg2RplCB4V3mIN61FhfdIGcW041AEuHshdEDn1Lj7dFY5y98dB1O4H29dz-hw3cdPL1MqbdDVj1V4mdZ2C1WfkdFEp-4mdOF1IemdU%7EXk1wC0d9G%7EPi3wJh59wNeUo1Xp%7Ezv1wYcn5wEt7Uv2dD2C7Li3dGqKuQp7dU4zk1AcedZ4W7W0idRp%7EWecwFq49HPt8Dv9dNZ82U8gdKNqS6kdQWIbkdYU4VskdQ%7EFt4wG8g9A%22%2C%22miniapphc_score%22%3A0.0%2C%22x_summary_trackInfo%22%3A%22380569870474---380569870474-new_vp_4_3-new_vp_4_3%22%2C%22pvid%22%3A%22b9ca1499-6a25-4913-9b4a-a2c703576f45%22%2C%22evo_buckets%22%3A%22evo263227_118977%23275047_321220%23286254_324141%23337973_477247evo%22%2C%22auction_sco",
        "type": "code",
        "location": "/tests/qq_share_autojs/autojs_scripts/taobao_gg_search.js:19-19"
    },
    "4071": {
        "file_id": 506,
        "content": "The code seems to be related to tracking information, session ID, and possibly video player settings for a specific platform or application.",
        "type": "comment"
    },
    "4072": {
        "file_id": 506,
        "content": "re%22%3A0.0%2C%22scm%22%3A%221007.10088.311498.428654_37338_4631_438253_439584_428623_446528_434662_23752_438956_34262_433641_443307_25137_36851_22642_38173_25152_431777_445505_440772_438225_439515_37791_36729_1862_34124_26810_438089_445972_429366_447685_15345_10206_438387_19172_18035_439601%22%2C%22glc%22%3A%221%22%2C%22guessModelVersion%22%3A%2220211016%22%2C%22mtx_c%22%3A380201806724%2C%22matrix_score%22%3A0.0%2C%22miniapp_score%22%3A0.0%2C%22card_type%22%3A%22xgc%22%2C%22x_item_ids%22%3A%22681366994883%22%2C%22author_id%22%3A%222208882892036%22%2C%22guess_buckets%22%3A%226595_11513_11609_12894_13440_17348_19178_21337_21230_20634_22262%22%2C%22x_sytab%22%3A%221001%22%2C%22x_object_id%22%3A380201806724%7D&itemid=681366994883&item_id=681366994883&noDynamicRec=1&newItemList=1&utabtest=aliabtest184572_25123, URL_REFERER_ORIGIN:(java.lang.String)//s.m.taobao.com/h5entry?g_channelSrp=videointeract&g_tab=tbexperience&g_pfilter=daren&g_closeModues=tab&closeExpSubTab=true&g_csearchdoor_spm=a",
        "type": "code",
        "location": "/tests/qq_share_autojs/autojs_scripts/taobao_gg_search.js:19-19"
    },
    "4073": {
        "file_id": 506,
        "content": "Code contains various parameters for a Taobao GG search request, including scm, glc, guessModelVersion, mtx_c, matrix_score, miniapp_score, card_type, x_item_ids, author_id, guess_buckets, x_sytab, and x_object_id. The item ID is 681366994883. It also includes parameters for noDynamicRec, newItemList, and utabtest, and the URL referer origin is s.m.taobao.com/h5entry.",
        "type": "comment"
    },
    "4074": {
        "file_id": 506,
        "content": "310p.14955560&spm=a310p.13800399&launchMode=android_new_task&g_closeExpSubTab=true, WEEX_NAV_PROCESSOR_TIME:(java.lang.Long)1667365340292 } }.../xintent/logs #\n */\n waitForPackage(package);\n //跳转之后可能出现过期的提示\n //可能需要轮询\n for (var i=0;i<5;i++){//triple check?\n while (true){\n     sleep(200);\n  var succ=click(\"我知道了\");\n  if (succ){break;}\n if (currentActivity() ==activity)break;\n }\n }\n mytext=\"【淘宝】https://m.tb.cn/h.UfbOyIi?sm=26a80a?tk=XjXUd0OFtMN CZ0001 「这就是：我预判了你的预判吗」点击链接直接打开\"\n setText(mytext)\n //淘宝直接输入到搜索框里面 然后用这个进入视频搜索界面\n while(!click(\"搜索\"));\nwaitForActivity(\"com.taobao.android.interactive.timeline.VideoListActivity2\")\nid(\"imgSearch\").findOne().click()\nwaitForActivity(\"com.taobao.search.searchdoor.MultipleSearchDoorActivity\")\nsetText(\"猫猫\")\n//Text(\"猫猫\")\nwhile(!click(\"搜索\"));\n//可能出现搜索失败的情况 请注意\ndevice.setMusicVolume(vol)",
        "type": "code",
        "location": "/tests/qq_share_autojs/autojs_scripts/taobao_gg_search.js:19-54"
    },
    "4075": {
        "file_id": 506,
        "content": "Code snippet is performing actions in a Taobao app. It waits for the package, handles expired prompts by polling, clicks \"I know\" button, sets a specific text and searches for \"猫猫\". It ensures volume settings by setting music volume and possibly handles search failure scenarios.",
        "type": "comment"
    },
    "4076": {
        "file_id": 507,
        "content": "/tests/qq_share_autojs/autojs_scripts/show_toast.js",
        "type": "filepath"
    },
    "4077": {
        "file_id": 507,
        "content": "This code displays a toast notification with the message \"hello\" in the autojs_scripts directory.",
        "type": "summary"
    },
    "4078": {
        "file_id": 507,
        "content": "toast(\"hello\");",
        "type": "code",
        "location": "/tests/qq_share_autojs/autojs_scripts/show_toast.js:1-1"
    },
    "4079": {
        "file_id": 507,
        "content": "This code displays a toast notification with the message \"hello\" in the autojs_scripts directory.",
        "type": "comment"
    },
    "4080": {
        "file_id": 508,
        "content": "/tests/qq_share_autojs/autojs_scripts/qq_share_auto.js",
        "type": "filepath"
    },
    "4081": {
        "file_id": 508,
        "content": "This script performs activities for QQ Share, searches \"卷王培训基地\", clicks the contact number, attempts to find and click \"发送\" while waiting for \"返回哔哩哔哩\", then removes 'flag' file using AutoJS.",
        "type": "summary"
    },
    "4082": {
        "file_id": 508,
        "content": "auto();\nvar cmd = \"am start -S -n com.tencent.mobileqq/com.tencent.mobileqq.activity.JumpActivity -a android.intent.action.VIEW -d 'mqqapi://share/to_fri?src_type=app&version=1&file_type=news&file_data=L3N0b3JhZ2UvZW11bGF0ZWQvMC9QaWN0dXJlcy9zaGFyZS9jYXQuZ2lm&file_uri=ZmlsZTovLy9zdG9yYWdlL2VtdWxhdGVkLzAvUGljdHVyZXMvc2hhcmUvY2F0LmdpZg%3D%3D&title=5ZOU5ZOp5ZOU5ZOp&description=5Za15Za15Za1&share_id=100951776&url=aHR0cHM6Ly9iMjMudHYvdUhNTDVtaQ%3D%3D&app_name=5ZOU5ZOp5ZOU5ZOp&req_type=Nw%3D%3D&mini_program_appid=MTEwOTkzNzU1Nw%3D%3D&mini_program_path=cGFnZXMvdmlkZW8vdmlkZW8%2FYnZpZD1CVjF6ZDR5MTE3V0Y%3D&mini_program_type=Mw%3D%3D&cflag=MA%3D%3D&third_sd=dHJ1ZQ%3D%3D' -e pkg_name tv.danmaku.bili\";\nshell(cmd,true);\nwaitForActivity(\"com.tencent.mobileqq.activity.ForwardRecentActivity\");\nwhile(!click(\"搜索\"));\nsetText(\"卷王培训基地\");\nwhile(!click(\"543780931\"));\nwhile(true){\nvar send =text(\"发送\").findOne(1000);\nif (send !=null){send.click();}\n// will be null.\nvar ret=text(\"返回哔哩哔哩\").findOne(1000);\nif (ret != null){ret.click();break;}",
        "type": "code",
        "location": "/tests/qq_share_autojs/autojs_scripts/qq_share_auto.js:1-21"
    },
    "4083": {
        "file_id": 508,
        "content": "The script starts an activity for QQ Share, sets text, and waits for a specific activity to launch. It then clicks on \"搜索\", enters the search term \"卷王培训基地\", clicks on the contact number \"543780931\", and repeatedly tries to find the \"发送\" button while waiting for the \"返回哔哩哔哩\" button to appear before finally clicking it and breaking the loop.",
        "type": "comment"
    },
    "4084": {
        "file_id": 508,
        "content": "}\nshell(\"rm /storage/emulated/0/flag\")",
        "type": "code",
        "location": "/tests/qq_share_autojs/autojs_scripts/qq_share_auto.js:22-24"
    },
    "4085": {
        "file_id": 508,
        "content": "Removes the 'flag' file from storage using AutoJS script.",
        "type": "comment"
    },
    "4086": {
        "file_id": 509,
        "content": "/tests/qq_share_autojs/autojs_scripts/qq_account_switch.js",
        "type": "filepath"
    },
    "4087": {
        "file_id": 509,
        "content": "This code starts the \"com.tencent.mobileqq\" application, specifically the AccountManageActivity, which allows switching between different QQ accounts.",
        "type": "summary"
    },
    "4088": {
        "file_id": 509,
        "content": "app.startActivity({\n    root:true,\n        action: \"View\",\n        packageName:\"com.tencent.mobileqq\",\n        className: \"com.tencent.mobileqq.activity.AccountManageActivity\"\n    });",
        "type": "code",
        "location": "/tests/qq_share_autojs/autojs_scripts/qq_account_switch.js:1-6"
    },
    "4089": {
        "file_id": 509,
        "content": "This code starts the \"com.tencent.mobileqq\" application, specifically the AccountManageActivity, which allows switching between different QQ accounts.",
        "type": "comment"
    },
    "4090": {
        "file_id": 510,
        "content": "/tests/recommendation_system/neo4j_e2e_recsys.py",
        "type": "filepath"
    },
    "4091": {
        "file_id": 510,
        "content": "This code is referencing resources from Neo4j's documentation for end-to-end examples and Graph Academy training. It appears to be related to implementing Fast RP (Recommendation Prediction) using k-Nearest Neighbors (kNN) algorithm in a Neo4j graph database.",
        "type": "summary"
    },
    "4092": {
        "file_id": 510,
        "content": "# https://neo4j.com/docs/graph-data-science/current/end-to-end-examples/fastrp-knn-example/\n# https://neo4j.com/graphacademy/training-iga-40/12-iga-40-ingredient-analysis/",
        "type": "code",
        "location": "/tests/recommendation_system/neo4j_e2e_recsys.py:1-2"
    },
    "4093": {
        "file_id": 510,
        "content": "This code is referencing resources from Neo4j's documentation for end-to-end examples and Graph Academy training. It appears to be related to implementing Fast RP (Recommendation Prediction) using k-Nearest Neighbors (kNN) algorithm in a Neo4j graph database.",
        "type": "comment"
    },
    "4094": {
        "file_id": 511,
        "content": "/tests/recommendation_system/karate_test.py",
        "type": "filepath"
    },
    "4095": {
        "file_id": 511,
        "content": "This code imports necessary libraries and defines a function for normalizing adjacency matrices. It then creates a graph using the karate club data, converts it to a dense matrix, normalizes this matrix, and prints its shape before initializing a GCN model.",
        "type": "summary"
    },
    "4096": {
        "file_id": 511,
        "content": "import networkx as nx\nimport torch\ndef normalize(A , symmetric=True):\n\t# A = A+I\n\tA = A + torch.eye(A.size(0))\n\t# 所有节点的度\n\td = A.sum(1)\n\tif symmetric:\n\t\t#D = D^-1/2\n\t\tD = torch.diag(torch.pow(d , -0.5))\n\t\treturn D.mm(A).mm(D)\n\telse:\n\t\t# D=D^-1\n\t\tD = torch.diag(torch.pow(d,-1))\n\t\treturn D.mm(A)\nG = nx.karate_club_graph()\nA = nx.adjacency_matrix(G).todense() # dense matrix? not so freaking good.\n#A需要正规化\nA_normed = normalize(torch.FloatTensor(A),True)\nprint(A_normed.shape)\nfrom torch_geometric.nn import GCN\n# how to generate graph?\n# breakpoint() # 34,34",
        "type": "code",
        "location": "/tests/recommendation_system/karate_test.py:1-27"
    },
    "4097": {
        "file_id": 511,
        "content": "This code imports necessary libraries and defines a function for normalizing adjacency matrices. It then creates a graph using the karate club data, converts it to a dense matrix, normalizes this matrix, and prints its shape before initializing a GCN model.",
        "type": "comment"
    },
    "4098": {
        "file_id": 512,
        "content": "/tests/recommendation_system/dgl_link_prediction.py",
        "type": "filepath"
    },
    "4099": {
        "file_id": 512,
        "content": "This code imports the DGL library, loads the Cora dataset from DGL's data module, and prints the loaded dataset. The Cora dataset is a popular benchmark for node classification tasks in graph-based machine learning.",
        "type": "summary"
    }
}