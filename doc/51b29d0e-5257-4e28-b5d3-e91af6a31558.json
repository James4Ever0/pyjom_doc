{
    "summary": "The code configures FFmpeg with various libraries, modules, and specific paths for CUDA include and library files, then builds and installs the custom FFmpeg.",
    "details": [
        {
            "comment": "The code configures the ffmpeg build with various options such as libspeex, gpl, nonfree, pthreads, and more. It also enables cuda-nvcc, cuvid, nvenc, shared, gnutls, ladspa, aom, ass, bluray, bs2b, caca, dav1d, fontconfig, fribidi, gme, gsm, jack, mp3lame, mysofa, openjpeg, openmpt, opus, pulse, rabbitmq, rubberband, shine, snappy, soxr, ssh, theora, twolame, vidstab, vorbis, vpx, webp, and x265. It uses specific paths for include and library files of cuda. Disables static build.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/externals/ffmpeg_libspeex_tensorflow_support.sh\":0-4",
            "content": "cd ffmpeg\n###LAST WORKING ONE\n./configure --toolchain=hardened  --arch=amd64  --enable-libspeex --enable-gpl --enable-nonfree --enable-pthreads --extra-libs=-lstdc++ --enable-cuda-nvcc --enable-cuvid --enable-nvenc --enable-shared --enable-libnpp --extra-cflags=-I/usr/local/cuda/include --enable-libnpp --extra-ldflags=-L/usr/local/cuda/lib64 --disable-static --enable-gnutls --enable-ladspa --enable-libaom --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libcodec2 --enable-libdav1d --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libjack --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librabbitmq --enable-librubberband --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvidstab --enable-libvorbis --enable-libvpx --enable-libwebp --enable-libx265 "
        },
        {
            "comment": "The code is enabling a variety of libraries and modules for FFmpeg, including audio and video codecs, user interfaces, and specialized libraries like libtensorflow. It then builds and installs the configured FFmpeg.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/externals/ffmpeg_libspeex_tensorflow_support.sh\":4-7",
            "content": "--enable-libsrt --enable-libxml2 --enable-libxvid --enable-libzimg --enable-libzmq --enable-libzvbi --enable-lv2 --enable-omx --enable-openal --enable-opencl --enable-opengl --enable-sdl2 --disable-sndio --enable-pocketsphinx --enable-librsvg --enable-libmfx --enable-libdc1394 --enable-libdrm --enable-chromaprint --enable-frei0r --enable-libx264 --enable-shared --enable-libopenh264  --enable-libtensorflow # wtf?\nmake -j8\nmake install"
        }
    ]
}