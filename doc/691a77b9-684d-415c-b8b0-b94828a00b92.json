{
    "summary": "The code imports Baidu language models, defines functions for detecting and translating languages, and uses them to paraphrase text by randomly selecting intermediate languages. It employs the baiduParaphraserByTranslation function for iterative translation through multiple languages, with optional depth limit and debug mode.",
    "details": [
        {
            "comment": "The code imports necessary modules, caches Baidu language translation and recognition models for efficient usage, and defines two functions: `baidu_lang_detect` for detecting the language of a given content, and `baidu_translate` for translating source text to target text using the cached Baidu language translation model. The code also includes variables for API sleep time and lock file path.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/title_rewrite_paraphrase/test_baidu_paraphrase.py\":0-40",
            "content": "from functools import lru_cache\nimport paddlehub as hub\n@lru_cache(maxsize=1)\ndef getBaiduLanguageTranslationModel():\n    language_translation_model = hub.Module(name=\"baidu_translate\")\n    return language_translation_model\n@lru_cache(maxsize=1)\ndef getBaiduLanguageRecognitionModel():\n    language_recognition_model = hub.Module(name=\"baidu_language_recognition\")\n    return language_recognition_model\nBAIDU_API_SLEEP_TIME = 1\nBAIDU_TRANSLATOR_LOCK_FILE = (\n    \"/root/Desktop/works/pyjom/tests/karaoke_effects/baidu_translator.lock\"\n)\ndef baidu_lang_detect(\n    content: str, sleep=BAIDU_API_SLEEP_TIME, lock_file=BAIDU_TRANSLATOR_LOCK_FILE\n):  # target language must be chinese.\n    import filelock\n    lock = filelock.FileLock(lock_file)\n    with lock:\n        import time\n        time.sleep(sleep)\n        language_recognition_model = getBaiduLanguageRecognitionModel()\n        langid = language_recognition_model.recognize(content)\n        return langid\ndef baidu_translate(\n    content: str,\n    source: str,\n    target: str,"
        },
        {
            "comment": "This code defines a function called `baiduParaphraserByTranslation` that paraphrases text using the Baidu API. It first detects the target language, then randomly selects one or more intermediate languages from a list of suggested middle languages. The function uses the getBaiduLanguageTranslationModel() to translate the content through each intermediate language, resulting in a paraphrased version of the original text. The translation is done in multiple steps with a sleep time between each step.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/title_rewrite_paraphrase/test_baidu_paraphrase.py\":41-80",
            "content": "    sleep: int = BAIDU_API_SLEEP_TIME,\n    lock_file: str = BAIDU_TRANSLATOR_LOCK_FILE,\n):  # target language must be chinese.\n    import filelock\n    lock = filelock.FileLock(lock_file)\n    with lock:\n        import time\n        time.sleep(sleep)\n        language_translation_model = getBaiduLanguageTranslationModel()\n        translated_content = language_translation_model.translate(\n            content, source, target\n        )\n        return translated_content\nfrom typing import Iterable, Union\nimport random\ndef baiduParaphraserByTranslation(\n    content: str,\n    debug: bool = False,\n    paraphrase_depth: Union[\n        int, Iterable\n    ] = 1,  # only 1 intermediate language, default.\n    suggested_middle_languages: list[str] = [\n        \"zh\",\n        \"en\",\n        \"jp\",\n    ],  # english, japanese, chinese\n):\n    if issubclass(type(paraphrase_depth), Iterable):\n        paraphrase_depth = random.choice(paraphrase_depth)\n    target_language_id = baidu_lang_detect(content)\n    all_middle_languages = list(set(suggested_middle_languages + [target_language_id]))"
        },
        {
            "comment": "This code performs a paraphrasing operation by iteratively translating the content through multiple languages, excluding the target language. It checks for a minimum paraphrase depth and the number of available middle languages. The output is obtained by translating the initial content through each intermediate language, resulting in a paraphrased version of the original text.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/title_rewrite_paraphrase/test_baidu_paraphrase.py\":82-108",
            "content": "    assert paraphrase_depth > 0\n    if paraphrase_depth > 1:\n        assert len(all_middle_languages) >= 3\n    current_language_id = target_language_id\n    middle_content = content\n    head_tail_indexs = set([0, paraphrase_depth - 1])\n    intermediate_languages = []\n    for loop_id in range(paraphrase_depth):\n        forbid_langs = set([current_language_id])\n        if loop_id in head_tail_indexs:\n            forbid_langs.add(target_language_id)\n        non_target_middle_languages = [\n            langid for langid in all_middle_languages if langid not in forbid_langs\n        ]\n        if debug:\n            print(f\"INDEX: {loop_id} INTERMEDIATE LANGS: {non_target_middle_languages}\")\n        middle_language_id = random.choice(non_target_middle_languages)\n        middle_content = baidu_translate(\n            middle_content, source=current_language_id, target=middle_language_id\n        )\n        current_language_id = middle_language_id\n        intermediate_languages.append(middle_language_id)\n    output_content = baidu_translate("
        },
        {
            "comment": "The code is calling the baiduParaphraserByTranslation function to paraphrase a given content. It passes the content, specifies the maximum depth of paraphrasing (3), and sets the debug mode to True for printing additional information about the process. If successful, it returns the paraphrased output and a boolean success flag. The content in this case is \"\u652f\u6301\u51e0\u5341\u4e2a\u4e0d\u540c\u7c7b\u578b\u7684\u4efb\u52a1\uff0c\u5177\u6709\u8f83\u597d\u7684\u96f6\u6837\u672c\u5b66\u4e60\u80fd\u529b\u548c\u5c11\u6837\u672c\u5b66\u4e60\u80fd\u529b\u3002\".",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/title_rewrite_paraphrase/test_baidu_paraphrase.py\":109-123",
            "content": "        middle_content, source=current_language_id, target=target_language_id\n    )\n    success = output_content.strip() != content.strip()\n    if debug:\n        print(\"SOURCE LANGUAGE:\", target_language_id)\n        print(\"USING INTERMEDIATE LANGUAGES:\", intermediate_languages)\n        print(\"PARAPHRASED:\", output_content)\n        print(\"paraphrase success?\", success)\n    return output_content, success\n# content = \"\u4e16\u4e0a\u6240\u6709\u5c0f\u732b\u90fd\u662f\u5929\u4f7f\u53d8\u7684\uff01\"\ncontent =  \"\u652f\u6301\u51e0\u5341\u4e2a\u4e0d\u540c\u7c7b\u578b\u7684\u4efb\u52a1\uff0c\u5177\u6709\u8f83\u597d\u7684\u96f6\u6837\u672c\u5b66\u4e60\u80fd\u529b\u548c\u5c11\u6837\u672c\u5b66\u4e60\u80fd\u529b\u3002\"\noutput, success = baiduParaphraserByTranslation(content, paraphrase_depth=3, debug=True)"
        }
    ]
}