{
    "summary": "This code aims to recognize a song using the Shazam library and the Houndify API. It imports necessary libraries, sets up an event loop, connects to the API, sends song recognition information, and prints the recognized song's output. The author also mentions that this code works for SoundHound and plans to test it on other platforms like Shazam and Netease. The code filters out parts of the audio without singing voice and considers converting traditional Chinese to simplified Chinese for better searching experience.",
    "details": [
        {
            "comment": "This code aims to recognize a song using the Shazam library and the Houndify API. It imports necessary libraries, sets up an event loop, connects to the API, sends song recognition information, and prints the recognized song's output. The author also mentions that this code works for SoundHound and plans to test it on other platforms like Shazam and Netease. The code filters out parts of the audio without singing voice and considers converting traditional Chinese to simplified Chinese for better searching experience.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/soundhound_houndify_midomi_sound_recognize_music/test.py\":0-33",
            "content": "# url = \"wss://houndify.midomi.com/\"\n# import asyncio\n# import websockets\n# async def hello():\n#     async with websockets.connect(url) as websocket:\n#         await websocket.send({ \"version\": \"1.0\" })\n#         await websocket.recv()\n# asyncio.run(hello())\n# the nodejs works for soundhound right now.\n# move upon other platforms: shazam (2 tools), netease.\n# shazam works for our chinese songs. one problem: it has traditional chinese.\n# better convert traditional chinese to simplified chinese, for better searching experience.\n# or you bet it. maybe another way of censorship circumvention?\n# apt-get install opencc\n# you need to filter out those parts without singing voice, if download music from kugou/qq music\naudioFile = \"/root/Desktop/works/pyjom/tests/music_analysis/exciting_bgm.mp3\"\nimport asyncio\nfrom shazamio import Shazam\nasync def main():\n    shazam = Shazam()\n    out = await shazam.recognize_song(audioFile)\n    print(out)\nloop = asyncio.get_event_loop()\nloop.run_until_complete(main())"
        }
    ]
}