{
    "summary": "This code allows users to choose between password and SMS login methods, with additional functionality for database storage and geetest validation. It performs a login, retrieves user data, updates the database, and asks about atomic insert in tinydb.",
    "details": [
        {
            "comment": "This code allows the user to choose between two login methods: password or SMS verification. If the user chooses password login, they input their credentials and are logged in immediately if valid. If the user chooses SMS login, they first need to enter their phone number and receive an SMS code. After entering the code, they're logged in. The code also has a setting to disable automatic opening of geetest validation window.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/bilibili_login_get_credential_view_data/test.py\":0-45",
            "content": "from bilibili_api.login import (\n    login_with_password,\n    login_with_sms,\n    send_sms,\n    PhoneNumber,\n    Check,\n)\nfrom bilibili_api.user import get_self_info\nfrom bilibili_api import settings\nfrom bilibili_api import sync, Credential\n# mode = int(input(\"\"\"\u8bf7\u9009\u62e9\u767b\u5f55\u65b9\u5f0f\uff1a\n# 1. \u5bc6\u7801\u767b\u5f55\n# 2. \u9a8c\u8bc1\u7801\u767b\u5f55\n# \u8bf7\u8f93\u5165 1/2\n# \"\"\"))\nmode = 2\ncredential = None\n# \u5173\u95ed\u81ea\u52a8\u6253\u5f00 geetest \u9a8c\u8bc1\u7a97\u53e3\nsettings.geetest_auto_open = False\nif mode == 1:\n    # \u5bc6\u7801\u767b\u5f55\n    username = input(\"\u8bf7\u8f93\u5165\u624b\u673a\u53f7/\u90ae\u7bb1\uff1a\")\n    password = input(\"\u8bf7\u8f93\u5165\u5bc6\u7801\uff1a\")\n    print(\"\u6b63\u5728\u767b\u5f55\u3002\")\n    c = login_with_password(username, password)\n    if isinstance(c, Check):\n        # \u8fd8\u9700\u9a8c\u8bc1\n        phone = input(\"\u9700\u8981\u9a8c\u8bc1\u3002\u8bf7\u8f93\u5165\u624b\u673a\u53f7\uff1a\")\n        c.set_phone(PhoneNumber(phone, country=\"+86\"))  # \u9ed8\u8ba4\u8bbe\u7f6e\u5730\u533a\u4e3a\u4e2d\u56fd\u5927\u9646\n        c.send_code()\n        print(\"\u5df2\u53d1\u9001\u9a8c\u8bc1\u7801\u3002\")\n        code = input(\"\u8bf7\u8f93\u5165\u9a8c\u8bc1\u7801\uff1a\")\n        credential = c.login(code)\n        print(\"\u767b\u5f55\u6210\u529f\uff01\")\n    else:\n        credential = c\nelif mode == 2:\n    # \u9a8c\u8bc1\u7801\u767b\u5f55\n    phone = input(\"\u8bf7\u8f93\u5165\u624b\u673a\u53f7\uff1a\")\n    print(\"\u6b63\u5728\u767b\u5f55\u3002\")\n    send_sms(PhoneNumber(phone, country=\"+86\"))  # \u9ed8\u8ba4\u8bbe\u7f6e\u5730\u533a\u4e3a\u4e2d\u56fd\u5927\u9646\n    code = input(\"\u8bf7\u8f93\u5165\u9a8c\u8bc1\u7801\uff1a\")"
        },
        {
            "comment": "This code performs a login with SMS and stores the credentials in a database. It first checks if the login was successful, then retrieves the name, buvid3, bili_jct, sessdata, and dedeuserid from the credentials. The code updates the database with this information using an upsert operation, ensuring that the dedeuserid is unique. Finally, it asks how to perform atomic insert in tinydb.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/bilibili_login_get_credential_view_data/test.py\":46-81",
            "content": "    c = login_with_sms(PhoneNumber(phone, country=\"+86\"), code)\n    credential = c\n    print(\"\u767b\u5f55\u6210\u529f\")\nelse:\n    print(\"\u8bf7\u8f93\u5165 1/2 \uff01\")\n    exit()\nfrom lazero.search.api import getHomeDirectory\nimport os\nhome = getHomeDirectory()\ndbPath = os.path.join(home, \".bilibili_api.json\")\nimport tinydb\ndb = tinydb.TinyDB(dbPath)\nif credential != None:\n    name = sync(get_self_info(credential))[\"name\"]\n    print(f\"\u6b22\u8fce\uff0c{name}!\")\n    buvid3 = credential.buvid3\n    bili_jct = credential.bili_jct\n    sessdata = credential.sessdata\n    dedeuserid = credential.dedeuserid  # this is userid, better use this instead?\n    User = tinydb.Query()\n    # assume that we are here to fetch valid credentials.\n    db.upsert(\n        {\n            \"name\": name,\n            \"dedeuserid\": dedeuserid,\n            \"bili_jct\": bili_jct,\n            \"buvid3\": buvid3,\n            \"sessdata\": sessdata,\n        },\n        User.dedeuserid == dedeuserid,\n    )\n    # how to perform atomic insert in tinydb?\n    # breakpoint()"
        }
    ]
}