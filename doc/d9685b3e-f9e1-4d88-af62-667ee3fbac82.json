{
    "summary": "This FastAPI server allows progress updates via network, with endpoints for starting, resetting, and updating tqdm progress bars, along with functions for opening and closing the progress bar.",
    "details": [
        {
            "comment": "This code sets up a FastAPI server to handle progress updates via network. It includes endpoints for starting, resetting, and updating a tqdm progress bar. The server also includes functions for opening and closing the progress bar.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/update_progressbar_network/test.py\":0-45",
            "content": "# try to update progressbar via network.\nfrom fastapi import FastAPI\napp = FastAPI()\nfrom tqdm import tqdm\nt = None\n@app.get('/')\ndef hello():\n    return 'progressbar server'\n# not routing this to network.\ndef close_progressbar():\n    global t\n    if t is not None:\n        try:\n            t.close()\n            return {'msg':'success'}\n        except:\n            import traceback\n            traceback.print_exc()\n            print('error closing progressbar')\n            return {'msg':'error closing progressbar'}\n@app.get('/reset')\ndef reset(total: int, name:str='random task'): # pass the iteration count\n    global t\n    close_progressbar()\n    print('processing:', name)\n    t = tqdm(total=total)\n    return {'msg':'success'}\n@app.get('/update')\ndef update_progressbar(progress: int=1):\n    global t\n    if t is not None:\n        try:\n            t.clear()\n            t.update(progress)\n            return {'msg':'success'}\n        except:\n            import traceback\n            traceback.print_exc()\n            print(\"error when updating progessbar\")"
        },
        {
            "comment": "This code handles a GET route for closing the progressbar and returns success or error messages based on the availability of the progressbar.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/update_progressbar_network/test.py\":46-55",
            "content": "            return {'msg':'error when updating progessbar'}\n    else:\n        print('no progressbar available')\n        return {'msg':'no progressbar available'}\n@app.get('/close')\ndef close():\n    close_progressbar()\n    return {'msg':'success'}"
        }
    ]
}