{
    "summary": "The code imports functions from the \"bilibili_api\" module and performs actions related to video searching and retrieval on Bilibili platform, using bilibili_search_api module to search for videos and write results to JSON files.",
    "details": [
        {
            "comment": "This code imports functions from the \"bilibili_api\" module, initializes a search object, and attempts to perform various actions related to video searching and retrieval on Bilibili platform. It includes searching for videos using specified keywords and tags, getting suggested keywords, obtaining video information, and saving search results and video info as JSON files.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/bilibili_search_api_modification_section_params_get_related_videos/testApi.py\":0-37",
            "content": "from bilibili_api import sync, search\nBSP = search.bilibiliSearchParams()\n# result = sync(\n#     search.search(\n#         keyword=\"\u6c6a\u6c6a\",\n#         params={\"tids\": BSP.all.tids.\u52a8\u7269\u5708.tid, \"duration\": BSP.all.duration._10\u5206\u949f\u4ee5\u4e0b},\n#         page=1\n#     )\n# )\n# print(result)\n# how to get suggested keyword?\n# suggested_keyword = sync(search.get_suggest_keywords(keyword = \"\u6c6a\u6c6a\"))\n# print(suggested_keyword)\n# you might want to split this.\n# this is not deterministic.\n# ['\u6c6a\u6c6a\u961f\u7acb\u5927\u529f \u7b2c\u4e8c\u5b63 \u4e2d\u6587\u914d\u97f3', '\u6c6a\u6c6a\u961f\u7acb\u5927\u529f', '\u6c6a\u6c6a\u961f\u7acb\u5927\u529f\u795e\u5a01\u72d7\u72d7', '\u6c6a\u6c6a\u961f', '\u7279\u522b\u4efb\u52a1 \u6c6a\u6c6a\u961f\u7acb\u5927\u529f \u5192\u9669\u6e7e\u7684\u4e00\u5929', '\u96c0\u9b42\u6c6a\u6c6a\u5f55', '\u6c6a\u6c6a\u516c\u4e3bbiu', '\u6c6a\u6c6a\u6765\u900f\u5267', '\u6c6a\u6c6a\u5728\u4e9a\u7f8e\u5c3c\u4e9a', '\u6c6a\u6c6a\u961f\u7acb\u5927\u529f \u7b2c\u4e00\u5b63 \u4e2d\u6587\u914d\u97f3']\n# ['\u6c6a\u6c6a\u961f\u7acb\u5927\u529f', '\u6c6a\u6c6a\u961f', '\u6c6a\u6c6a\u961f\u7acb\u5927\u529f \u7b2c\u4e00\u5b63 \u4e2d\u6587\u914d\u97f3', '\u6c6a\u6c6a\u961f\u7acb\u5927\u529f \u7b2c\u4e8c\u5b63 \u4e2d\u6587\u914d\u97f3', '\u6c6a\u6c6a\u5f55', '\u6c6a\u6c6a\u961f\u7acb\u5927\u529f\u5927\u7535\u5f71', '\u6c6a\u6c6a\u961f\u7acb\u5927\u529f\u4e2d\u6587', '\u6c6a\u6c6a\u961f\u7acb\u5927\u529f\u795e\u5a01\u72d7\u72d7', '\u6c6a\u6c6a\u6c6a', '\u6c6a\u6c6a\u961f\u4e2d\u6587']\nimport json\n# result_str = json.dumps(result, ensure_ascii=False, indent=4)\n# with open(\"search_result_all.json\",'w+') as f:\n#     f.write(result_str)\n# get video info\nfrom bilibili_api import video\nbvid = \"BV1iw411Z7xt\"\nv = video.Video(bvid=bvid)\n# info=sync(v.get_info())\n# # print(info)\n# with open('video_info.json', 'w+') as f:"
        },
        {
            "comment": "This code is using the bilibili_search_api module to search for videos related to a specific keyword and writes the results to json files. The script first calls the get_related() function on each video, then writes the related videos to a 'video_related.json' file. Next, it searches for a specific type of video using the search_by_type() function and writes the result to 'search_by_type_result_video.json'. Additionally, there is commented code that suggests reading data from 'search_result_all.json', but this is not executed in this script.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/bilibili_search_api_modification_section_params_get_related_videos/testApi.py\":38-67",
            "content": "#     f.write(json.dumps(info, indent=4, ensure_ascii=False))\n# -> pages to access all parted videos.\n# -> ugc_season to get maker collected seasons.\n# # video tags\n# able to get from search\n# related videos\n# related = sync(v.get_related())\n# with open('video_related.json', 'w+') as f:\n#     f.write(json.dumps(related, indent=4, ensure_ascii=False))\n# search video\nresult = sync(\n    search.search_by_type(\n        keyword=\"\u6c6a\u6c6a\",\n        params={\"tids\": BSP.all.tids.\u52a8\u7269\u5708.tid, \"duration\": BSP.all.duration._10\u5206\u949f\u4ee5\u4e0b},\n        page=1,\n        search_type=search.SearchObjectType.VIDEO,\n    )\n)\nwith open('search_by_type_result_video.json','w+') as f:\n    f.write(json.dumps(result, indent=4, ensure_ascii=False))\n# with open(\"search_result_all.json\", \"r\") as f:\n#     data = f.read()\n#     data = json.loads(data)"
        }
    ]
}