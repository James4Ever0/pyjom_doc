{
    "summary": "This code is training a Structured Perceptron on one-hot encoded features with varying sequence lengths. The classifier is then evaluated using whole sequence accuracy.",
    "details": [
        {
            "comment": "This code is training a Structured Perceptron on one-hot encoded features with varying sequence lengths. The classifier is then evaluated using whole sequence accuracy.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/hmm_test_speech_recognization_time_series/seqlearn_test.py\":0-18",
            "content": "from seqlearn.perceptron import StructuredPerceptron  # it's like mini neural network.\n# the lengths_train marked each individual sequence's length as an array.\nimport numpy as np\nX_train = np.random.random((5, 4))  # one-hot encoded? not? features=4\ny_train = np.random.randint(0, 5, (5,))  # the freaking label.\nlengths_train = [1, 1, 2, 1]  # may i apologize. sum=5\nclassifier = StructuredPerceptron()\nclassifier.fit(X_train, y_train, lengths_train)\n# from seqlearn.evaluation import bio_f_score\nfrom seqlearn.evaluation import whole_sequence_accuracy\ny_pred = classifier.predict(X_train, lengths_train)\nprint(\"TRAINED ACCURACY: {:.2f} %\".format(100*whole_sequence_accuracy(y_train, y_pred, lengths_train)))\n# breakpoint()"
        }
    ]
}