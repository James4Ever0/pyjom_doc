{
    "summary": "The code utilizes go-cqhttp and Requests library to send XML-formatted rich media messages, targeting group chats with audio and QQ Music items, requiring a group ID. It allows Python users to send messages containing JSON or XML data to a web URL with dynamic content.",
    "details": [
        {
            "comment": "The code attempts to send an XML message to a group chat using the GOCQHTTP API. The message contains a template with a cover image, title, and summary, promoting a video from Bilibili. The message can only be sent in group chats and not private chats. It uses the base URL \"http://0.0.0.0:5700\" and requires the group ID as input for sending the XML message.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/qq_gocqhttp_post_xml.py\":0-11",
            "content": "baseUrl = \"http://0.0.0.0:5700\"\n# try to send xml to group.\n# \u79c1\u804a\u53ef\u4ee5\u53d1xml \u4f46\u662f\u7fa4\u804a\u4e0d\u884c \u7fa4\u804a\u53ea\u80fd\u53d1\u52a0\u5bc6\u597d\u9a8c\u8bc1\u597d\u7684json\n# cover = \"http://pubminishare-30161.picsz.qpic.cn/d4ad36fa-833e-4018-b994-a2da810f2d54\"\n# content = \"\"\"<?xml version='1.0' encoding='UTF-8' standalone='yes'?><msg templateID=\"123\" url=\"https://b23.tv/5K7qh7K?share_medium=android&amp;share_source=qq&amp;bbid=XY46C7C4C74C8D645671EF7E8F4CC7810054A&amp;ts=1657521142233\" serviceID=\"1\" action=\"web\" actionData=\"\" a_actionData=\"\" i_actionData=\"\" brief=\"[QQ\u5c0f\u7a0b\u5e8f]\u54d4\u54e9\u54d4\u54e9\" flag=\"0\"><item layout=\"2\"><picture cover=\"{}\"/><title>\u54d4\u54e9\u54d4\u54e9</title><summary>\u3010C\u8bed\u8a00\u3011\u300a\u5e26\u4f60\u5b66C\u5e26\u4f60\u98de\u300b</summary></item><source url=\"https://b23.tv/5K7qh7K?share_medium=android&amp;share_source=qq&amp;bbid=XY46C7C4C74C8D645671EF7E8F4CC7810054A&amp;ts=1657521142233\" icon=\"https://open.gtimg.cn/open/app_icon/00/95/17/76/100951776_100_m.png?t=1657091104\" name=\"\u54d4\u54e9\u54d4\u54e9\" appid=\"0\" action=\"web\" actionData=\"\" a_actionData=\"tencent0://\" i_actionData=\"\"/></msg>\"\"\".format(\n# cover)\ngroup = 543780931\nimport requests\nurl = baseUrl + \"/send_group_msg\""
        },
        {
            "comment": "This code is setting a message and content for an XML-formatted message to be sent using the gocqhttp package. The message includes an image, audio, and links to a music source and app ID. It will be used for sending a rich media message with QQ Gocqhttp.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/qq_gocqhttp_post_xml.py\":12-14",
            "content": "# message = 'test'\n# content = \"\"\"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\" ?><msg serviceID=\"2\" templateID=\"1\" action=\"web\" brief=\"\" sourceMsgId=\"0\" url=\"https://qm.qq.com/cgi-bin/qm/qr?k=wyw10nH14NxBzBmM2DZK_bj9y9yX-IJL\" flag=\"0\" adverSign=\"0\" multiMsgFlag=\"0\"><item layout=\"2\"><audio cover=\"https://python3student.github.io/img/avatar.jpg\" src=\"https://music.163.com/song/media/outer/url?id=449818326.mp3\" /><title>\u9e7f be free</title><summary>\u300e\u4f5c\u8005\u300f\u795e\u5947</summary></item><source name=\"\u795e\u5947\u6c38\u8fdc\u7684\u795e\uff01\" icon=\"https://python3student.github.io/img/avatar.jpg\" url=\"https://python3student.github.io/img/avatar.jpg\" action=\"app\" a_actionData=\"com.netease.cloudmusic\" i_actionData=\"tencent100495085://\" appid=\"100495085\" /></msg>\"\"\"\n# content = \"\"\"<?xml version='1.0' encoding='UTF-8' standalone='yes' ?><msg serviceID=\"2\" templateID=\"1\" action=\"web\" brief=\"&#91;\u5206\u4eab&#93; \u5341\u5e74\" sourceMsgId=\"0\" url=\"https://i.y.qq.com/v8/playsong.html?_wv=1&amp;songid=4830342&amp;souce=qqshare&amp;source=qqshare&amp;ADTAG=qqsh"
        },
        {
            "comment": "This code is creating an XML string for a QQ goCQHttp message, featuring an audio track and an item from QQ Music. It includes the audio source, title, summary, and source information. The message has a service ID of 1, template ID of 1, and a flag value of 8.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/qq_gocqhttp_post_xml.py\":14-15",
            "content": "are\" flag=\"0\" adverSign=\"0\" multiMsgFlag=\"0\" ><item layout=\"2\"><audio cover=\"http://imgcache.qq.com/music/photo/album_500/26/500_albumpic_89526_0.jpg\" src=\"http://ws.stream.qqmusic.qq.com/C400003mAan70zUy5O.m4a?guid=1535153710&amp;vkey=D5315B8C0603653592AD4879A8A3742177F59D582A7A86546E24DD7F282C3ACF81526C76E293E57EA1E42CF19881C561275D919233333ADE&amp;uin=&amp;fromtag=3\" /><title>\u5341\u5e74</title><summary>\u9648\u5955\u8fc5</summary></item><source name=\"QQ\u97f3\u4e50\" icon=\"https://i.gtimg.cn/open/app_icon/01/07/98/56/1101079856_100_m.png\" url=\"http://web.p.qq.com/qqmpmobile/aio/app.html?id=1101079856\" action=\"app\"  a_actionData=\"com.tencent.qqmusic\" i_actionData=\"tencent1101079856://\" appid=\"1101079856\" /></msg>\"\"\"\n# content = \"\"\"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><msg serviceID=\"1\" templateID=\"1\" action=\"\" brief=\"QQ\u7ea2\u5305\" sourceMsgId=\"0\" flag=\"8\" adverSign=\"0\" multiMsgFlag=\"0\"><item layout=\"6\"><title color=\"#EE00EE\" style=\"4\">\u963f\u6df1\u771f\u5e05</title><summary color=\"#9A32CD\">\u662f\u4e0d\u662f\u5f88\u65e0\u8bed</summary><picture cover=\"http:"
        },
        {
            "comment": "This code is formatting a JSON message with app details, prompt, and other information. It will be used in QQ gocqhttp post XML function.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/qq_gocqhttp_post_xml.py\":15-17",
            "content": "//t1.hddhhn.com/uploads/tu/20150507/20405-eBE9jO.jpg\" action=\"web\" url=\"http://url.cn/5g4eOiY\" w=\"0\" h=\"0\"/></item></msg>\"\"\"\n# message = \"[CQ:xml,data={}]\".format(content) # xml thing.\n# content=\"\"\"{\"app\":\"com.tencent.miniapp_01\"&#44;\"desc\":\"\u54d4\u54e9\u54d4\u54e9\"&#44;\"view\":\"view_8C8E89B49BE609866298ADDFF2DBABA4\"&#44;\"ver\":\"1.0.0.19\"&#44;\"prompt\":\"&#91;QQ\u5c0f\u7a0b\u5e8f&#93;\u54d4\u54e9\u54d4\u54e9\"&#44;\"meta\":{\"detail_1\":{\"appType\":0&#44;\"appid\":\"1109937557\"&#44;\"desc\":\"Appium \u624b\u673a App \u81ea\u52a8\u5316 + Python\"&#44;\"gamePoints\":\"\"&#44;\"gamePointsUrl\":\"\"&#44;\"host\":{\"nick\":\"Yukio\"&#44;\"uin\":1281727431}&#44;\"icon\":\"https:\\/\\/open.gtimg.cn\\/open\\/app_icon\\/00\\/95\\/17\\/76\\/100951776_100_m.png?t=1659061321\"&#44;\"preview\":\"pubminishare-30161.picsz.qpic.cn\\/a0b8d306-5b6d-4b27-9539-021a2adcc264\"&#44;\"qqdocurl\":\"https:\\/\\/b23.tv\\/4hWdtET?share_medium=android&amp;share_source=qq&amp;bbid=XY1BB721B1F97348DBDE4297FE1B4ABE26BAA&amp;ts=1665924308147\"&#44;\"scene\":1036&#44;\"shareTemplateData\":{}&#44;\"shareTemplateId\":\"8C8E89B49BE609866298ADDFF2DBABA4\"&#44;\"showLi"
        },
        {
            "comment": "This code contains two JSON strings representing messages in a chat application. The first message is from QQ and includes title, URL, and config details, while the second message is for sharing news on bilibili and has app, desc, view, ver, prompt, meta (with news info), config details, and more. Both messages contain timestamps, tokens, and forward options.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/qq_gocqhttp_post_xml.py\":17-18",
            "content": "ttleTail\":\"\"&#44;\"title\":\"\u54d4\u54e9\u54d4\u54e9\"&#44;\"url\":\"m.q.qq.com\\/a\\/s\\/ea6d34b58a6a6209cd5088c436a254de\"}}&#44;\"config\":{\"autoSize\":0&#44;\"ctime\":1665924338&#44;\"forward\":1&#44;\"height\":0&#44;\"token\":\"a2458ec4231b7b8204c717f3a955a9fc\"&#44;\"type\":\"normal\"&#44;\"width\":0}}\"\"\"\ncontent = \"\"\"{\"app\":\"com.tencent.structmsg\"&#44;\"desc\":\"\u65b0\u95fb\"&#44;\"view\":\"news\"&#44;\"ver\":\"0.0.0.1\"&#44;\"prompt\":\"&#91;\u5206\u4eab&#93;\u54d4\u54e9\u54d4\u54e9\"&#44;\"meta\":{\"news\":{\"action\":\"\"&#44;\"android_pkg_name\":\"\"&#44;\"app_type\":1&#44;\"appid\":100951776&#44;\"ctime\":1666081902&#44;\"desc\":\"\u5916\u56fd\u535a\u4e3b\u82f1\u6587\u8bb2\u89e3\uff1a\u4e8c\u5341\u5927\u4e3a\u4ec0\u4e48\u5982\u6b64\u91cd\u8981\uff1f\"&#44;\"jumpUrl\":\"https:\\/\\/b23.tv\\/B64KMQq?share_medium=android&amp;share_source=qq&amp;bbid=XY1BB721B1F97348DBDE4297FE1B4ABE26BAA&amp;ts=1666081860133\"&#44;\"preview\":\"https:\\/\\/pic.ugcimg.cn\\/58a74c8432a80e7e2de612e6e53e37f3\\/jpg1\"&#44;\"source_icon\":\"https:\\/\\/open.gtimg.cn\\/open\\/app_icon\\/00\\/95\\/17\\/76\\/100951776_100_m.png?t=1659061321\"&#44;\"source_url\":\"\"&#44;\"tag\":\"\u54d4\u54e9\u54d4\u54e9\"&#44;\"title\":\"\u54d4\u54e9\u54d4\u54e9\"&#44;\"uin\":1281727431}}&#44;\"config\":{\"ctime\":1666081902&#44;\"forward\":true&#44;\"token\":\"d7cc3a93e7c3a9acd1c8662157e3e5fb\"&#44;\"type\":\"normal\"}}\"\"\""
        },
        {
            "comment": "This code is likely related to a messaging application and involves sending messages containing XML or JSON data, possibly for a chat bot or communication tool. It includes functions for formatting the message content and converting it into CQ:json or CQ:tts formats. The content of the messages seems to be dynamic and can contain various types of data like app information, descriptions, images, and text prompts.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/qq_gocqhttp_post_xml.py\":19-33",
            "content": "# content = \"\"\"{\"app\":\"com.tencent.structmsg\"&#44;\"desc\":\"\u97f3\u4e50\"&#44;\"view\":\"music\"&#44;\"ver\":\"0.0.0.1\"&#44;\"prompt\":\"\"&#44;\"meta\":{}}\"\"\"\n# content = (\n    # \"\"\"{\"app\":\"com.tencent.structmsg\",\"desc\":\"\",\"view\":\"singleImg\",\"ver\":\"0.0.0.1\",\"prompt\":\"\u90aa\u5c11QQXML\u8bba\u575b\",\"appID\":\"\",\"sourceName\":\"\",\"actionData\":\"\",\"actionData_A\":\"\",\"sourceUrl\":\"\",\"meta\":{\"singleImg\":{\"mainImage\":\"https://gchat.qpic.cn/gchatpic_new/3020005669/916530575-2949639428-6E45D21EADE33511C565E25AB432AB59/0?term=2\",\"mainUrl\":\"\"}},\"text\":\"\",\"extraApps\":[],\"sourceAd\":\"\",\"config\":{\"forward\":1}}\"\"\".replace(\n#         \"&\", \"&amp;\"\n#     )\n#     .replace(\",\", \"&#44;\")\n#     .replace(\"[\", \"&#91;\")\n#     .replace(\"]\", \"&#93;\")\n# )\n# the token is likely to be some checksum, md5 or something. some aes/rsa?\nmessage = \"[CQ:json,data={}]\".format(content)  # json thing.\n# message = \"[CQ:tts,text=\u5624\u5624\u5624]\"\n# content = \"\"\"<?xml version='1.0' encoding='UTF-8' standalone='yes' ?><msg serviceID=\"2\" templateID=\"1\" action=\"web\" brief=\"&#91;\u5206\u4eab&#93; \u5341\u5e74\" sourceMsgId=\"0\""
        },
        {
            "comment": "The code is constructing an XML message and sending it to a web URL using the Requests library in Python. It uses go-cqhttp for communication, and the code includes a group ID and a message formatted as XML data. The response from the server is printed in JSON format.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/qq_gocqhttp_post_xml.py\":33-39",
            "content": " url=\"http://music.163.com/m/song/409650368\" flag=\"0\" adverSign=\"0\" multiMsgFlag=\"0\" ><item layout=\"2\"><audio cover=\"http://p2.music.126.net/g-Qgb9ibk9Wp_0HWra0xQQ==/16636710440565853.jpg?param=90y90\" src=\"https://music.163.com/song/media/outer/url?id=409650368.mp3\" /><title>\u5341\u5e74</title><summary>\u9ec4\u68a6\u4e4b</summary></item><source name=\"\u7f51\u6613\u4e91\u97f3\u4e50\" icon=\"https://pic.rmb.bdstatic.com/911423bee2bef937975b29b265d737b3.png\" url=\"http://web.p.qq.com/qqmpmobile/aio/app.html?id=1101079856\" action=\"app\" a_actionData=\"com.netease.cloudmusic\" i_actionData=\"tencent100495085://\" appid=\"100495085\" /></msg>\"\"\"\n# message = '[CQ:xml,data={}]'.format(content)\ndata = {\"group_id\": group, \"message\": message, \"auto_escape\": False}\nr = requests.post(url, data=data)\nprint(r.json())\n# cannot send json. wtf?\n# \u8bf7\u53c2\u8003 go-cqhttp \u7aef\u8f93\u51fa"
        }
    ]
}