{
    "summary": "This function generates a video sequence with input \"seq\" and duration, applies filters to each clip, uses vidpy library for handling video composition, and saves the final composition as a video file.",
    "details": [
        {
            "comment": "This function generates a video sequence based on input \"seq\" and duration, with each clip corresponding to a number in the sequence. It reads image files from \"/root/Desktop/works/bilibili_tarot/demo_typography/\" and applies various filters (vignette, dust, dithering, pixelize) to each clip before adding it to the list of clips. The function uses vidpy library for handling video composition and Clip class for each image frame.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/bilibili_practices/bilibili_tarot/functional_gen_typo_video_seq.py\":0-38",
            "content": "# seq = [0,1,2,3,4,5,6] # 7\n# duration = 4\nfrom vidpy import Composition, Clip\ndef gen_video(vname, seq, duration):\n    mduration = duration / len(seq)\n    clips = []\n    width,height =1920,1080\n    fps=60\n    orig_fps = 24\n    shift = fps/orig_fps\n    for i,s in enumerate(seq):\n        codec = str(s)\n        codec = \"0\"*(4-len(codec)) + codec\n        path = \"/root/Desktop/works/bilibili_tarot/demo_typography/screenshot{}.png\".format(codec)\n        start = i*mduration\n        end = start + mduration\n        print(start,end)\n        clip = Clip(path,output_fps=fps,start=0,end=mduration*shift,offset = start*shift,profile_override = {\"fps\":60,\"width\": width, \"height\": height})\n        clip.vignette()\n        clip.dust()\n        # clip.charcoal()\n        clip.dither(amount=0.10)\n        # clip.\n        # clip.pixelize()\n        clip.pixelize(width = 0.002,height=0.002)\n        clips.append(clip)\n    # breakpoint()\n    # # maybe some other bgm.\n    # bgm = Clip(bgm_path,start=0)\n    # clips.append(bgm)\n    # breakpoint()"
        },
        {
            "comment": "The code above creates a Composition object with the specified clips, duration, fps, width, and height. Then, it saves this composition as a video file under the given 'vname' while maintaining the same settings.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/bilibili_practices/bilibili_tarot/functional_gen_typo_video_seq.py\":39-41",
            "content": "    comp = Composition(clips,duration=duration,fps=fps,width=width,height=height)\n    comp.save(vname,fps=60,duration = duration,width=width,height=height)"
        }
    ]
}