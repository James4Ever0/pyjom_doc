{
    "summary": "The code tests a video file for corruption by using ffmpeg to input the video, output it to null format, and then checks if any error or failure messages appear in the stderr. If such messages are found, the video is considered corrupted.",
    "details": [
        {
            "comment": "The code tests a video file for corruption by using ffmpeg to input the video, output it to null format, and then checks if any error or failure messages appear in the stderr. If such messages are found, the video is considered corrupted.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/unittest_check_video_corrput.py\":0-27",
            "content": "import ffmpeg\nnot_nice = [\"invalid\", \"failed\", \"error\"]\nvideoPath = \"/root/Desktop/works/pyjom/samples/video/dog_with_large_text.gif\"\n# videoPath = \"/root/Desktop/works/pyjom/samples/video/cute_cat_gif.gif\"\n# videoPath = \"/root/Desktop/works/pyjom/samples/video/corrupt_video.gif\"\ncorrupted = False\ntry:\n    stdout, stderr = (\n        ffmpeg.input(videoPath)\n        .output(\"null\", f=\"null\")\n        .run(capture_stdout=True, capture_stderr=True)\n    )\n    stderr_lower = stderr.decode(\"utf-8\").lower()\n    for word in not_nice:\n        if word in stderr_lower:\n            print(\"video is corrupted\")\n            corrupted = True\n            break\nexcept:\n    import traceback\n    traceback.print_exc()\n    corrupted = True\n    print(\"corrupt video\")\nif not corrupted:\n    print(\"video is fine\")"
        }
    ]
}