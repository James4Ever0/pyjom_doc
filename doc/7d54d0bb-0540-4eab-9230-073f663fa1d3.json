{
    "summary": "The code creates an Action object for QQ messages, handles cover options, and sends XML/JSON messages using `sendFriendXml`/`sendGroupXml`. The \"SendMsgV2\" function sends a QQ message with XML content via a POST request to \"/v1/LuaApiCaller\", including the title, summary, and URL of a music file.",
    "details": [
        {
            "comment": "The code is creating an Action object with QQ number, port, and host. It also includes a variable for the user, cover image URLs, and a template XML message with specific parameters. The current cover URL seems to be causing issues and there are alternative options provided.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/test_upload_xml_qq.py\":0-11",
            "content": "from botoy import Action\nqq = 917521610\nport = 8784\naction = Action(qq=qq, port=port, host=\"127.0.0.1\")\nuser = 1281727431\n# but the goddamn xml format is not right.\n# cover = \"http://inews.gtimg.com/newsapp_bt/0/15352117085/640\"\ncover = \"http://pubminishare-30161.picsz.qpic.cn/d4ad36fa-833e-4018-b994-a2da810f2d54\"\n# just need a better cover. i don't know.\n# cover = \"https://i0.hdslb.com/bfs/archive/c5a0d18ee077fb6a4ac0970ccb0a3788e137d14f.jpg\" # works.\n# content = \"\"\"<?xml version='1.0' encoding='UTF-8' standalone='yes'?><msg templateID=\"123\" url=\"https://b23.tv/5K7qh7K?share_medium=android&amp;share_source=qq&amp;bbid=XY46C7C4C74C8D645671EF7E8F4CC7810054A&amp;ts=1657521142233\" serviceID=\"1\" action=\"web\" actionData=\"\" a_actionData=\"\" i_actionData=\"\" brief=\"[QQ\u5c0f\u7a0b\u5e8f]\u54d4\u54e9\u54d4\u54e9\" flag=\"0\"><item layout=\"2\"><picture cover=\"{}\"/><title>\u54d4\u54e9\u54d4\u54e9</title><summary>\u3010C\u8bed\u8a00\u3011\u300a\u5e26\u4f60\u5b66C\u5e26\u4f60\u98de\u300b</summary></item><source url=\"https://b23.tv/5K7qh7K?share_medium=android&amp;share_source=qq&amp;bbid=XY46C7C4C74C8D645671EF7E8F4CC7810054A&"
        },
        {
            "comment": "This code is formatting XML content for a QQ message template, including the URL, app icon, and app name. The code is using string formatting to replace placeholders with actual data before sending it via QQ.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/test_upload_xml_qq.py\":11-15",
            "content": "amp;ts=1657521142233\" icon=\"https://open.gtimg.cn/open/app_icon/00/95/17/76/100951776_100_m.png?t=1657091104\" name=\"\u54d4\u54e9\u54d4\u54e9\" appid=\"0\" action=\"web\" actionData=\"\" a_actionData=\"tencent0://\" i_actionData=\"\"/></msg>\"\"\".format(\n    # cover\n# )\n# content = \"\"\"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><msg templateID=\"123\" url=\"https://b23.tv/uHML5mi?share_medium=android&amp;share_source=qq&amp;bbid=XY1BB721B1F97348DBDE4297FE1B4ABE26BAA&amp;ts=1666023406285\" serviceID=\"1\" action=\"web\" actionData=\"\" a_actionData=\"\" i_actionData=\"\" brief=\"[QQ\u5c0f\u7a0b\u5e8f]\u54d4\u54e9\u54d4\u54e9\" flag=\"0\"><item layout=\"2\"><picture cover=\"{}\"/><title>\u3010AI\u52a8\u753b\u3011\u59ae\u9732PV\u52a8\u753b \u98ce\u8f6c\u6362\u3010NovelAI\u3011</title></item><source url=\"https://b23.tv/uHML5mi?share_medium=android&amp;share_source=qq&amp;bbid=XY1BB721B1F97348DBDE4297FE1B4ABE26BAA&amp;ts=1666023406285\" icon=\"http://miniapp.gtimg.cn/public/appicon/432b76be3a548fc128acaa6c1ec90131_200.jpg\" name=\"\u54d4\u54e9\u54d4\u54e9\" appid=\"0\" action=\"app\" actionData=\"\" a_actionData=\"tencent0://\" i_actionData=\"\"/></msg>\"\"\".format(cover)\n# i guess, it is just the way it send the data is different."
        },
        {
            "comment": "This code attempts to send XML messages using the `sendFriendXml` and `sendGroupXml` methods. The first content is intended for individual chats, while the second content is meant for group chats. It encounters an error when sending group XML and suggests that using \"com.tencent.structmsg\" might be a solution.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/test_upload_xml_qq.py\":16-25",
            "content": "# result= action.sendFriendXml(user=user, content=content)\n# print(result)\n# content=\"\"\"{\"app\":\"com.tencent.gamecenter.gameshare\",\"desc\":\"\",\"view\":\"singleImg\",\"ver\":\"0.0.0.0\",\"prompt\":\"\u90aa\u5c11QQXML\u8bba\u575b\",\"appID\":\"\",\"sourceName\":\"\",\"actionData\":\"\",\"actionData_A\":\"\",\"sourceUrl\":\"\",\"meta\":{\"singleImg\":{\"mainImage\":\"https://gchat.qpic.cn/gchatpic_new/3020005669/916530575-2949639428-6E45D21EADE33511C565E25AB432AB59/0?term=2\",\"mainUrl\":\"\"}},\"config\":{\"forward\":1},\"text\":\"\",\"sourceAd\":\"\"}\"\"\"\ngroup = 543780931\n# have error when sending group xml? why?\n# result = action.sendGroupXml(group=group, content=content)\n# successful!\n# this 'com.tencent.structmsg' might be our way. just maybe.\ncontent = \"\"\"{\"app\":\"com.tencent.structmsg\",\"desc\":\"\",\"view\":\"news\",\"ver\":\"0.0.0.1\",\"prompt\":\"\u90aa\u5c11QQXML\u8bba\u575b\",\"appID\":100951776,\"sourceName\":\"\",\"actionData\":\"\",\"actionData_A\":\"\",\"sourceUrl\":\"\",\"meta\":{\"singleImg\":{\"mainImage\":\"https://gchat.qpic.cn/gchatpic_new/3020005669/916530575-2949639428-6E45D21EADE33511C565E25AB432AB59/0?term=2\",\"mainUrl\":\"\"}},\"text\":\"\",\"extraApps\":[],\"sourceAd\":\"\",\"config\":{\"forward\":1}}\"\"\""
        },
        {
            "comment": "Sending a group message in JSON format, with the option to send in XML format as well. The content variable holds the message data, and the result is the response from sending the message. Printing the result for further use or logging.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/test_upload_xml_qq.py\":26-32",
            "content": "# content = \"\"\"{\"app\":\"com.tencent.gamecenter.gameshare\",\"desc\":\"\",\"view\":\"singleImg\",\"ver\":\"0.0.0.0\",\"prompt\":\"\u90aa\u5c11QQXML\u8bba\u575b\",\"appID\":\"\",\"sourceName\":\"\",\"actionData\":\"\",\"actionData_A\":\"\",\"sourceUrl\":\"\",\"meta\":{\"singleImg\":{\"mainImage\":\"https://gchat.qpic.cn/gchatpic_new/3020005669/916530575-2949639428-6E45D21EADE33511C565E25AB432AB59/0?term=2\",\"mainUrl\":\"\"}},\"text\":\"\",\"extraApps\":[],\"sourceAd\":\"\",\"config\":{\"forward\":1}}\"\"\"\n# content = \"\"\"<?xml version='1.0' encoding='UTF-8' standalone='yes' ?><msg templateID=\"123\" url=\"https://b23.tv/uHML5mi?share_medium=android&amp;share_source=qq&amp;bbid=XY1BB721B1F97348DBDE4297FE1B4ABE26BAA&amp;ts=1666023406285\" serviceID=\"1\" action=\"web\" actionData=\"\" a_actionData=\"\" i_actionData=\"\" brief=\"[QQ\u5c0f\u7a0b\u5e8f]\u54d4\u54e9\u54d4\u54e9\" flag=\"0\"></msg>\"\"\"\nresult = action.sendGroupJson(group=group, content=content)\n# result = action.sendGroupXml(group=group, content=content)\nprint(result)\n# result = action.sendGroupText(group=group,content='test')\n# result = action.sendGroupText(group=group,content=content)"
        },
        {
            "comment": "This code defines a function named \"SendMsgV2\" and includes an XML content string. The XML contains message details for QQ messenger, including the service ID, template ID, action, brief, source message ID, URL, flag, adverSign, multiMsgFlag, and item layout. It sets the message title and summary, as well as specifying the URL to share a song from QQ music.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/test_upload_xml_qq.py\":33-35",
            "content": "# funcname = \"SendMsgV2\"\n# content = \"\"\"<?xml version='1.0' encoding='UTF-8' standalone='yes' ?><msg serviceID='1' templateID='1' action='' brief='&#91;\u7fa4\u50f5\u5c38\u4efb\u52a1&#93;' sourceMsgId='0' url='' flag='2' adverSign='0' multiMsgFlag='0'><item layout='0'><title size='38' color='#9900CC' style='1'>\ud83c\udd95\u5df2\u7ecf\u542f\u52a8\ud83c\udd95</title></item><item layout='0'><hr hidden='false' style='0' /></item><item layout='6'><summary color='#FF0033'>1\u20e3\ufe0f</summary><summary color='#FF0099'>\ud83d\udcaa\u6b63\u5728\u626b\u79d2\u50f5\u5c38\ud83d\udcaa</summary></item><source name='' icon='' action='' appid='-1' /></msg>\"\"\"\n# content = \"\"\"<?xml version='1.0' encoding='UTF-8' standalone='yes' ?><msg serviceID=\"2\" templateID=\"1\" action=\"web\" brief=\"&#91;\u5206\u4eab&#93; \u5341\u5e74\" sourceMsgId=\"0\" url=\"https://i.y.qq.com/v8/playsong.html?_wv=1&amp;songid=4830342&amp;souce=qqshare&amp;source=qqshare&amp;ADTAG=qqshare\" flag=\"0\" adverSign=\"0\" multiMsgFlag=\"0\" ><item layout=\"2\"><audio cover=\"http://imgcache.qq.com/music/photo/album_500/26/500_albumpic_89526_0.jpg\" src=\"http://ws.stream.qqmusic.qq.com/C400003mAan70z"
        },
        {
            "comment": "This code snippet is sending an XML message to QQ with content and media information for a music file. The message includes details such as title, summary, and URL of the music file along with the source name and icon of QQ Music app. It also specifies the action and action data associated with the app.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/test_upload_xml_qq.py\":35-40",
            "content": "Uy5O.m4a?guid=1535153710&amp;vkey=D5315B8C0603653592AD4879A8A3742177F59D582A7A86546E24DD7F282C3ACF81526C76E293E57EA1E42CF19881C561275D919233333ADE&amp;uin=&amp;fromtag=3\" /><title>\u5341\u5e74</title><summary>\u9648\u5955\u8fc5</summary></item><source name=\"QQ\u97f3\u4e50\" icon=\"https://i.gtimg.cn/open/app_icon/01/07/98/56/1101079856_100_m.png\" url=\"http://web.p.qq.com/qqmpmobile/aio/app.html?id=1101079856\" action=\"app\"  a_actionData=\"com.tencent.qqmusic\" i_actionData=\"tencent1101079856://\" appid=\"1101079856\" /></msg>\"\"\"\n# content = \"\"\"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><msg serviceID=\"1\" templateID=\"1\" action=\"\" brief=\"QQ\u7ea2\u5305\" sourceMsgId=\"0\" flag=\"8\" adverSign=\"0\" multiMsgFlag=\"0\"><item layout=\"6\"><title color=\"#EE00EE\" style=\"4\">\u963f\u6df1\u771f\u5e05</title><summary color=\"#9A32CD\">\u662f\u4e0d\u662f\u5f88\u65e0\u8bed</summary><picture cover=\"http://t1.hddhhn.com/uploads/tu/20150507/20405-eBE9jO.jpg\" action=\"web\" url=\"http://url.cn/5g4eOiY\" w=\"0\" h=\"0\"/></item></msg>\"\"\"\n# payload = {\n#     \"ToUserUid\": group,\n#     \"SendToType\": 2,\n#     \"SendMsgType\": \"XmlMsg\","
        },
        {
            "comment": "Sending XML data via POST request to \"/v1/LuaApiCaller\" with QQ number and funcname parameters, then printing the result.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/bilibili_video_recommendation_server/xml_and_json_qq_send/test_upload_xml_qq.py\":41-50",
            "content": "#     \"Content\": content,\n# }\n# result = action.baseRequest(\n#     method=\"POST\",\n#     funcname=funcname,\n#     path=\"/v1/LuaApiCaller\",\n#     params={\"qq\": qq, \"funcname\": funcname},\n#     payload=payload,\n# )\n# print(result)"
        }
    ]
}