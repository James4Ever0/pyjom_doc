{
    "summary": "Generates a video sequence by splitting images into clips with adjusted duration and fps, appends background music clip, composes the clips into a single composition, and saves it as \"typography_demo.mp4\".",
    "details": [
        {
            "comment": "Generates a video sequence by splitting images into clips with adjusted duration and fps, appends background music clip, composes the clips into a single composition, and saves it as \"typography_demo.mp4\".",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/bilibili_practices/bilibili_tarot/gen_typo_video_seq.py\":0-34",
            "content": "seq = [0,1,2,3,4,5,6] # 7\nduration = 4\nmduration = duration / len(seq)\nfrom vidpy import Composition, Clip\nclips = []\nwidth,height =1920,1080\nfps=60\norig_fps = 24\nshift = fps/orig_fps\nfor i,s in enumerate(seq):\n    codec = str(s)\n    codec = \"0\"*(4-len(codec)) + codec\n    path = \"/root/Desktop/works/bilibili_tarot/demo_typography/screenshot{}.png\".format(codec)\n    start = i*mduration\n    end = start + mduration\n    print(start,end)\n    clip = Clip(path,output_fps=fps,start=0,end=mduration*shift,offset = start*shift,profile_override = {\"fps\":60,\"width\": width, \"height\": height})\n    clips.append(clip)\n# breakpoint()\nbgm_path = \"/root/Desktop/works/bilibili_tarot/some_bgm.mp3\"\n# maybe some other bgm.\nbgm = Clip(bgm_path,start=0)\nclips.append(bgm)\n# breakpoint()\ncomp = Composition(clips,duration=duration,fps=fps,width=width,height=height)\ncomp.save(\"typography_demo.mp4\",fps=60,duration = duration,width=width,height=height)"
        }
    ]
}