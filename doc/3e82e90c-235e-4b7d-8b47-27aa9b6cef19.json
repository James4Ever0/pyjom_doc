{
    "summary": "This code snippet demonstrates the use of FFmpeg to process video files using motion estimation, crop detection, and other filters. It shows how to output motion vectors, find picture-in-picture (PIP) scenarios, and obtain help on filter usage. The code snippets are for testing purposes and can be used to analyze video processing tasks in the pyjom project.",
    "details": [
        {
            "comment": "This code snippet demonstrates the use of FFmpeg to process video files using motion estimation, crop detection, and other filters. It shows how to output motion vectors, find picture-in-picture (PIP) scenarios, and obtain help on filter usage. The code snippets are for testing purposes and can be used to analyze video processing tasks in the pyjom project.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/vapoursynth_linux_test/motion_estimation.sh\":1-12",
            "content": "# output motion vectors.\n# ffmpeg -i \"/root/Desktop/works/pyjom/tests/random_giphy_gifs/samoyed.gif\" -vf \"mestimate=epzs:mb_size=16:search_param=7, codecview=mv=pf+bf+bb\"  mestimate_output.mp4 -y\n# not just toy, but can find PIP\n# picture in picture, crop detect?\nffmpeg -i \"/root/Desktop/works/pyjom/samples/video/LiEIfnsvn.mp4\" -flags2 +export_mvs -vf \"fps=5,mestimate=epzs:mb_size=16:search_param=7,cropdetect=mode=mvedges,metadata=mode=print\" -f null - # no printing?\n# ffmpeg -i \"/root/Desktop/works/pyjom/samples/video/LiEIfnsvn.mp4\" -vf \"mestimate,cropdetect=mode=mvedges,metadata=mode=print\" -f null -\n# get help on filter:\n# ffmpeg -h filter=showspectrumpic"
        }
    ]
}