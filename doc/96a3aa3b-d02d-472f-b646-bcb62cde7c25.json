{
    "summary": "This code rewrites a Python source file by adding the `@reloading` decorator to functions using the Comby library. It reads the old source, replaces the function definitions with the decorated versions, and optionally adds an import statement for reloading if changes are made.",
    "details": [
        {
            "comment": "This code rewrites a Python source file by adding the `@reloading` decorator to functions using the Comby library. It reads the old source, replaces the function definitions with the decorated versions, and optionally adds an import statement for reloading if changes are made.",
            "location": "\"/media/root/Toshiba XG3/works/pyjom_doc/src/tests/skipexception_code_and_continue_resurrection_time_travel_debugging/test_code/rewrite.py\":0-24",
            "content": "from comby import Comby\ncomby = Comby()\n# better not to use this!\ndef rewrite(source_old):\n    # match = ':[prefix~$]def :[functionName](:[args]):'\n    match = ':[prefix~$]def :[functionName](:[args]):'\n    # match = ':[prefix~\\n$]def :[functionName](:[args]):'\n    rewrite = ':[prefix]\\n@reloading\\ndef :[functionName](:[args]):'\n    source_new = comby.rewrite(source_old, match, rewrite,language='.py')\n    if source_new !=source_old:\n        source_new = 'from reloading import reloading\\n'+source_new\n    return source_new\nif __name__ == \"__main__\":\n    source_old = open('test2.py','r').read()\n    # source_old = open('/root/Desktop/works/pyjom/pyjom/platforms/bilibili/uploader.py','r').read()\n    # source_old = open('/root/Desktop/works/pyjom/pyjom/platforms/bilibili/uploader.py','r').read()\n    # comby = Comby()\n    source_new = rewrite(source_old)\n    print(source_new)"
        }
    ]
}